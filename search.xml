<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AirPods Max：高调奏响</title>
      <link href="airpodsmax/"/>
      <url>airpodsmax/</url>
      
        <content type="html"><![CDATA[<p>就在刚刚，苹果悄悄在官网更新一款重磅新品。传闻已久的苹果首款头戴式耳机 AirPods Max 终于正式亮相。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgtst31xwj30hs0buglz.jpg" alt=""></p><p>从去年开始，我们就已经从各路爆料人、iOS 系统的「彩蛋」里得知了这款产品的存在，并曾期待在苹果秋季发布会上见到它，可悬念始终未被揭晓。</p><p>随着 11 月上旬推出的 iOS14.3 Beta 里，再次出现了头戴式耳机的图标，我们有理由相信，苹果会在在 iOS14.3 正式版推出前，发布 AirPods Max。这个猜想在今天得到了证实。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgtt8dbmtj30hs0e8t8s.jpg" alt=""></p><p>从外观上看，AirPods Max 秉持了苹果一贯的简约风格，共有五种的颜色，包括太空灰色、银色、天蓝色、绿色和粉红色，机身上的线条十分流畅、简单。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgttknwc4g30hs0noqv5.gif" alt=""></p><p>与 AirPods 和 AirPods Pro 采用的光滑圆润塑料外壳不同，AirPods Max 罩体采用更为精致的金属外壳设计，椭圆形的耳罩为透气的织布材料，头梁则是网布织物衬垫。<br>重量方面控制的不错，连耳罩共重 384 克，佩戴上应该不会有明显的压头感。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgttqfd06j30hs0ow0wy.jpg" alt=""></p><p>功能方面，AirPods Max 的亮点可以总结为以下几点：</p><ul><li>更好的音质，支持主动降噪</li><li>佩戴感应，自动播放/暂停</li><li>实体旋钮操控</li><li>效果更好的虚拟声场</li><li>续航 20 小时</li></ul><p>随着降噪耳机的不断普及，用户对降噪的需求也逐步增长。在 AirPods Pro 推出 1 年后，苹果在降噪方面已经有了相对成熟的产品经验。AirPods Max 支持主动降噪也在情理之中。</p><p>AirPods Max 的麦克风阵容非常豪华，共有九个麦克风：八个用于主动降噪的麦克风 ，三个用于语音拾取的麦克风 （其中一个专用于语音拾取，两个同时用于主动降噪），这让人非常期待它的降噪表现。</p><p>一般来说头戴式耳机凭借着包裹性设计和更大的单元，在降噪效果和音质上都会优于入耳式耳机。</p><p>AirPods Max 搭载的依然是去年应用在新 AirPods 和 AirPods Pro 上的 H1 芯片，利用每个芯片的 10 个音频核心（每秒可执行 90 亿次操作）可以带来包括自适应降噪、完全降噪模式、通透模式和空间音频等功能。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgturazucj30hs0a0wew.jpg" alt=""></p><p>AirPods Max 允许用户在 iPhone、iPad 和 Mac 之间无缝切换声音。在 Mac 上播放音乐时，用户也可以轻松地在 iPhone 上接听电话，AirPods Max 会自动切换。</p><p>另外 AirPods Max 内置了光学和位置传感器，可以实现自动播放或暂停播放音频。一旦摘掉或抬起一只耳罩，耳机就会自动暂停播放。</p><p>调节音量方面，AirPods Max 在耳罩上加入了一颗实体旋钮，让调节音量的盲操作更加准确。</p><p>通过实体旋钮，可以实现多种音乐控制，例如按下暂停/播放、按两下切换下一首等。除此之外还有一颗噪音控制按钮，可以非常方便在降噪与通透模式下切换。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgtvftkrqj30hs0owdgu.jpg" alt=""></p><p>在 TWS 的音质和降噪技术遇到瓶颈的当下，如何让产品更具看点，是厂商需要考虑的问题。苹果给出的答案是「空间音频」。</p><p>此前 AirPods Pro 搭配 iOS14，已经可以体验到空间音频效果。用户可以从虚拟声场中获得什么呢？其实就是更逼真的听觉体验。尤其在看电影时，更强的方向感会让你有身临其境的感觉，加大视听的沉浸感。</p><p>而 AirPods Max 凭借更大的发声单元，理论上会带来更出色的空间音频效果。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgtw1fp8hj30hs0owwfb.jpg" alt=""></p><p>与入耳式耳机不同的是，头戴式无线耳机在续航上有先天的优势。根据苹果的说法，AirPods Max 支持 20 个小时续航。相比于 AirPods Pro 的 4.5 小时单次聆听时间，更长续航的 AirPods Max 可以让人一次听个够。</p><p>另外，AirPods Max 配备了柔软纤细的智能外壳，可使 AirPods Max 处于超低功耗状态，有助于用户在不使用时保持电池电量。</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glgtwt4fvqj30hs0cpweo.jpg" alt=""></p><p>AirPods Max 售价为 4399 元人民币。即日起开启预售，12 月 15 日开始发货。苹果这波发售正好赶上了西方的圣诞节， 自带保暖效果的 AirPods Max 应该会是这个冬天的送礼首选。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年度飞行报告</title>
      <link href="2020%E5%B9%B4%E5%BA%A6%E9%A3%9E%E8%A1%8C%E6%8A%A5%E5%91%8A/"/>
      <url>2020%E5%B9%B4%E5%BA%A6%E9%A3%9E%E8%A1%8C%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="飞行数据"><a href="#飞行数据" class="headerlink" title="飞行数据"></a>飞行数据</h2><div class="table-container"><table><thead><tr><th style="text-align:center">航班号</th><th style="text-align:center">出发地</th><th style="text-align:center">目的地</th><th style="text-align:center">日期</th><th style="text-align:center">航空公司</th></tr></thead><tbody><tr><td style="text-align:center">GS6582</td><td style="text-align:center">杭州萧山</td><td style="text-align:center">重庆江北</td><td style="text-align:center">2020-01-01</td><td style="text-align:center">天津航空</td></tr><tr><td style="text-align:center">PN6211</td><td style="text-align:center">重庆江北</td><td style="text-align:center">三亚凤凰</td><td style="text-align:center">2020-01-19</td><td style="text-align:center">西部航空</td></tr><tr><td style="text-align:center">3U8759</td><td style="text-align:center">三亚凤凰</td><td style="text-align:center">重庆江北</td><td style="text-align:center">2020-03-06</td><td style="text-align:center">四川航空</td></tr><tr><td style="text-align:center">CA1760</td><td style="text-align:center">重庆江北</td><td style="text-align:center">杭州萧山</td><td style="text-align:center">2020-07-21</td><td style="text-align:center">中国国航</td></tr><tr><td style="text-align:center">HU7469</td><td style="text-align:center">杭州萧山</td><td style="text-align:center">重庆江北</td><td style="text-align:center">2020-07-31</td><td style="text-align:center">海南航空</td></tr></tbody></table></div><p>共飞行 5 段，航程 7500 km，时间 11.5 h。</p><h2 id="综合情况"><a href="#综合情况" class="headerlink" title="综合情况"></a>综合情况</h2><h3 id="飞行热力图（中国地区）"><a href="#飞行热力图（中国地区）" class="headerlink" title="飞行热力图（中国地区）"></a>飞行热力图（中国地区）</h3><p><strong>数据自2013年起统计</strong></p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gl7los3htzj318w0lun3b.jpg" alt=""></p><h3 id="机型打卡情况"><a href="#机型打卡情况" class="headerlink" title="机型打卡情况"></a>机型打卡情况</h3><p>覆盖全国 $99$% 的机型，乘坐比例：</p><div class="mermaid">pie    title 机型乘坐比例    &quot;A320&quot; : 60    &quot;B737&quot; : 20    &quot;A319&quot; : 13    &quot;A321&quot; :  6    &quot;其他&quot;  : 1</div><h4 id="已打卡机型"><a href="#已打卡机型" class="headerlink" title="已打卡机型"></a>已打卡机型</h4><ul><li>A319</li><li>A320</li><li>A321</li><li>A330</li><li>B737</li><li>B737NG</li><li>B747</li><li>B787</li><li>CRJ-700</li><li>CRJ-900</li></ul><h4 id="未打卡机型"><a href="#未打卡机型" class="headerlink" title="未打卡机型"></a>未打卡机型</h4><ul><li>A350</li><li>A380</li><li>B777 </li></ul><h3 id="航空公司乘坐次数"><a href="#航空公司乘坐次数" class="headerlink" title="航空公司乘坐次数"></a>航空公司乘坐次数</h3><p><strong>数据自2018年起统计</strong></p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gl7leshw0ej30dx08q770.jpg" alt=""></p><h3 id="机场到访次数"><a href="#机场到访次数" class="headerlink" title="机场到访次数"></a>机场到访次数</h3><p><strong>数据自2013年起统计</strong></p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gl7lfxlko1j30f60abjuk.jpg" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 民航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 Apple 发布会（三）</title>
      <link href="apple2020-3/"/>
      <url>apple2020-3/</url>
      
        <content type="html"><![CDATA[<h2 id="发布会回放"><a href="#发布会回放" class="headerlink" title="发布会回放"></a>发布会回放</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=927683222&bvid=BV1ST4y1F7ze&cid=254651314&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><p>双十一凌晨2点，在苹果在Apple Park 发布了苹果自主研发的第一款Mac使用的SOC及多款搭载该芯片的Mac。重点都在于此次的苹果自己的芯片。</p><p>话不多说！我们赶紧开始今天的内容</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllnwtufzj30rs0j5abr.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllo5ll2nj30u00ce3zo.jpg" alt=""></p><h2 id="M1芯片"><a href="#M1芯片" class="headerlink" title="M1芯片"></a>M1芯片</h2><p>苹果在WWDC 2020上宣布，计划从2020年底开始从英特尔芯片过渡到使用自己的苹果硅芯片制造的Mac<br>苹果的定制芯片基于Arm，类似于iPhone和iPad所使用的A系列芯片</p><p>专业级应该还是英特尔这些，但苹果可能也是想逐步加强对整个供应链的控制能力苹果</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllox7ozlj30u00c80tf.jpg" alt=""></p><p>M1 芯片共有160亿个晶体管，使用5nm制程工艺，拥有 8 核心的 GPU，其中有4枚大核以及4枚高效能小核</p><p>是最新 PC 芯片 GPU 性能的两倍，同时功耗控制只有三分之一</p><p>1万亿次/秒算力，苹果不止强调了一次，M1芯片现在是地表最强的移动端CPU</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllpaj0wmj30u00dfwf7.jpg" alt=""></p><p>随着新Mac的推出，macOS Big Sur系统也随之推出。配合M1芯片，macOS Big Sur在响应速度上更快<br>即使运行3D软件和创作内容也不在话下，软件方面支持苹果第一方软件，比如iMovie、Pages。另外，Photoshop等应用后续也将支持</p><p>还有一点是最重要的，所有 iOS 和 iPadOS 应用都可以运行在 M1 处理器 Mac 上了</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllpmqho3j30u00f80tz.jpg" alt=""></p><h2 id="MacBook-Air"><a href="#MacBook-Air" class="headerlink" title="MacBook Air"></a>MacBook Air</h2><p>首款基于M1芯片的Mac来了。它的外观更接近MacBook Air，是一款轻型的笔记本电脑<br>官方称性能方面这款搭载M1芯片的新MacBook Air比同类型电脑搭载的芯片快98%</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllq0fc2nj30u00dat9i.jpg" alt=""></p><p>屏幕方面，13寸屏幕支持P3广色域，键盘支持Touch ID取消了Touch Bar的设计。新MacBook Air价格从7999元起</p><h2 id="Mac-mini"><a href="#Mac-mini" class="headerlink" title="Mac mini"></a>Mac mini</h2><p>第二款基于M1芯片是Mac mini，同样是8核CPU+8核GPU，你可以将Mac mini连接显示器，做编程、看电影、甚至是玩游戏</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllqhrrfsj30u00br0t7.jpg" alt=""></p><p>M1 处理器让mac mini机器学习能力相比前代提升15倍；GPU提升6倍，能完成更多图形类工作；全新 Mac mini CPU 性能比前代提升3倍</p><p>和刚才发布的Air不同，Mac mini内置风扇，也意味着可以干更多大型软件。Mac mini背部接口有雷电接口、网口、HDMI2.0、USB-A以及3.5毫米耳机口</p><p>最具性价比的Mac来了！搭载苹果自研M1芯片的Mac mini正式发布,售价5299元起</p><h2 id="MacBook-Pro"><a href="#MacBook-Pro" class="headerlink" title="MacBook Pro"></a>MacBook Pro</h2><p>M1 芯片的 MacBook Pro 也来了，20 小时的续航，为史上续航最强的Mac</p><p>GPU 性能是现款产品的 5 倍，支持 Wi-Fi 6，支持 雷电 4，可以剪辑 8K 视频，内置风扇，售价9999元起</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllreyqo7j30u00demyk.jpg" alt=""></p><p>今天发布的这三款新 Mac，MacBook Pro 、MacBook Air 以及 Mac mini，现在就可以预定下周开卖，而 macOS Big Sur 正式版将在 11 月 12 日发布</p><h2 id="写在最后，苹果为何要做出改变？"><a href="#写在最后，苹果为何要做出改变？" class="headerlink" title="写在最后，苹果为何要做出改变？"></a>写在最后，苹果为何要做出改变？</h2><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkllth3jc3j30u00enabt.jpg" alt=""></p><p>苹果公司正在采用自己的强大技术来制造更好的Mac，苹果公司表示，自己的M1芯片将通过功能更强大的Mac带来更高的性能，同时也更加节能<br>其先进的电源管理功能将实现最大化的性能，并具有比以往更长的电池寿命</p><p>很期待苹果M1芯片的实际表现，</p><p>Mac上可以跑iOS/iPad OS的应用，而移动设备也可以跑Mac上的应用，实现真正的“大一统”</p><p>而走出这一步之后，苹果终于有可能实现 iPhone、iPad、Mac 上的深度整合</p><p>谷歌的跨平台系统Fuschia还没落地，华为的鸿蒙才刚刚开始，苹果却已经做到了从软件到硬件的跨平台“大一统”，不得不感叹，苹果实在是太强了…</p><p>终于明白今年iPad Pro（2020）的宣传语“你的下一台电脑何必是电脑”，这句话原来是在下一盘大棋</p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-J/S 2020 复赛试卷</title>
      <link href="CSP2020-2/"/>
      <url>CSP2020-2/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>此文章于 2020 年 11 月 7 日 20:30 发布，不存在任何提前泄题的现象。</p></div><p><a href="https://yuzhenghao.cn/file/CSP-S2.pdf">提高组</a></p><p><a href="https://yuzhenghao.cn/file/CSP-J2.pdf">普及组</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S复赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 CSP-J/S 第一轮试卷</title>
      <link href="CSP2020/"/>
      <url>CSP2020/</url>
      
        <content type="html"><![CDATA[<h2 id="提高组"><a href="#提高组" class="headerlink" title="提高组"></a>提高组</h2><p><a href="https://yuzhenghao.cn/file/CSP2020-TG-A.pdf">全国A卷</a></p><p><a href="https://yuzhenghao.cn/file/CSP2020-TG-B.pdf">全国B卷</a></p><h2 id="普及组"><a href="#普及组" class="headerlink" title="普及组"></a>普及组</h2><p><a href="https://yuzhenghao.cn/file/CSP2020-PJ-A.pdf">全国A卷</a></p><p><a href="https://yuzhenghao.cn/file/CSP2020-PJ-B.pdf">全国B卷</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 Apple 发布会（二）</title>
      <link href="apple2020-2/"/>
      <url>apple2020-2/</url>
      
        <content type="html"><![CDATA[<h2 id="发布会回放"><a href="#发布会回放" class="headerlink" title="发布会回放"></a>发布会回放</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=969951173&bvid=BV1Cp4y1r72P&cid=245418457&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><p>终于等来了 iPhone 12 系列，废话不多说，一文看完今晚的苹果发布会全部内容！</p><p>首先是熟悉的 Tim·Cook 上台致辞,第一个新产品：HomePod mini 来了。</p><h2 id="HomePod-Mini"><a href="#HomePod-Mini" class="headerlink" title="HomePod Mini"></a>HomePod Mini</h2><p>苹果在2017年推出了智能音箱 HomePod，但一直到今天估计都没卖出去多少个，库克寻思了一下：可能是卖太贵了，那我们推出一个廉价版吧！</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8gt8livj30ef0fdaln.jpg" alt=""></p><p>HomePod mini 同样自带 Siri 语音助手，它体积更小，高度只有不到9厘米，但是依然保持了高质量的音质，有白色和深空灰两种外观。</p><p>既然是新品，当然得有点新东西。HomePod mini 具有 Apple S5 芯片，软硬件协作有佳，Siri 还能识别出不同的说话者，一家人都可以对它发出不同的指令，还能控制智能家居。</p><p>如果你家里有多个 HomePod mini，它们会互相配合，同步在线发声。如果你家的面积大到说话都很难让每个人听到，HomePod mini 就可以充当你的传话筒了。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8hna1jmj30ef0aejto.jpg" alt=""></p><p>好了好了，重点是价格。如果你买不起2799的 HomePod ，那么你一定要试试 HomePod mini。</p><p>HomePod mini 售价为 749元 。</p><p>中国大陆发售时间待定。</p><h2 id="iPhone-12-amp-iPhone-12-Mini"><a href="#iPhone-12-amp-iPhone-12-Mini" class="headerlink" title="iPhone 12 &amp; iPhone 12 Mini"></a>iPhone 12 &amp; iPhone 12 Mini</h2><p>ok，知道你更想看的是新 iPhone ，他来了。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8igweoqj30ef09j422.jpg" alt=""></p><p>首先，iPhone 12 全系支持 5G 网络，全系 A14 仿生芯片加持，全系超视网膜 XDR 屏幕，全系 MagSafe 磁吸式充电生态系统（这是啥，后面再讲）。</p><p>5G 不用多说，安卓用户们都用一年多了，iPhone 终于迎头赶上，然后超越。在硬件上，苹果为 iPhone 12 系列重新定制了高灵敏度、高功效的天线和无线元器件。 并且尽可能多的支持所有 5G 频段，不用担心出国会断网。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8iwzeorj30ef09jn0r.jpg" alt=""></p><p>iPhone 12 各款机型还拥有智能数据模式，可智能地判断何时需要 5G 速度，并实时平衡数据用量、速度和耗电量，帮助延长电池续航。（Tips：iPhone 12 mini 是单卡）</p><p>A14 也不用多介绍了吧，半个月前 iPad Air 4 首发，现在依然超越目前安卓阵营所有手机芯片。苹果现场演示了《英雄联盟》手游：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8ja6celj30ef082wks.jpg" alt=""></p><p>XDR 超视网膜屏，就是去年 Pro 系列才有的那个，iPhone 12 和 iPhone 12 mini 也有了，而且进一步升级到了更加坚固的屏幕材质：超瓷晶面板。玻璃更耐用，并将抗跌落能力提升至四倍。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8jmha7qj30ef09jdjo.jpg" alt=""></p><p>另外，iPhone 12 比 11 薄了11%、轻了16%、小了15%。</p><p>iPhone 12 和 iPhone 12 mini 具有IP68 级防泼溅，可抵御咖啡、汽水等常见液体的泼溅。（温馨提示：不防手贱）</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8jwzutbj30u00m741c.jpg" alt=""></p><p>虽然外观看起来还是一样的双摄，但其实是升级了的。</p><p>f/1.6的大光圈镜头配合 A14 仿生芯片，捕捉光源增加了 27%，原深感摄像头、广角和超广角摄像头均支持夜间模式以及更快的深度融合处理速度，各种环境下拍照效果都有提升。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8k71crbj30rf0kk0vt.jpg" alt=""></p><p>另外，iPhone 12 全系都支持杜比视界 HDR 视频的拍摄和剪辑，这项技术目前还没有其他家手机可以实现。</p><p>现在给你介绍前面说到的，Magsafe。</p><p>记得以前的 MacBook 是怎么充电的吗？对，磁吸。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8ksbu0kg30hs09z1l3.gif" alt=""></p><p>潮流是个圈，没想到被 Macbook 抛弃的磁吸式充电，换了个方式又回到了 iPhone 身上。MagSafe 为 iPhone 带来独特体验，在无线充电线圈周围布设的磁吸阵列，专为快速对齐进行了优化，每次使用都能与 iPhone 一贴即合。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8l3xq2ng30hs0a07u1.gif" alt=""></p><p>MagSafe 可以提供 15W 功率的无线充电，而且支持众多配件，像什么皮革套硅胶套卡套之类的，都可以直接吸附在 iPhone 背面，看起来还挺爽的。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8ldiqrpj30u00bkq45.jpg" alt=""></p><p>现在揭晓价格以及发售时间。</p><p>为了减少碳排放，保护环境，所以你懂的。（不给耳机和充电头了）</p><p>iPhone 12（6.1英寸）和 iPhone 12 mini （5.4英寸）有蓝色、绿色、黑色、白色和红色外观可选，储存空间 64GB 起。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8loeozgj30my0kkgnd.jpg" alt=""></p><p>起售价分别为 RMB 6,299 和 RMB 5,499。</p><p>iPhone 12：10月16日预购，10月23日发售</p><p>iPhone 12 mini：11月6日预购，11月13日发售</p><p>聊完了两款 iPhone12 之后，苹果又给我们带来了两款 iPhone12 Pro 系列。</p><h2 id="iPhone-12-Pro-Pro-Max"><a href="#iPhone-12-Pro-Pro-Max" class="headerlink" title="iPhone 12 Pro / Pro Max"></a>iPhone 12 Pro / Pro Max</h2><p>从外观设计上来看，除了比 iPhone12 多了一个 LiDAR 激光雷达扫描仪和尺寸变大以外，其他的几乎没有什么变化…</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8m9f6j8j30q20kagmo.jpg" alt=""></p><p>在设计上，iPhone12 Pro 系列一共有四种配色，分别是银色、石墨色和蓝色。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8mjar0wj30mj0i13zg.jpg" alt=""></p><p>而边框则使用了比铝金属更高级的不锈钢材质，</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8mrkng8j30q30m0aay.jpg" alt=""></p><p>尺寸方面，对比 iPhone11 Pro 系列明显感觉到大了一圈：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8n3pir6j30j10i7jt2.jpg" alt=""></p><p>虽然与 iPhone11 一样支持 IP68 级防尘防水，但苹果宣称 iPhone12 Pro 系列能在水下 6 米坚持 30 分钟（iPhone11 Pro 系列支持水下 4 米坚持 30 分钟）。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8nbpn0jj30q00h6jtl.jpg" alt=""></p><p>到底有没有这么厉害，后续拿到机器我会再给大家测试的。</p><p>而此次升级比较明显的，还是那几颗摄像头。</p><p>与去年的 iPhone11 Pro 系列一样，iPhone12 Pro 系列上再次提供三摄像头系统，拥有 1200 万像素的广角、长焦和超广角相机镜头。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8nq8jjpj30sz0gkwfg.jpg" alt=""></p><p>广角：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8nzhmtmj30rt0fc75f.jpg" alt=""></p><p>长焦：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8odv6kqj30s80f7gmm.jpg" alt=""></p><p>其实对比 iPhone12 Pro，iPhone12 Pro Max 还是有一些小改动的。</p><p>iPhone12 Pro 拥有新的 ƒ/1.6 光圈七镜式广角摄像头，照片和视频的低光拍摄性能提升达 27%，而超广角摄像头视角达 120 度，非常适合在狭窄的地点或广阔的风景中捕捉更多场景，长焦摄像头具有 52 毫米焦距和 4 倍光学变焦范围，拍摄人像非常 nice～</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8on6gpsj30u00gwmyi.jpg" alt=""></p><p>而 iPhone12 Pro Max 更厉害，1200 万像素长焦镜头，焦距为 65mm，可以光学放大到 2.5 倍，，新 f/1.6 光圈的广角摄像头和新的 sensor-shift OIS 光学防抖系统，广角传感器也是大了 47%, 这与较低的光圈相比，带来 87% 更好的低光性能，可以更灵活地拍摄特写镜头或更紧凑的画面。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8p4jtwdj30rf0kktfq.jpg" alt=""></p><p>iPhone12 Pro 系列采用了全新光学图像稳定系统，也就是咱们俗称的“OIS 防抖”，这套系统的大概原理就是在拍摄时，让摄像头的传感器进行位移，而不是传统的镜头位移。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8pmher6j30k90hmq5o.jpg" alt=""></p><p>这可以保证镜头比以往更加稳定，并且防抖效果也更好。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8pv70dnj30r40gk0vw.jpg" alt=""></p><p>另外，苹果还预告了一个新的功能，它称之为“Apple ProRAW”，将在今年晚些时候在 iPhone12 Pro 系列上推出。<br>它将提供现有的 iPhone 计算摄影优势，深度融合和智能 HDR 以及 RAW 照片的灵活性，说白了就是可以控制 RAW 拍摄，生成 Apple ProRAW 格式照片。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8q5ce3ej30eo0kk0u1.jpg" alt=""></p><p>该格式将适用于所有四款相机，并将让用户调整诸如锐化、色彩高光、平衡等数据，同时仍可利用苹果现有的摄影增强功能。</p><p>除此以外，HDR 功能还扩展到了视频模式。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8qdh9qjj30u00gcjta.jpg" alt=""></p><p>录制的视频可以显示 7 亿种颜色，是以前的 60 倍，另外，iPhone12 Pro 系列还支持杜比视界 HDR 视频录制，相机会对每一帧画面进行实时优化，而且可录制 4K 60fps 视频。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8qlahupj30dw0jpdhu.jpg" alt=""></p><p>另外，这次 iPhone12 Pro 系列终究还是配备了激光雷达扫描仪，可测量光距并使用场景的像素深度信息。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8qtqk3qj30u00hrta3.jpg" alt=""></p><p>这种技术可提供更快、更逼真的增强现实体验，并将低光场景中的自动对焦速度提高至 6 倍，让你在拍摄照片和视频时更精准、更迅速。</p><p>再配合结合 A14 仿生强大的神经网络引擎，还带来了夜间模式人像功能，可在低光环境中呈现精美的背景虚化效果。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjp8r15fbjj30ff0kk0u9.jpg" alt=""></p><p>这些都算是常规升级，毕竟升级摄像头这种看得见摸得着的功能，对苹果来说是稳赚不赔的买卖。</p><p>只是对于大部分普通用户来说，iPhone12 系列的摄像功能就完全够用，要想玩明白 iPhone12 Pro 系列的摄像头，还是交给更专业的同学吧。</p><p>至于其他的 5G、屏幕、处理器等方面，都和 iPhone12 系列没有区别，这里咱们就不多提了。</p><p>价格方面（128G起步）<br>iPhone12 Pro：RMB 8499 起；<br>10 月 16 日开始预购<br> iPhone12 Pro Max ：RMB 9299 起；</p><p>11 月 6 日开始预购</p><p>到这里，我也把今天苹果发布的新品细节介绍的差不多了。</p><p>四款 iPhone12 除了常规的差距以外，像是大家在意的屏幕、5G 等等都没有阉割。<br>虽然取消了耳机和充电器，但价格也没上涨，并且配置还非常给力。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF 非专业软件能力认证入门级（CSP-J）模拟题（洛谷版）</title>
      <link href="%E6%B4%9B%E8%B0%B7%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
      <url>%E6%B4%9B%E8%B0%B7%E6%A8%A1%E6%8B%9F%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="试题"><a href="#试题" class="headerlink" title="试题"></a>试题</h2><p><a href="https://yuzhenghao.cn/file/2020洛谷初赛模拟.pdf">PDF</a></p><p>【注：版权归洛谷科技(<a href="https://www.luogu.com.cn">https://www.luogu.com.cn</a>)所有】</p><h2 id="赛时通知"><a href="#赛时通知" class="headerlink" title="赛时通知"></a>赛时通知</h2><h3 id="udp-1："><a href="#udp-1：" class="headerlink" title="udp 1："></a>udp 1：</h3><p>选择题第七题补充：将一堆数量为 $n$ 的卷子分成两堆，就会产生 $n$ 次分卷子的操作。</p><h3 id="udp-2："><a href="#udp-2：" class="headerlink" title="udp 2："></a>udp 2：</h3><p>阅读程序第三题：第5空的范围是 $（1≤i≤10，1≤j≤10）$ 。</p><h3 id="upd-3："><a href="#upd-3：" class="headerlink" title="upd 3："></a>upd 3：</h3><p>因有些同学比较晚拿到卷子，比赛延迟半小时结束。</p><h3 id="upd-4："><a href="#upd-4：" class="headerlink" title="upd 4："></a>upd 4：</h3><p>阅读程序第二题加上头文件 <code>#include&lt;cstring&gt;</code>，虽然不影响理解题意。</p><h3 id="upd-5："><a href="#upd-5：" class="headerlink" title="upd 5："></a>upd 5：</h3><p>阅读程序第一题第6题选项改为 </p><ul><li>A. $O(m^{2}n)$ </li><li>B. $O(nm!)$</li><li>C. $O(n^2)$</li><li>D. $O(n^2m)$</li></ul><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ABCBA CABCB DBACD</span><br><span class="line">FTTTBA</span><br><span class="line">FFTTAA</span><br><span class="line">FFFTCC</span><br><span class="line">CDDAC</span><br><span class="line">CBDCB</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF 非专业软件能力认证入门级（CSP-J）模拟题（三）</title>
      <link href="%E6%A8%A1%E6%8B%9F%E9%A2%98%E4%B8%89/"/>
      <url>%E6%A8%A1%E6%8B%9F%E9%A2%98%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<h2 id="试卷"><a href="#试卷" class="headerlink" title="试卷"></a>试卷</h2><p><a href="http://yuzhenghao.cn/file/模拟测试卷（三）.pdf">PDF</a></p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p>一、单项选择题</p><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">B</td><td style="text-align:center">D</td><td style="text-align:center">C</td><td style="text-align:center">B</td><td style="text-align:center">A</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th><th style="text-align:center">10</th></tr></thead><tbody><tr><td style="text-align:center">B</td><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">C</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">11</th><th style="text-align:center">12</th><th style="text-align:center">13</th><th style="text-align:center">14</th><th style="text-align:center">15</th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">D</td></tr></tbody></table></div><p>二、阅读程序题</p><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th></tr></thead><tbody><tr><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">C</td><td style="text-align:center">D</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th></tr></thead><tbody><tr><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">√</td><td style="text-align:center">A</td><td style="text-align:center">D</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th></tr></thead><tbody><tr><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">B</td><td style="text-align:center">A</td><td style="text-align:center">D</td><td style="text-align:center">D</td></tr></tbody></table></div><p>三、完善程序</p><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center">B</td><td style="text-align:center">A</td><td style="text-align:center">C</td><td style="text-align:center">B</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th><th style="text-align:center">10</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">D</td><td style="text-align:center">B</td><td style="text-align:center">C</td><td style="text-align:center">A</td></tr></tbody></table></div>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF 非专业软件能力认证入门级（CSP-J）模拟题（二）</title>
      <link href="%E6%A8%A1%E6%8B%9F%E9%A2%98%E4%BA%8C/"/>
      <url>%E6%A8%A1%E6%8B%9F%E9%A2%98%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="试卷"><a href="#试卷" class="headerlink" title="试卷"></a>试卷</h2><p><a href="http://yuzhenghao.cn/file/模拟测试卷（二）.pdf">PDF</a></p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p>次日公布</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF 非专业软件能力认证入门级（CSP-J）模拟题（一）</title>
      <link href="%E6%A8%A1%E6%8B%9F%E9%A2%98%E4%B8%80/"/>
      <url>%E6%A8%A1%E6%8B%9F%E9%A2%98%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="试卷"><a href="#试卷" class="headerlink" title="试卷"></a>试卷</h2><p><a href="http://yuzhenghao.cn/file/模拟测试卷（一）.pdf">PDF</a></p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p>一、单项选择题</p><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">B</td><td style="text-align:center">D</td><td style="text-align:center">C</td><td style="text-align:center">B</td><td style="text-align:center">D</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th><th style="text-align:center">10</th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">B</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">11</th><th style="text-align:center">12</th><th style="text-align:center">13</th><th style="text-align:center">14</th><th style="text-align:center">15</th></tr></thead><tbody><tr><td style="text-align:center">C</td><td style="text-align:center">B</td><td style="text-align:center">C</td><td style="text-align:center">C</td><td style="text-align:center">B</td></tr></tbody></table></div><p>二、阅读程序题</p><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th></tr></thead><tbody><tr><td style="text-align:center">×</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">D</td><td style="text-align:center">B</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th></tr></thead><tbody><tr><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">C</td><td style="text-align:center">D</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th></tr></thead><tbody><tr><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">A</td><td style="text-align:center">C</td><td style="text-align:center">B</td><td style="text-align:center">C</td></tr></tbody></table></div><p>三、完善程序</p><div class="table-container"><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">B</td><td style="text-align:center">A</td><td style="text-align:center">D</td><td style="text-align:center">C</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th><th style="text-align:center">10</th></tr></thead><tbody><tr><td style="text-align:center">B</td><td style="text-align:center">D</td><td style="text-align:center">B</td><td style="text-align:center">B</td><td style="text-align:center">C</td></tr></tbody></table></div>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-J/S 复赛常见问题与策略</title>
      <link href="CSP-J:S%E5%A4%8D%E8%B5%9B%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E7%AD%96%E7%95%A5/"/>
      <url>CSP-J:S%E5%A4%8D%E8%B5%9B%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="数学类问题"><a href="#数学类问题" class="headerlink" title="数学类问题"></a>数学类问题</h1><ol><li>精度处理（高精度、实数处理、各种浮点类型处理方法）</li><li>组合数学问题（斐波那契数列、第二类数、卡特兰数、Polya原理、排列组合计数、加法原理与乘法原理）</li><li>进制问题（特定二进制串的统计、二分查找、利用二进制进行路径、状态描述、二进制转换）</li><li>递推与递归关系（递推关系式、通项公式、数列、博弈问题）</li><li>数位、数字、特定数值的查找、统计（数值处理、质因子分解、幂次分解、数值表达式、添加运算符、分式与实数运算）</li><li>数学杂题（回文数字、矩阵处理、约瑟夫与反约瑟夫问题）</li><li>数学剪枝（无解判定、解线性方程组、限定搜索范围）</li></ol><h2 id="常用策略"><a href="#常用策略" class="headerlink" title="常用策略"></a>常用策略</h2><ol><li>相关公式、定理、原理的应用</li><li>寻找规律、归纳整理递归与递推关系式</li><li>按照数学方法构造、二进制转化等技巧性处理</li><li>注意事项：<br>A. 规律准确（小数据手工推算、搜索程序验证）<br>B. 数据类型是否合理、数据范围是否超界（大数据处理）</li></ol><h1 id="字符、字串类问题"><a href="#字符、字串类问题" class="headerlink" title="字符、字串类问题"></a>字符、字串类问题</h1><ol><li>读入、分离和统计问题（文件结束符、行结束符、空格符、回车符、字符组合分离、统计）</li><li>插入、删除、修改、替换等相关编辑问题（字符距离、优美编辑、初始状态与目标状态的变换、迭代等处理性问题）</li><li>KMP算法及其改正</li><li>回文串、高精度运算及其以字符（串）作为处理对象的相关问题</li></ol><h2 id="常用策略-1"><a href="#常用策略-1" class="headerlink" title="常用策略"></a>常用策略</h2><ol><li>一般性字符处理</li><li>动态规划方法</li><li>字符树（查找、树的前序、中序、后序遍历）</li><li>注意事项：<br>A. 读入时小心<br>B. 字符串类型与字符数组存贮及其压缩存取</li></ol><h1 id="统计类问题"><a href="#统计类问题" class="headerlink" title="统计类问题"></a>统计类问题</h1><ol><li>方案总数统计（矩阵、三角形划分方案统计、问题解集个数统计）</li><li>特定、离散元素统计（二进制统计问题）</li><li>横向、纵向规模化问题（数据范围、数据维数巨大）</li><li>离散化问题（卫星覆盖、图形周长）</li><li>一般性统计问题（时间复杂度） </li></ol><h2 id="常用策略-2"><a href="#常用策略-2" class="headerlink" title="常用策略"></a>常用策略</h2><ol><li>扫描技术、归类统计及平面、空间坐标体系变换等几何学知识</li><li>离散化思想</li><li>线段树处理方法</li><li>降维、剪枝</li><li>借助于数学方法进行统计</li><li>注意事项：<br>A. 统计计数：避免待统计元素的遗漏、重复<br>B. 多次读文件、边读边处理等大数据文件的处理技巧</li></ol><h1 id="模拟类问题"><a href="#模拟类问题" class="headerlink" title="模拟类问题"></a>模拟类问题</h1><ol><li>按题设描述进行直接模拟</li><li>队列模型模拟</li><li>按时间顺序模拟状态</li></ol><h2 id="常用策略-3"><a href="#常用策略-3" class="headerlink" title="常用策略"></a>常用策略</h2><ol><li>按条件描述直接模拟</li><li>注意事件发生的起止时间、状态的变化</li><li>按某一指标（时间）排序进行预处理</li><li>注意事项：<br>A. 准确理解题意，切忌加入个人想当然思想，严格按题意进行模拟<br>B. 一般来说要考虑的因素较多，做题前要有绝对清晰的思路并逐步修正要考虑的各种因素</li></ol><h1 id="搜索类问题"><a href="#搜索类问题" class="headerlink" title="搜索类问题"></a>搜索类问题</h1><ol><li>枚举类问题（有较好枚举方法或枚举量不大的问题）</li><li>产生式系统（产生式规则，生成新的元素类问题）</li><li>无任何好的解决办法或其他方法不能完成的问题</li><li>搜索与其他方法的结合（与动态规划的结合、与贪心思想的结合等）</li></ol><h2 id="常用策略-4"><a href="#常用策略-4" class="headerlink" title="常用策略"></a>常用策略</h2><ol><li>确定搜索对象和搜索策略</li><li>选取适合的搜索方法（深度、广度、记忆化搜索）</li><li>注意与其他方法的结合（贪心回溯、动态规划）</li><li>减少搜索量（剪枝）</li><li>注意事项：<br>A. 剪枝条件的正确性（加剪枝条件与不加剪条件的程序结果对照）<br>B. 搜索也是解决问题的一种方法，有时搜索程序也可以收到较好的效果，只要有较好的优化措施</li></ol><h1 id="最优化问题"><a href="#最优化问题" class="headerlink" title="最优化问题"></a>最优化问题</h1><ol><li>图论中的最优化问题</li><li>规划问题</li><li>特定指标（长度、次数等）最（极）值问题</li></ol><h2 id="常用策略-5"><a href="#常用策略-5" class="headerlink" title="常用策略"></a>常用策略</h2><ol><li>动态规划</li><li>图论中经典算法及其改正</li><li>贪心+搜索解决办法</li><li>贪心思想</li><li>数学方法</li><li>注意事项：<br>A. 动态规划阶段划分、状态描述及转移方程对动态规划效率的影响<br>B. 状态存贮对空间优化的影响（根据题目特点决定状态存贮数目、状态存贮方法的选取（滚动存贮、压缩存贮））<br>C. 双层动态规划<br>D. 多次动态规划</li></ol><h1 id="图论问题"><a href="#图论问题" class="headerlink" title="图论问题"></a>图论问题</h1><ol><li>最小生成树问题、最小点基、中心点设置</li><li>路径问题（最短路、关键路径、道路、ERLUR回路、哈密顿回路）</li><li>拓扑排序问题（顶点的度）</li><li>连通性问题（添加、删除边、点增加或减少连通度）</li><li>流量问题</li><li>二部图的匹配问题（最大匹配、最佳匹配）</li></ol><h2 id="常用策略-6"><a href="#常用策略-6" class="headerlink" title="常用策略"></a>常用策略</h2><ol><li>点、边、权、度等图中基本元素关系</li><li>拓朴排序作预处理</li><li>图论算法的变形与改正</li><li>图搜索算法</li><li>标号法</li><li>动态规划方法</li><li>注意事项：<br>A. 选取图结构的存贮数据结构（矩阵、邻接表）<br>B. 在构建图模型时，考虑是否有多种构图方法</li></ol><h1 id="NOIP-CSP-J-S-历年题目合集（2008-2019）"><a href="#NOIP-CSP-J-S-历年题目合集（2008-2019）" class="headerlink" title="NOIP (CSP-J/S) 历年题目合集（2008-2019）"></a>NOIP (CSP-J/S) 历年题目合集（2008-2019）</h1><div class="note warning modern"><p>自2019年起，NOIP已不再设立提高组和普及组，2019年及其以后的题目均来自CSP-J/S</p></div><h2 id="提高组"><a href="#提高组" class="headerlink" title="提高组"></a>提高组</h2><blockquote><p>NOIP 提高组在 2010 年及以前为一试四题，2011 年及以后为两试共六题。</p></blockquote><h3 id="2008"><a href="#2008" class="headerlink" title="2008"></a>2008</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1125</td><td>笨小猴</td></tr><tr><td>T2</td><td>P1149</td><td>火柴棒等式</td></tr><tr><td>T3</td><td>P1006</td><td>传纸条</td></tr><tr><td>T4</td><td>P1155</td><td>双栈排序</td></tr></tbody></table></div><h3 id="2009"><a href="#2009" class="headerlink" title="2009"></a>2009</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1071</td><td>潜伏者</td></tr><tr><td>T2</td><td>P1072</td><td>Hankson 的趣味题</td></tr><tr><td>T3</td><td>P1073</td><td>最优贸易</td></tr><tr><td>T4</td><td>P1074</td><td>靶形数独</td></tr></tbody></table></div><h3 id="2010"><a href="#2010" class="headerlink" title="2010"></a>2010</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1540</td><td>机器翻译</td></tr><tr><td>T2</td><td>P1541</td><td>乌龟棋</td></tr><tr><td>T3</td><td>P1525</td><td>关押罪犯</td></tr><tr><td>T4</td><td>P1514</td><td>引水入城</td></tr></tbody></table></div><h3 id="2011"><a href="#2011" class="headerlink" title="2011"></a>2011</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P1003</td><td>铺地毯</td></tr><tr><td>D1T2</td><td>P1311</td><td>选择客栈</td></tr><tr><td>D1T3</td><td>P1312</td><td>Mayan 游戏</td></tr><tr><td>D2T1</td><td>P1313</td><td>计算系数</td></tr><tr><td>D2T2</td><td>P1314</td><td>聪明的质监员</td></tr><tr><td>D2T3</td><td>P1315</td><td>观光公交</td></tr></tbody></table></div><h3 id="2012"><a href="#2012" class="headerlink" title="2012"></a>2012</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P1079</td><td>Vigenère 密码</td></tr><tr><td>D1T2</td><td>P1080</td><td>国王游戏</td></tr><tr><td>D1T3</td><td>P1081</td><td>开车旅行</td></tr><tr><td>D2T1</td><td>P1082</td><td>同余方程</td></tr><tr><td>D2T2</td><td>P1083</td><td>借教室</td></tr><tr><td>D2T3</td><td>P1084</td><td>疫情控制</td></tr></tbody></table></div><h3 id="2013"><a href="#2013" class="headerlink" title="2013"></a>2013</h3><blockquote><p>注：D2T1 与 NOIP 2018 提高组 D1T1 完全一致。</p></blockquote><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P1965</td><td>转圈游戏</td></tr><tr><td>D1T2</td><td>P1966</td><td>火柴排队</td></tr><tr><td>D1T3</td><td>P1967</td><td>货车运输</td></tr><tr><td>D2T1*</td><td>P1969</td><td>积木大赛</td></tr><tr><td>D2T2</td><td>P1970</td><td>花匠</td></tr><tr><td>D2T3</td><td>P1979</td><td>华容道</td></tr></tbody></table></div><h3 id="2014"><a href="#2014" class="headerlink" title="2014"></a>2014</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P1328</td><td>生活大爆炸版石头剪刀布</td></tr><tr><td>D1T2</td><td>P1351</td><td>联合权值</td></tr><tr><td>D1T3</td><td>P1941</td><td>飞扬的小鸟</td></tr><tr><td>D2T1</td><td>P2038</td><td>无线网络发射器选址</td></tr><tr><td>D2T2</td><td>P2296</td><td>寻找道路</td></tr><tr><td>D2T3</td><td>P2312</td><td>解方程</td></tr></tbody></table></div><h3 id="2015"><a href="#2015" class="headerlink" title="2015"></a>2015</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P2615</td><td>神奇的幻方</td></tr><tr><td>D1T2</td><td>P2661</td><td>信息传递</td></tr><tr><td>D1T3</td><td>P2668</td><td>斗地主</td></tr><tr><td>D2T1</td><td>P2678</td><td>跳石头</td></tr><tr><td>D2T2</td><td>P2679</td><td>子串</td></tr><tr><td>D2T3</td><td>P2680</td><td>运输计划</td></tr></tbody></table></div><h3 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P1563</td><td>玩具谜题</td></tr><tr><td>D1T2</td><td>P1600</td><td>天天爱跑步</td></tr><tr><td>D1T3</td><td>P1850</td><td>换教室</td></tr><tr><td>D2T1</td><td>P2822</td><td>组合数问题</td></tr><tr><td>D2T2</td><td>P2827</td><td>蚯蚓</td></tr><tr><td>D2T3</td><td>P2831</td><td>愤怒的小鸟</td></tr></tbody></table></div><h3 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P3951</td><td>小凯的疑惑</td></tr><tr><td>D1T2</td><td>P3952</td><td>时间复杂度</td></tr><tr><td>D1T3</td><td>P3953</td><td>逛公园</td></tr><tr><td>D2T1</td><td>P3958</td><td>奶酪</td></tr><tr><td>D2T2</td><td>P3959</td><td>宝藏</td></tr><tr><td>D2T3</td><td>P3960</td><td>列队</td></tr></tbody></table></div><h3 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h3><blockquote><p>注：D1T1 与 NOIP 2013 提高组 D2T1 完全一致。</p></blockquote><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1*</td><td>P5019</td><td>铺设道路</td></tr><tr><td>D1T2</td><td>P5020</td><td>货币系统</td></tr><tr><td>D1T3</td><td>P5021</td><td>赛道修建</td></tr><tr><td>D2T1</td><td>P5022</td><td>旅行</td></tr><tr><td>D2T2</td><td>P5023</td><td>填数游戏</td></tr><tr><td>D2T3</td><td>P5024</td><td>保卫王国</td></tr></tbody></table></div><h3 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h3><blockquote><p>即 2019 年非专业级软件能力认证第二轮提高级（CSP-S2）。</p></blockquote><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>D1T1</td><td>P5657</td><td>格雷码</td></tr><tr><td>D1T2</td><td>P5658</td><td>括号树</td></tr><tr><td>D1T3</td><td>P5659</td><td>树上的树</td></tr><tr><td>D2T1</td><td>P5664</td><td>Emiya 家今天的饭</td></tr><tr><td>D2T2</td><td>P5665</td><td>划分</td></tr><tr><td>D2T3</td><td>P5666</td><td>树的重心</td></tr></tbody></table></div><h2 id="普及组"><a href="#普及组" class="headerlink" title="普及组"></a>普及组</h2><blockquote><p>NOIP 普及组为一试四题。</p></blockquote><h3 id="2008-1"><a href="#2008-1" class="headerlink" title="2008"></a>2008</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1055</td><td>ISBN 号码</td></tr><tr><td>T2</td><td>P1056</td><td>排座椅</td></tr><tr><td>T3</td><td>P1057</td><td>传球游戏</td></tr><tr><td>T4</td><td>P1058</td><td>立体图</td></tr></tbody></table></div><h3 id="2009-1"><a href="#2009-1" class="headerlink" title="2009"></a>2009</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1067</td><td>多项式输出</td></tr><tr><td>T2</td><td>P1068</td><td>分数线划定</td></tr><tr><td>T3</td><td>P1069</td><td>细胞分裂</td></tr><tr><td>T4</td><td>P1070</td><td>道路游戏</td></tr></tbody></table></div><h3 id="2010-1"><a href="#2010-1" class="headerlink" title="2010"></a>2010</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1179</td><td>数字统计</td></tr><tr><td>T2</td><td>P1190</td><td>接水问题</td></tr><tr><td>T3</td><td>P1158</td><td>导弹拦截</td></tr><tr><td>T4</td><td>P1199</td><td>三国游戏</td></tr></tbody></table></div><h3 id="2011-1"><a href="#2011-1" class="headerlink" title="2011"></a>2011</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1307</td><td>数字反转</td></tr><tr><td>T2</td><td>P1308</td><td>统计单词数</td></tr><tr><td>T3</td><td>P1309</td><td>瑞士轮</td></tr><tr><td>T4</td><td>P1310</td><td>表达式的值</td></tr></tbody></table></div><h3 id="2012-1"><a href="#2012-1" class="headerlink" title="2012"></a>2012</h3><blockquote><p>注：T4 后被证明为错题。不存在一个算法能通过题目数据范围内的所有合法数据。</p></blockquote><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1075</td><td>质因数分解</td></tr><tr><td>T2</td><td>P1076</td><td>寻宝</td></tr><tr><td>T3</td><td>P1077</td><td>摆花</td></tr><tr><td>T4*</td><td>P1078</td><td>文化之旅</td></tr></tbody></table></div><h3 id="2013-1"><a href="#2013-1" class="headerlink" title="2013"></a>2013</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1980</td><td>计数问题</td></tr><tr><td>T2</td><td>P1981</td><td>表达式求值</td></tr><tr><td>T3</td><td>P1982</td><td>小朋友的数字</td></tr><tr><td>T4</td><td>P1983</td><td>车站分级</td></tr></tbody></table></div><h3 id="2014-1"><a href="#2014-1" class="headerlink" title="2014"></a>2014</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P2118</td><td>比例简化</td></tr><tr><td>T2</td><td>P2141</td><td>珠心算测验</td></tr><tr><td>T3</td><td>P2239</td><td>螺旋矩阵</td></tr><tr><td>T4</td><td>P2258</td><td>子矩阵</td></tr></tbody></table></div><h3 id="2015-1"><a href="#2015-1" class="headerlink" title="2015"></a>2015</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P2669</td><td>金币</td></tr><tr><td>T2</td><td>P2670</td><td>扫雷游戏</td></tr><tr><td>T3</td><td>P2671</td><td>求和</td></tr><tr><td>T4</td><td>P2672</td><td>推销员</td></tr></tbody></table></div><h3 id="2016-1"><a href="#2016-1" class="headerlink" title="2016"></a>2016</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P1909</td><td>买铅笔</td></tr><tr><td>T2</td><td>P2010</td><td>回文日期</td></tr><tr><td>T3</td><td>P2058</td><td>海港</td></tr><tr><td>T4</td><td>P2119</td><td>魔法阵</td></tr></tbody></table></div><h3 id="2017-1"><a href="#2017-1" class="headerlink" title="2017"></a>2017</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P3954</td><td>成绩</td></tr><tr><td>T2</td><td>P3955</td><td>图书管理员</td></tr><tr><td>T3</td><td>P3956</td><td>棋盘</td></tr><tr><td>T4</td><td>P3957</td><td>跳房子</td></tr></tbody></table></div><h3 id="2018-1"><a href="#2018-1" class="headerlink" title="2018"></a>2018</h3><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P5015</td><td>标题统计</td></tr><tr><td>T2</td><td>P5016</td><td>龙虎斗</td></tr><tr><td>T3</td><td>P5017</td><td>摆渡车</td></tr><tr><td>T4</td><td>P5018</td><td>对称二叉树</td></tr></tbody></table></div><h3 id="2019-1"><a href="#2019-1" class="headerlink" title="2019"></a>2019</h3><blockquote><p>即 2019 年非专业级软件能力认证第二轮入门级（CSP-J2）。</p></blockquote><div class="table-container"><table><thead><tr><th>编号</th><th>题号</th><th>题目名</th></tr></thead><tbody><tr><td>T1</td><td>P5660</td><td>数字游戏</td></tr><tr><td>T2</td><td>P5661</td><td>公交换乘</td></tr><tr><td>T3</td><td>P5662</td><td>纪念品</td></tr><tr><td>T4</td><td>P5663</td><td>加工零件</td></tr></tbody></table></div>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S复赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-J/S 复赛竞赛环境与注意事项</title>
      <link href="CSP-JS%20%E7%AB%9E%E8%B5%9B%E7%8E%AF%E5%A2%83%E4%B8%8E%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>CSP-JS%20%E7%AB%9E%E8%B5%9B%E7%8E%AF%E5%A2%83%E4%B8%8E%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="一、比赛形式"><a href="#一、比赛形式" class="headerlink" title="一、比赛形式"></a>一、比赛形式</h1><p>比赛不提供纸质试题，只提供电子版试题文件。</p><p>该文件压缩包保存在计算机桌面上。监考人公布密码后，选手自行解密试题。</p><p>试题解压密码会影响一个人的心情，一定要一次输对，注意大小写，不要边输入边检查，要对自己有自信。</p><h1 id="二、操作系统"><a href="#二、操作系统" class="headerlink" title="二、操作系统"></a>二、操作系统</h1><p>江苏等复赛选手上机可自选windows或linux操作系统。</p><p>中国计算机学会将使用NOI linux下的Arbiter评测系统进行评测。</p><p>Linux与Windows的区别</p><h2 id="1、大小写敏感"><a href="#1、大小写敏感" class="headerlink" title="1、大小写敏感"></a>1、大小写敏感</h2><p>a. 在Windows下，文件名大小写不敏感，例如A.PAS 与 a.pas 与 A.pas 与 a.PaS没有区别。<br>b. Linux视文件名为二进制数据，所以区分大小写。<br>c. 考试时一定要看清题目上要求，区别大小写。</p><h2 id="2、关闭文件"><a href="#2、关闭文件" class="headerlink" title="2、关闭文件"></a>2、关闭文件</h2><p>a. Windows在程序退出时默认自动关闭已打开的文件，会把缓存中数据写入硬盘。<br>b. 在Linux下必须由程序关闭文件，否则没有被写入硬盘。</p><h2 id="3、回车符换行符"><a href="#3、回车符换行符" class="headerlink" title="3、回车符换行符"></a>3、回车符换行符</h2><p>a. 在Windows下，两行文本间有回车符(ASCII 13) 和换行符 (ASCII 10)。<br>b. 而在Linux下，只有换行符 (ASCII 10)。</p><h2 id="4、Read-与-Readln"><a href="#4、Read-与-Readln" class="headerlink" title="4、Read 与 Readln"></a>4、Read 与 Readln</h2><p>a. 由于回车与换行在Windows和Linux下存在有区别，编程时要格外注意。<br>b. 尤其读字符串时，尽量采用Readln，而不要While not eof read或While not eofln read。</p><h2 id="5、多余字符过滤"><a href="#5、多余字符过滤" class="headerlink" title="5、多余字符过滤"></a>5、多余字符过滤</h2><p>a. Arbiter评测系统有多个插件，分为整数比较(过滤无效字符)和逐字节比较。<br>b. 由于评测插件的原因，注意输出结果时，尽量不要有多余空格或换行。<br>c. 对于一个整数，使用write输出。<br>d. 对于多个整数，输出最后一个时不要有多余空格或换行。<br>e. 对于一个字符串，尽量使用write整体输出。</p><h2 id="文件读入读出"><a href="#文件读入读出" class="headerlink" title="文件读入读出"></a>文件读入读出</h2><p>假设题目名为“add”，那么文件夹名为“add”，c++程序名为“add.cpp”，读入文件名为“add.in”，输出文件名为“add.out”。四个的拼写均不可有误，包括大小写差异。千万不要调试后就忘记修改文件读入读出了。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   freopen(<span class="string">&quot;add.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);<span class="comment">//read</span></span><br><span class="line">   freopen(<span class="string">&quot;add.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);<span class="comment">//write</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="三、注意事项："><a href="#三、注意事项：" class="headerlink" title="三、注意事项："></a>三、注意事项：</h1><p>1、除经允许的、必须的竞赛用品外，选手不得将书包、手机、U盘、图书等带入考场，一经发现，取消本次竞赛资格或竞赛成绩为零分。</p><p>带好：准考证；身份证（或其它有照片的有效证件）；笔；少量水。</p><p>禁止携带U 盘、MP3、计算器、手机等任何与存储、计算、通信有关的电子设备；禁止携带一切书籍和其他无关物品；一经发现按作弊处理。草稿纸考场会发，无需自己准备。</p><p>2、选手须将身份证和准考证正面向外放在考桌上参赛标签旁。选手应仔细核对考桌上参赛标签信息是否正确，如有错误须立刻上报监考人员，否则视为默认同意，赛后不得更改。如选手和准考证上标明的选手不一致，视为替考，替考者和被替考者竞赛成绩均为零分，并受三年之内不得参赛处罚。</p><p>3、开始15分钟后不得进人考场，以旷考处理；竞赛结束30分钟前，选手不得退出考场（上厕所除外）。</p><p>比赛提前30分钟进场，熟悉考场环境，找到自己座位及厕所位置，更改软件、系统为自己所喜欢的设置。在别人紧张、坐立不安的时候，你不妨把时间利用起来。依照惯例，考试前几分钟是可以先调试电脑的，所以这时候一定要做些准备：<br>a. 设置系统：取消桌面背景、更改屏幕分辨率、更改虚拟内存等。</p><p>b. 设置IDE：设置默认路径、窗口大小、TAB宽度、重启IDE等。</p><p>c. 准备文件：创建.in .out，创建模板，熟悉计算机，检查有误故障，写下重要且易错内容，如：快速排序（Qsort）、文件操作命令等。</p><p>4、竞赛期间利用各种方式向其他选手传递信息等违规行为，该选手将被立刻取消参赛资格，并从次年算起被禁赛3年。</p><p>5、选手听到监考人员竞赛结束的指令后，须停止答卷，待监考人员检查无误后离开考场。如竞赛结束的指令下达后继续答题，该选手成绩以零分记。</p><p>6、选手如发现监考人员及相关人员在竞赛过程中有违纪行为或有影响公平竞赛的行为，可向CCF署名投诉。</p><p>7、监考人公布密码后，选手自行解密试题，并在已有的目录下(已由竞赛组织方事先建立，目录名为选手的参赛编号)，由选手为每道试题再单独建立一个子目录。</p><h1 id="四、目录结构、文件名规则"><a href="#四、目录结构、文件名规则" class="headerlink" title="四、目录结构、文件名规则"></a>四、目录结构、文件名规则</h1><p>比赛开始前，选手应仔细核对考桌上参赛标签信息是否正确。</p><p>竞赛组织方事先已在某盘根目录下建立以选手参赛编号命名的文件夹，选手应检查该文件夹名称是否正确（包括编号及大小写字母）,如有错误须立即上报监考人员，由监考人员进行更改。确认无误后，选手须为每道试题再单独建立一个子文件夹，子文件夹名与对应的试题英文名相同（参见试题封面页）。选手提交的每道试题的源程序必须分别存放在相应的子文件夹下。在规定文件夹下，不得包含除有效答案（源程序）以外的任何文件和文件夹。未按规定检查、建立文件夹、建立的子文件夹名出现错误或提交的源程序没有存放在相应的子文件夹下等都可能导致选手成绩为0分，责任由选手承担。</p><p>例如：假设题目有cashier、dune、manhattan三题，选手CQ-001分别使用C、Pascal、C++答题，其最终提交的文件为cashier.c、dune.pas、manhattan.cpp，则该选手应建的文件夹结构如下所示：<br><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">|---JS-001    （此文件夹已经建好）</span><br><span class="line"></span><br><span class="line">|---cashier/</span><br><span class="line"></span><br><span class="line">                       |---cashier.c</span><br><span class="line"></span><br><span class="line">               |--- dune/</span><br><span class="line"></span><br><span class="line">                       |--- dune.pas</span><br><span class="line"></span><br><span class="line">               |---manhattan/</span><br><span class="line"></span><br><span class="line">                        |---manhattan.cpp</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>比赛中涉及的所有文件名（包括源程序名、输入文件名、输出文件名、答案文件名），都必须严格按照题目要求命名，严格区分大小写。例如：题目要求输入文件名为game.in、则程序中必须按照该名字打开文件，不能使用Game.in、GAME.IN等名字。  </p><p>注意程序文件名、输入文件名、输出文件名，测试点个数。</p><p>注意空间限制（一般为128MB）、时间限制（一般为1S）。</p><p>由于编译及评测均在NOI  Linux下进行，所有文件名、语句一律小写（输出内容除外）。</p><p>为每道试题建的子目录名称、源程序名等可以复制、复制、复制（重要的事说三遍）对应的试题英文名，很多大神自己敲个文件名都容易出错。</p><h1 id="五．上机环境"><a href="#五．上机环境" class="headerlink" title="五．上机环境"></a>五．上机环境</h1><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj9zaqlyhmj30f10fwq4i.jpg" alt=""></p><p>注意：</p><p>1、本上机环境是NOI官网上2016年11月8日更新的最新版NOI Linux。</p><p>详见：<a href="http://noi.cn/noi-linux">http://noi.cn/noi-linux</a></p><p>2、评测在NOI Linux下，以源文件成绩为准，不测可执行文件，对于同一题只能提交一个源程序。</p><p>选手成绩以NOI科学委员会在最新版本的NOI Linux系统及其指定的评测工具下的评测结果为准。因比赛环境与上述评测环境的不同而产生的问题（例如，Windows下C/C++的__int64类型在Linux下无法通过编译，文本文件中 Windows系统换行符与Linux系统换行符的实际编码不同，等等），责任将由选手或其所在省的组织单位承担。NOI科学委员会一概不受理就此类问题提出的申诉。（摘自官网）</p><p>详见：<a href="http://www.noi.cn/about/rules/692-noip">http://www.noi.cn/about/rules/692-noip</a></p><p>3、除题目有规定外，比较方式一律采用多行单字符（过滤行内空格）的字符串比较。</p><h1 id="六、关于竞赛中不同语言使用限制的说明"><a href="#六、关于竞赛中不同语言使用限制的说明" class="headerlink" title="六、关于竞赛中不同语言使用限制的说明"></a>六、关于竞赛中不同语言使用限制的说明</h1><h2 id="编程通则"><a href="#编程通则" class="headerlink" title="编程通则"></a>编程通则</h2><p>1．对于每一道试题，选手只应提交一个源程序文件。源程序文件名由试题名称缩写加后缀构成，源程序文件名及后缀一律使用小写。PASCAL、C及C++程序的后缀分别为.pas，.c，或.cpp。当参赛选手对一道试题提交多份使用不同后缀的源程序文件时，测试系统按照.c, .cpp, .pas的顺序选取第一份存在的文件进行编译和评测，并忽略其他文件。</p><p>2．使用C/C++语言者不得使用自己的头文件，使用Pascal语言者不得使用自己的库单元。除另有规定外，每道题参赛程序源文件不得大于100KB，如选手在规定目录下另建其它子目录，这些子目录中的文件均会被评测系统忽略。</p><p>3．选手程序应正常结束并返回Linux系统，主函数的返回值必须为0。</p><p>4．选手程序中只允许通过对指定文件的读写、以及对指定库函数的调用等题目中明确规定的方式与外部环境通信。在程序中严禁下列操作：</p><pre><code>a. 试图访问网络b. 使用fork、exec、system或其它线程/进程生成函数c. 打开或创建题目规定的输入/输出文件之外的其它文件和目录d. 运行其它程序e. 改变文件系统的访问权限f. 读写文件系统的管理信息g. 使用除读写规定的输入/输出文件之外的其它系统调用h. 捕获和处理鼠标和键盘的输入消息i. 读写计算机的输入/输出端口</code></pre><p>5．除题目另有规定外，选手程序中所使用的静态和动态内存空间总和不得超过128MB。</p><h2 id="对C程序的限制"><a href="#对C程序的限制" class="headerlink" title="对C程序的限制"></a>对C程序的限制</h2><ol><li><p>程序禁止使用内嵌汇编和以下划线开头的库函数或宏（自己定义的除外）。</p></li><li><p>在程序中只能使用下述头文件以及被它们所间接包含：assert.h, ctype.h, errno.h，float.h，limits.h，math.h，stdio.h，stdlib.h，string.h，time.h。</p></li><li><p>64位整数只能使用longlong类型及unsigned long long类型。</p></li></ol><h2 id="对C-程序的限制"><a href="#对C-程序的限制" class="headerlink" title="对C++程序的限制"></a>对C++程序的限制</h2><ol><li><p>程序禁止使用内嵌汇编和以下划线开头的库函数或宏（自己定义的除外）。</p></li><li><p>64位整数只能使用longlong类型及unsigned long long类型。</p></li><li><p>可以使用STL中的模板。</p></li></ol><h2 id="对Pascal程序的限制"><a href="#对Pascal程序的限制" class="headerlink" title="对Pascal程序的限制"></a>对Pascal程序的限制</h2><ol><li><p>程序禁止使用内嵌汇编，并禁止使用任何编译开关。</p></li><li><p>在程序中禁止使用除system库（自动加载）和math库（须用uses math子句）之外的其他单元。</p></li></ol><p>凡满足上述规定，并且能在题目规定的命令行下编译通过的程序均为合法的源程序。但即使源程序合法，只要程序执行时有违规行为时，仍被判定为违规。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S复赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-J/S 备考指南</title>
      <link href="CSP-JS%E5%A4%87%E8%80%83%E6%8C%87%E5%8D%97/"/>
      <url>CSP-JS%E5%A4%87%E8%80%83%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>此文章用于整理备考CSP-J/S赛事的文章合集，将在CSP-J/S赛事举办前期置顶。</p></div><p><a href="https://yuzhenghao.cn/2020/09/30/CSP-JS-初赛考纲/">CSP-J/S 初赛考纲</a><br><a href="https://yuzhenghao.cn/2020/10/01/CSP-J:S复赛常见问题与策略/">CSP-J/S 复赛常见问题与策略</a><br><a href="https://yuzhenghao.cn/2020/10/01/CSP-J:S%20竞赛环境与注意事项/">CSP-J/S 复赛竞赛环境与注意事项</a><br><a href="https://yuzhenghao.cn/2020/10/01/CSP-J:S复赛模板库/">CSP-J/S 复赛模板库</a><br><a href="https://yuzhenghao.cn/2020/10/03/模拟题一/">CCF 非专业软件能力认证入门级（CSP-J）模拟题（一）</a><br><a href="https://yuzhenghao.cn/2020/10/04/模拟题二/">CCF 非专业软件能力认证入门级（CSP-J）模拟题（二）</a><br><a href="https://yuzhenghao.cn/2020/10/04/模拟题三/">CCF 非专业软件能力认证入门级（CSP-J）模拟题（三）</a><br><a href="https://yuzhenghao.cn/2020/10/08/洛谷模拟题/">CCF 非专业软件能力认证入门级/提高级（CSP-J/S）模拟题（洛谷版）</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S复赛 </tag>
            
            <tag> CSP-J/S初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-J/S 复赛模板库</title>
      <link href="CSP-JS%E5%A4%8D%E8%B5%9B%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E4%B8%8E%E6%95%B0%E8%AE%BA%E6%A8%A1%E6%9D%BF/"/>
      <url>CSP-JS%E5%A4%8D%E8%B5%9B%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E4%B8%8E%E6%95%B0%E8%AE%BA%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="数论算法"><a href="#数论算法" class="headerlink" title="数论算法"></a>数论算法</h1><h2 id="1、线性筛"><a href="#1、线性筛" class="headerlink" title="1、线性筛"></a>1、线性筛</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> prime[maxn];</span><br><span class="line"><span class="keyword">bool</span> not_prime[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,cnt=<span class="number">0</span>;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">   <span class="built_in">memset</span>(not_prime,<span class="number">0</span>,<span class="keyword">sizeof</span>(not_prime));</span><br><span class="line">   not_prime[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span>(!not_prime[i])</span><br><span class="line">           prime[++cnt]=i;</span><br><span class="line">        <span class="keyword">for</span>(intj=<span class="number">1</span>;j&lt;=cnt;j++)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="keyword">if</span>(prime[j]*i&gt;n)    <span class="keyword">break</span>;</span><br><span class="line">           not_prime[prime[j]*i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,prime[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、埃氏筛"><a href="#2、埃氏筛" class="headerlink" title="2、埃氏筛"></a>2、埃氏筛</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    c=getchar();</span><br><span class="line">   <span class="keyword">for</span>(;c&gt;<span class="string">&#x27;9&#x27;</span>||c&lt;<span class="string">&#x27;0&#x27;</span>;c=getchar());</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(;c&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;c&gt;=<span class="string">&#x27;0&#x27;</span>;c=getchar())sum=sum*<span class="number">10</span>+c<span class="number">-48</span>;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">10010000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   n=read(),m=read();</span><br><span class="line">   <span class="built_in">memset</span>(f,<span class="literal">true</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">   f[<span class="number">0</span>]=f[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(f[i])</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;i*j&lt;=n;f[i*j]=<span class="literal">false</span>,j++);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        x=read();</span><br><span class="line">       <span class="keyword">if</span>(f[x])<span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">        elseprintf(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、拓展欧几里得算法"><a href="#3、拓展欧几里得算法" class="headerlink" title="3、拓展欧几里得算法"></a>3、拓展欧几里得算法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">        y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">int</span> d=exgcd(b,a%b);</span><br><span class="line">        t=x;</span><br><span class="line">        x=y;</span><br><span class="line">        y=t-a/b*x;</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    exgcd(a,b);</span><br><span class="line"><span class="comment">// cout&lt;&lt;__gcd(a,b)&lt;&lt;endl;</span></span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、GCD-amp-LCM"><a href="#4、GCD-amp-LCM" class="headerlink" title="4、GCD&amp;LCM"></a>4、GCD&amp;LCM</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b) returna;</span><br><span class="line">    <span class="keyword">else</span> returngcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    returna/gcd(a,b)*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;gcd(a,b)&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;lcm(a,b)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、分解质因数"><a href="#5、分解质因数" class="headerlink" title="5、分解质因数"></a>5、分解质因数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(n!=i)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lld*&quot;</span>,i);</span><br><span class="line">               n=n/i;             </span><br><span class="line">            &#125;</span><br><span class="line">            elsebreak;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、大数翻倍法"><a href="#6、大数翻倍法" class="headerlink" title="6、大数翻倍法"></a>6、大数翻倍法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">233</span>],mo[<span class="number">233</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b) returna;</span><br><span class="line">    <span class="keyword">else</span> returngcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    returna/gcd(a,b)*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;mo[i]);</span><br><span class="line">    intans=<span class="number">0</span>,nowmo=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> other=a[i],othermo=mo[i];</span><br><span class="line">       <span class="keyword">if</span>(othermo&gt;nowmo)</span><br><span class="line">        &#123;</span><br><span class="line">           swap(ans,other);</span><br><span class="line">           swap(nowmo,othermo);</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">while</span>(ans%othermo!=other)</span><br><span class="line">           ans+=nowmo;</span><br><span class="line">       nowmo=lcm(nowmo,othermo);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、快速幂"><a href="#7、快速幂" class="headerlink" title="7、快速幂"></a>7、快速幂</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;    </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;    </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1007</span>;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">xx</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> n,<span class="keyword">int</span> MOD)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">int</span> tmp=a%MOD;    </span><br><span class="line">    <span class="keyword">while</span>(n)    </span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)    </span><br><span class="line">            ret=ret*tmp%MOD;    </span><br><span class="line">        tmp=tmp*tmp%MOD;    </span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> ret;    </span><br><span class="line">&#125;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">int</span> m,n;    </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n)==<span class="number">2</span>)    </span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,xx(m,n,MOD));    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><h1 id="高精度算法"><a href="#高精度算法" class="headerlink" title="高精度算法"></a>高精度算法</h1><h2 id="1、高精度加法"><a href="#1、高精度加法" class="headerlink" title="1、高精度加法"></a>1、高精度加法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只限两个非负整数相加</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> ans;  </span><br><span class="line">    <span class="keyword">int</span> na[L]=&#123;<span class="number">0</span>&#125;,nb[L]=&#123;<span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="keyword">int</span> la=a.size(),lb=b.size();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;la;i++) na[la<span class="number">-1</span>-i]=a[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lb;i++) nb[lb<span class="number">-1</span>-i]=b[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">int</span> lmax=la&gt;lb?la:lb;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lmax;i++) na[i]+=nb[i],na[i+<span class="number">1</span>]+=na[i]/<span class="number">10</span>,na[i]%=<span class="number">10</span>;  </span><br><span class="line">    <span class="keyword">if</span>(na[lmax]) lmax++;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=lmax<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) ans+=na[i]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">return</span> ans;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;add(a,b)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="2、高精度减法"><a href="#2、高精度减法" class="headerlink" title="2、高精度减法"></a>2、高精度减法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只限大的非负整数减小的非负整数 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">sub</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> ans;  </span><br><span class="line">    <span class="keyword">int</span> na[L]=&#123;<span class="number">0</span>&#125;,nb[L]=&#123;<span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="keyword">int</span> la=a.size(),lb=b.size();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;la;i++) na[la<span class="number">-1</span>-i]=a[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lb;i++) nb[lb<span class="number">-1</span>-i]=b[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">int</span> lmax=la&gt;lb?la:lb;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lmax;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        na[i]-=nb[i];  </span><br><span class="line">        <span class="keyword">if</span>(na[i]&lt;<span class="number">0</span>) na[i]+=<span class="number">10</span>,na[i+<span class="number">1</span>]--;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">while</span>(!na[--lmax]&amp;&amp;lmax&gt;<span class="number">0</span>)  ;lmax++;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=lmax<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) ans+=na[i]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">return</span> ans;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;sub(a,b)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="3、高精度乘法"><a href="#3、高精度乘法" class="headerlink" title="3、高精度乘法"></a>3、高精度乘法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//高精度乘法a,b,均为非负整数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mul</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> s;  </span><br><span class="line">    <span class="keyword">int</span> na[L],nb[L],nc[L],La=a.size(),Lb=b.size();/  </span><br><span class="line">    fill(na,na+L,<span class="number">0</span>);fill(nb,nb+L,<span class="number">0</span>);fill(nc,nc+L,<span class="number">0</span>);  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) na[La-i]=a[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Lb<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) nb[Lb-i]=b[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=La;i++)  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=Lb;j++)  </span><br><span class="line">        nc[i+j<span class="number">-1</span>]+=na[i]*nb[j];  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=La+Lb;i++)  </span><br><span class="line">        nc[i+<span class="number">1</span>]+=nc[i]/<span class="number">10</span>,nc[i]%=<span class="number">10</span>;  </span><br><span class="line">    <span class="keyword">if</span>(nc[La+Lb]) s+=nc[La+Lb]+<span class="string">&#x27;0&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=La+Lb<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)  </span><br><span class="line">        s+=nc[i]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">return</span> s;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;mul(a,b)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="4、高精度除法"><a href="#4、高精度除法" class="headerlink" title="4、高精度除法"></a>4、高精度除法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b,<span class="keyword">int</span> La,<span class="keyword">int</span> Lb)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(La&lt;Lb) <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">    <span class="keyword">if</span>(La==Lb)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)  </span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;b[i]) <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]&lt;b[i]) <span class="keyword">return</span> <span class="number">-1</span>;    </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;La;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        a[i]-=b[i];  </span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;<span class="number">0</span>) a[i]+=<span class="number">10</span>,a[i+<span class="number">1</span>]--;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)  </span><br><span class="line">        <span class="keyword">if</span>(a[i]) <span class="keyword">return</span> i+<span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">div</span><span class="params">(<span class="built_in">string</span> n1,<span class="built_in">string</span> n2,<span class="keyword">int</span> nn)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> s,v;  </span><br><span class="line">     <span class="keyword">int</span> a[L],b[L],r[L],La=n1.size(),Lb=n2.size(),i,tp=La;  </span><br><span class="line">     fill(a,a+L,<span class="number">0</span>);fill(b,b+L,<span class="number">0</span>);fill(r,r+L,<span class="number">0</span>);  </span><br><span class="line">     <span class="keyword">for</span>(i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) a[La<span class="number">-1</span>-i]=n1[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="keyword">for</span>(i=Lb<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) b[Lb<span class="number">-1</span>-i]=n2[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="keyword">if</span>(La&lt;Lb || (La==Lb &amp;&amp; n1&lt;n2)) &#123;  </span><br><span class="line">            <span class="comment">//cout&lt;&lt;0&lt;&lt;endl;  </span></span><br><span class="line">     <span class="keyword">return</span> n1;&#125;  </span><br><span class="line">     <span class="keyword">int</span> t=La-Lb;  </span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)  </span><br><span class="line">        <span class="keyword">if</span>(i&gt;=t) b[i]=b[i-t];  </span><br><span class="line">        <span class="keyword">else</span> b[i]=<span class="number">0</span>;  </span><br><span class="line">     Lb=La;  </span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=t;j++)  </span><br><span class="line">     &#123;  </span><br><span class="line">         <span class="keyword">int</span> temp;  </span><br><span class="line">         <span class="keyword">while</span>((temp=sub(a,b+j,La,Lb-j))&gt;=<span class="number">0</span>)  </span><br><span class="line">         &#123;  </span><br><span class="line">             La=temp;  </span><br><span class="line">             r[t-j]++;  </span><br><span class="line">         &#125;  </span><br><span class="line">     &#125;  </span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L<span class="number">-10</span>;i++) r[i+<span class="number">1</span>]+=r[i]/<span class="number">10</span>,r[i]%=<span class="number">10</span>;  </span><br><span class="line">     <span class="keyword">while</span>(!r[i]) i--;  </span><br><span class="line">     <span class="keyword">while</span>(i&gt;=<span class="number">0</span>) s+=r[i--]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="comment">//cout&lt;&lt;s&lt;&lt;endl;  </span></span><br><span class="line">     i=tp;  </span><br><span class="line">     <span class="keyword">while</span>(!a[i]) i--;</span><br><span class="line">     <span class="keyword">while</span>(i&gt;=<span class="number">0</span>) v+=a[i--]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="keyword">if</span>(v.empty()) v=<span class="string">&quot;0&quot;</span>;  </span><br><span class="line">     <span class="comment">//cout&lt;&lt;v&lt;&lt;endl;  </span></span><br><span class="line">     <span class="keyword">if</span>(nn==<span class="number">1</span>) <span class="keyword">return</span> s;  </span><br><span class="line">     <span class="keyword">if</span>(nn==<span class="number">2</span>) <span class="keyword">return</span> v;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;div(a,b,<span class="number">1</span>)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h1 id="图论算法"><a href="#图论算法" class="headerlink" title="图论算法"></a>图论算法</h1><h2 id="1、图的遍历-BFS"><a href="#1、图的遍历-BFS" class="headerlink" title="1、图的遍历-BFS"></a>1、图的遍历-BFS</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> maze[N][N] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> visited[N + <span class="number">1</span>] = &#123;<span class="number">0</span>, &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(start);</span><br><span class="line">    visited[start] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> front = Q.front();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; front &lt;&lt; <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!visited[i] &amp;&amp;maze[front - <span class="number">1</span>][i - <span class="number">1</span>] == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                visited[i] = <span class="number">1</span>;</span><br><span class="line">                Q.push(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (visited[i] == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        BFS(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、图的遍历-DFS"><a href="#2、图的遍历-DFS" class="headerlink" title="2、图的遍历-DFS"></a>2、图的遍历-DFS</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> maze[N][N] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> visited[N + <span class="number">1</span>] = &#123;<span class="number">0</span>, &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    s.push(start);</span><br><span class="line">    visited[start] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">bool</span> is_push = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (!s.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        is_push = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> v = s.top();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (maze[v - <span class="number">1</span>][i - <span class="number">1</span>] == <span class="number">1</span>&amp;&amp; !visited[i])</span><br><span class="line">            &#123;</span><br><span class="line">                visited[i] = <span class="number">1</span>;</span><br><span class="line">                s.push(i);</span><br><span class="line">                is_push = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!is_push)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; v &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            s.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (visited[i] == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        DFS(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、最小生成树-Kruskal"><a href="#3、最小生成树-Kruskal" class="headerlink" title="3、最小生成树-Kruskal"></a>3、最小生成树-Kruskal</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">30</span>; </span><br><span class="line"><span class="keyword">int</span> pa[MAXN];   </span><br><span class="line"><span class="keyword">int</span> rank[MAXN];    </span><br><span class="line"><span class="keyword">int</span> n,sum; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>  </span><br><span class="line">    <span class="keyword">int</span> x,y;  </span><br><span class="line">    <span class="keyword">int</span> w;  </span><br><span class="line">&#125;edge[MAXN*MAXN];  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node p,node q)</span></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> p.w&lt;q.w;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_set</span><span class="params">(<span class="keyword">int</span> x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    pa[x] = x;  </span><br><span class="line">    rank[x] = <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_set</span><span class="params">(<span class="keyword">int</span> x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(x != pa[x])  </span><br><span class="line">        pa[x] = find_set(pa[x]);  </span><br><span class="line">    <span class="keyword">return</span> pa[x];  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">union_set</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> w)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    x = find_set(x);  </span><br><span class="line">    y = find_set(y);  </span><br><span class="line">    <span class="keyword">if</span>(x == y)<span class="keyword">return</span> ;  </span><br><span class="line">    <span class="keyword">if</span>(rank[x] &gt; rank[y])</span><br><span class="line">    &#123;  </span><br><span class="line">        pa[y] = x;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        pa[x] = y;  </span><br><span class="line">        <span class="keyword">if</span>(rank[x] == rank[y])  </span><br><span class="line">            rank[y]++;  </span><br><span class="line">    &#125;  </span><br><span class="line">    sum+=w;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="comment">//  freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;  </span><br><span class="line">        <span class="keyword">if</span>(!n) <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">char</span> ch;  </span><br><span class="line">        <span class="keyword">int</span> m,k=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; ch &gt;&gt; m;  </span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; ch &gt;&gt; edge[k].w; </span><br><span class="line">                edge[k].x = i;  </span><br><span class="line">                edge[k].y = ch - <span class="string">&#x27;A&#x27;</span>;  </span><br><span class="line">                k++;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        sort(edge,edge+k,cmp);  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++)  </span><br><span class="line">            make_set(i);  </span><br><span class="line">        sum=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)  </span><br><span class="line">            union_set(edge[i].x,edge[i].y,edge[i].w);  </span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="4、最小生成树-Prim"><a href="#4、最小生成树-Prim" class="headerlink" title="4、最小生成树-Prim"></a>4、最小生成树-Prim</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">30</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1000000</span>;  </span><br><span class="line"><span class="keyword">int</span> graph[maxn][maxn];  </span><br><span class="line"><span class="keyword">int</span> lowcost[maxn],closet[maxn];</span><br><span class="line"><span class="keyword">int</span> visited[maxn];  </span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createGraph</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="built_in">memset</span>(graph,<span class="number">0</span>,<span class="keyword">sizeof</span>(graph));  </span><br><span class="line">    <span class="built_in">memset</span>(lowcost,<span class="number">0</span>,<span class="keyword">sizeof</span>(lowcost));  </span><br><span class="line">    <span class="built_in">memset</span>(closet,<span class="number">0</span>,<span class="keyword">sizeof</span>(closet));  </span><br><span class="line">    <span class="built_in">memset</span>(visited,<span class="number">0</span>,<span class="keyword">sizeof</span>(visited));  </span><br><span class="line">    <span class="keyword">int</span> a;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);  </span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">0</span>)  </span><br><span class="line">            graph[i][j]=graph[j][i]=INF;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">            graph[i][j]=graph[j][i]=a;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prim</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;  </span><br><span class="line">    visited[<span class="number">0</span>]=<span class="number">1</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;  </span><br><span class="line">        lowcost[i]=graph[i][<span class="number">0</span>]; </span><br><span class="line">        closet[i]=<span class="number">0</span>; </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;    </span><br><span class="line">        <span class="keyword">int</span> minn=lowcost[<span class="number">0</span>],k=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;  </span><br><span class="line">            <span class="keyword">if</span>(!visited[j] &amp;&amp; lowcost[j]&lt;minn)&#123;  </span><br><span class="line">                minn=lowcost[j];  </span><br><span class="line">                k=j;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        sum+=minn;  </span><br><span class="line">        visited[k]=<span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;n;t++)&#123;   </span><br><span class="line">            <span class="keyword">if</span>(!visited[t] &amp;&amp; lowcost[t]&gt;graph[t][k])&#123;  </span><br><span class="line">                lowcost[t]=graph[t][k];  </span><br><span class="line">                closet[t]=k;  </span><br><span class="line">            &#125;  </span><br><span class="line">       &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">   <span class="comment">// freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))&#123;  </span><br><span class="line">        <span class="keyword">if</span>(!n) <span class="keyword">break</span>;  </span><br><span class="line">        createGraph();  </span><br><span class="line">        prim();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>5、最短路径-SPFA<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dqs</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> f,t,c;</span><br><span class="line">&#125;hh[maxn];</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>,first[maxn],next[maxn],d[maxn];</span><br><span class="line"><span class="keyword">bool</span> used[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> f,intt,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hh[++tot]=(dqs)&#123;f,t,c&#125;;</span><br><span class="line">    next[tot]=first[f];</span><br><span class="line">    first[f]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> n,m,s,e;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    q.push(s);</span><br><span class="line">    used[s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        used[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=first[x];i;i=next[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=hh[i].t;</span><br><span class="line">            <span class="keyword">if</span>(d[u]&gt;d[x]+hh[i].c)</span><br><span class="line">            &#123;</span><br><span class="line">                d[u]=d[x]+hh[i].c;</span><br><span class="line">                <span class="keyword">if</span>(!used[u])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.push(u);</span><br><span class="line">                    used[u]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;s,&amp;e);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        d[i]=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f,t,c;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;f,&amp;t,&amp;c);</span><br><span class="line">        build(f,t,c);</span><br><span class="line">        build(t,f,c);</span><br><span class="line">    &#125;</span><br><span class="line">    spfa(s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d[e]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="6、最短路径-Dijkstra"><a href="#6、最短路径-Dijkstra" class="headerlink" title="6、最短路径-Dijkstra"></a>6、最短路径-Dijkstra</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dqs</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> f,t,c;</span><br><span class="line">&#125;hh[maxn];</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>,first[maxn],next[maxn],d[maxn];</span><br><span class="line"><span class="keyword">bool</span> used[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> f,intt,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hh[++tot]=(dqs)&#123;f,t,c&#125;;</span><br><span class="line">    next[tot]=first[f];</span><br><span class="line">    first[f]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,s,e;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        d[i]=<span class="number">1e9</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!used[i])</span><br><span class="line">                <span class="keyword">if</span>(x==<span class="number">-1</span>||d[i]&lt;d[x])</span><br><span class="line">                    x=i;               </span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">            used[x]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=first[x];i;i=next[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> u=hh[i].t;</span><br><span class="line">                <span class="keyword">if</span>(d[u]&gt;d[x]+hh[i].c)</span><br><span class="line">                    d[u]=d[x]+hh[i].c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;s,&amp;e);</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、最短路径-Floyd"><a href="#7、最短路径-Floyd" class="headerlink" title="7、最短路径-Floyd"></a>7、最短路径-Floyd</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> d[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,s,e;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">               <span class="keyword">if</span>(i!=j&amp;&amp;i!=k&amp;&amp;k!=j)</span><br><span class="line">               d[i][j]=min(d[i][j],d[i][k]+d[k][j]);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;s,&amp;e);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            d[i][j]=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f,t,c;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;f,&amp;t,&amp;c);</span><br><span class="line">        d[f][t]=c;</span><br><span class="line">        d[t][f]=c;</span><br><span class="line">    &#125;</span><br><span class="line">    floyd();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d[s][e]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;      </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="8、最近公共祖先（LCA）-倍增"><a href="#8、最近公共祖先（LCA）-倍增" class="headerlink" title="8、最近公共祖先（LCA）-倍增"></a>8、最近公共祖先（LCA）-倍增</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">250010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dqs</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> f,t,c;</span><br><span class="line">&#125;hh[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>,fa[maxn][<span class="number">31</span>],next[maxn],first[maxn],f[maxn],d[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> ff,inttt,<span class="keyword">int</span> cc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hh[++tot]=(dqs)&#123;ff,tt,cc&#125;;</span><br><span class="line">    next[tot]=first[ff];</span><br><span class="line">    first[ff]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> deep[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> sd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    deep[x]=sd;</span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=first[x];i;i=next[i])</span><br><span class="line">    &#123;</span><br><span class="line">        u=hh[i].t;</span><br><span class="line">        <span class="keyword">if</span>(!deep[u]&amp;&amp;u)</span><br><span class="line">        &#123;</span><br><span class="line">            f[u]=x;</span><br><span class="line">            d[u]=d[x]+hh[i].c;</span><br><span class="line">            dfs(u,sd+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(deep[x]&lt;deep[y])</span><br><span class="line">    swap(x,y);</span><br><span class="line">    <span class="keyword">int</span> deepcha=deep[x]-deep[y];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>&lt;&lt;i&amp;deepcha)</span><br><span class="line">        x=fa[x][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fa[x][i]!=fa[y][i])</span><br><span class="line">        &#123;</span><br><span class="line">            x=fa[x][i];</span><br><span class="line">            y=fa[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x!=y)</span><br><span class="line">        <span class="keyword">return</span> f[x];</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> u,v,c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;u,&amp;v,&amp;c);</span><br><span class="line">        build(u,v,c);</span><br><span class="line">        build(v,u,c);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        fa[i][<span class="number">0</span>]=f[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">20</span>;j++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        fa[i][j]=fa[fa[i][j<span class="number">-1</span>]][j<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;u,&amp;v);</span><br><span class="line">        <span class="keyword">int</span> xx=lca(u,v);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d[u]+d[v]<span class="number">-2</span>*d[xx]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><h2 id="1、快速排序"><a href="#1、快速排序" class="headerlink" title="1、快速排序"></a>1、快速排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>);</span><br><span class="line">    dores=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res[<span class="number">100005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span> L,intR)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&gt;=R)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> key=res[L],low=L,high=R;</span><br><span class="line">    <span class="keyword">while</span>(low&lt;high)&#123;</span><br><span class="line">       <span class="keyword">while</span>(low&lt;high&amp;&amp;key&lt;=res[high])--high;</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high)res[low++]=res[high];</span><br><span class="line">       <span class="keyword">while</span>(low&lt;high&amp;&amp;key&gt;=res[low])++low;</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high)res[high--]=res[low];</span><br><span class="line">    &#125;</span><br><span class="line">    res[low]=key;</span><br><span class="line">    qsort(L,low<span class="number">-1</span>),qsort(low+<span class="number">1</span>,R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)Rd(res[i]);</span><br><span class="line">    qsort(<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>,res[i],i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、归并排序"><a href="#2、归并排序" class="headerlink" title="2、归并排序"></a>2、归并排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;<span class="keyword">short</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>&amp;&amp;c!=<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">do</span> <span class="title">if</span><span class="params">(c==<span class="string">&#x27;-&#x27;</span>)</span>f</span>=<span class="number">-1</span>;</span><br><span class="line">    elseres=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">    res*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> a[M],b[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> L,intR)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L==R)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=L+R&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Merge(L,mid);Merge(mid+<span class="number">1</span>,R);</span><br><span class="line">    <span class="keyword">int</span> low=L,high=mid+<span class="number">1</span>,c=L;</span><br><span class="line">   <span class="keyword">while</span>(low&lt;=mid&amp;&amp;high&lt;=R)<span class="comment">//[L,low)</span></span><br><span class="line">        <span class="keyword">if</span>(a[low]&lt;=a[high])b[c++]=a[low++];</span><br><span class="line">        <span class="keyword">else</span> b[c++]=a[high++];</span><br><span class="line">    <span class="keyword">while</span>(low&lt;=mid)b[c++]=a[low++];</span><br><span class="line">    <span class="keyword">while</span>(high&lt;=R)b[c++]=a[high++];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=L;i&lt;=R;i++)a[i]=b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)Rd(a[i]);</span><br><span class="line">    Merge(<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>,a[i],i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、堆排序"><a href="#3、堆排序" class="headerlink" title="3、堆排序"></a>3、堆排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>);</span><br><span class="line">    dores=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Heap</span>&#123;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">100005</span>;</span><br><span class="line">    <span class="keyword">int</span> heap[M],sz;</span><br><span class="line">    Heap()&#123;sz=<span class="number">0</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> t=*a;*a=*b;*b=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> heap[<span class="number">1</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">        heap[++sz]=val;</span><br><span class="line">        <span class="keyword">int</span> pos=sz;</span><br><span class="line">        <span class="keyword">while</span>(pos&gt;&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> nxt=pos&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(heap[nxt]&gt;heap[pos])swap(&amp;heap[nxt],&amp;heap[pos]);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            pos=nxt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> pos=<span class="number">1</span>;</span><br><span class="line">        heap[pos]=heap[sz--];</span><br><span class="line">        <span class="keyword">while</span>((pos&lt;&lt;<span class="number">1</span>)&lt;=sz)&#123;</span><br><span class="line">            <span class="keyword">int</span> nxt=pos&lt;&lt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(nxt+<span class="number">1</span>&lt;=sz&amp;&amp;heap[nxt+<span class="number">1</span>]&lt;heap[nxt])++nxt;</span><br><span class="line">           <span class="keyword">if</span>(heap[nxt]&lt;heap[pos])swap(&amp;heap[pos],&amp;heap[nxt]);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            pos=nxt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i&lt;=n;++i)Rd(x),q.push(x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,q.top());</span><br><span class="line">        <span class="built_in">putchar</span>(i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、基数排序"><a href="#4、基数排序" class="headerlink" title="4、基数排序"></a>4、基数排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>);</span><br><span class="line">    dores=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> intM=<span class="number">100005</span>,S=<span class="number">10</span>;</span><br><span class="line">inta[M],s[S][M],sz[S];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)Rd(a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> base=<span class="number">1</span>,i=<span class="number">1</span>;i&lt;S;i++,base*=<span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;S;j++)sz[j]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> step=a[j]/base%<span class="number">10</span>;</span><br><span class="line">            s[step][++sz[step]]=a[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;S;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=sz[j];k++)</span><br><span class="line">                a[++tot]=s[j][k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>,a[i],i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="STL容器"><a href="#STL容器" class="headerlink" title="STL容器"></a>STL容器</h1><p>STL 容器是一些模板类，提供了多种组织数据的常用方法。常用的STL容器包括pair（组合）、list（列表，类似于链表）、vector（向量，类似于数组）、priority_queue（优先队列）、set（集合）、map（映射）、stack（栈）等，通过模板的参数我们可以指定容器中的元素类型。</p><h2 id="1、pair"><a href="#1、pair" class="headerlink" title="1、pair"></a>1、pair</h2><p>相当于一个Struct，访问方式举个例子：pair<int,int> p; 那么第一个成员便是p.first、第二个p.second，pair使用起来很方便，简单快速高效，可以当做一个二元struct使用，而且它定义了比较的方法，先根据第一个成员比较，在根据第二个，所以如果你的比较运算符是这样，那么你就不需要定义比较函数了，而struct是不能直接进行比较的，构造pair的方法：make_pair。例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; p;  </span><br><span class="line">p a[N];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;  </span><br><span class="line">    a[k++] = p(<span class="number">3</span>, <span class="number">4</span>);  </span><br><span class="line">    a[k++] = p(<span class="number">3</span>, <span class="number">100</span>);  </span><br><span class="line">    a[k++] = p(<span class="number">1</span>, <span class="number">2</span>);  </span><br><span class="line">    a[k++] = p(<span class="number">4</span>, <span class="number">10</span>);  </span><br><span class="line">    sort(a, a+k, greater&lt;p&gt;());  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, a[i].first, a[i].second);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h2 id="2、List"><a href="#2、List" class="headerlink" title="2、List"></a>2、List</h2><p>list是一个循环链表。这个容器的特点：快速插入和删除。作用和vector差不多，但内部是用链表实现。这个容器不支持随机访问，你不能[]或者利用通用算法操作，比如说要排序的话你只能利用成员函数比如list.sort()，而且很重要的一点，list的size()函数是线性的，因为是以遍历函数distance实现的。<br>例：HDU 5127<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;LL, LL&gt; p;  </span><br><span class="line"><span class="built_in">list</span>&lt;p&gt; l;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n), n) &#123;  </span><br><span class="line">        l.clear();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">            LL a, b;  </span><br><span class="line">            <span class="keyword">int</span> t;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %I64d %I64d&quot;</span>, &amp;t, &amp;a, &amp;b);  </span><br><span class="line">            <span class="keyword">if</span> (t == <span class="number">1</span>) l.push_back(p(a, b));  </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">-1</span>) l.erase(find(l.begin(), l.end(), p(a, b)));  </span><br><span class="line">            <span class="keyword">else</span> &#123;  </span><br><span class="line">                <span class="built_in">list</span>&lt;p&gt;::iterator i = l.begin();  </span><br><span class="line">                LL ans = i-&gt;first * a + i-&gt;second * b;  </span><br><span class="line">                <span class="keyword">for</span> (++i; i != l.end(); i++) ans = max(ans, i-&gt;first * a + i-&gt;second * b);  </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%I64d\n&quot;</span>, ans);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure></p><h2 id="3、vector"><a href="#3、vector" class="headerlink" title="3、vector"></a>3、vector</h2><p>相当于一个不定长数组，利用这个你可以添加任意多的元素，容器以连续数组的方式存储元素序列，可以将vector 看作是以顺序结构实现的线性表。当我们在程序中需要使用动态数组时，vector将是一个理想的选择。这个完全相当于把一个数组当成一个元素来进行使用了，可以直接相等，赋值操作等。比较经典的使用包括：<br>a、利用vector防止递归爆栈。<br>b、利用vector来实现邻接表。<br>c、利用vector存储空间占用比较大的矩阵。 </p><h2 id="4、priority-queue"><a href="#4、priority-queue" class="headerlink" title="4、priority_queue"></a>4、priority_queue</h2><p>优先队列其实就是堆，在优先队列中，元素被赋予优先级。当访问元素时，具有最高优先级的元素最先被删除。优先队列具有最高级先出（first in, largest out）的行为特征。重载有两种方式：直接在struct或者class内部定义；定义比较结构。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//内部定义：  </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>  </span><br><span class="line">   <span class="keyword">int</span> x, y;  </span><br><span class="line">   node(<span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span>) : x(x), y(y) &#123;&#125;  </span><br><span class="line">   <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;a) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x &gt; a.x; &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="built_in">priority_queue</span>&lt;node&gt; q;  </span><br><span class="line"><span class="comment">//定义比较结构  </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>  </span><br><span class="line">   <span class="keyword">int</span> x, y;  </span><br><span class="line">   node(<span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span>) : x(x), y(y) &#123;&#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span> &#123;</span>  </span><br><span class="line">   <span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span> <span class="params">(<span class="keyword">const</span> node &amp;a, <span class="keyword">const</span> node &amp;b)</span> </span>&#123; <span class="keyword">return</span> a.x&lt; b.x; &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="built_in">priority_queue</span>&lt;node, <span class="built_in">vector</span>&lt;node&gt;,cmp&gt; q;  </span><br></pre></td></tr></table></figure><br>priority_queue的应用：贪心<br>例1：POJ 2010<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;  </span><br><span class="line"><span class="keyword">int</span> l[N], r[N];  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">calf</span> &#123;</span>  </span><br><span class="line">    <span class="keyword">int</span> s, a;  </span><br><span class="line">&#125;ca[N];  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(calf x, calf y)</span> </span>&#123; <span class="keyword">return</span> x.s &lt; y.s; &#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n, c, f;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;n, &amp;c, &amp;f);  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= c; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;ca[i].s, &amp;ca[i].a);  </span><br><span class="line">    sort(ca+<span class="number">1</span>, ca+<span class="number">1</span>+c, cmp);  </span><br><span class="line">    n &gt;&gt;= <span class="number">1</span>;  </span><br><span class="line">    <span class="built_in">priority_queue</span> &lt;<span class="keyword">int</span>&gt; q;  </span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) q.push(ca[i].a), sum += ca[i].a;  </span><br><span class="line">    l[n] = sum;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n+<span class="number">1</span>; i &lt;= c-n<span class="number">-1</span>; i++) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (ca[i].a &gt;= q.top()) l[i] = sum;  </span><br><span class="line">        <span class="keyword">else</span> &#123;  </span><br><span class="line">            sum -= q.top() - ca[i].a;  </span><br><span class="line">            q.pop(); q.push(ca[i].a);  </span><br><span class="line">            l[i] = sum;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    sum = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) q.pop();  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = c; i &gt;= c-n+<span class="number">1</span>; i--) q.push(ca[i].a), sum += ca[i].a;  </span><br><span class="line">    r[c-n+<span class="number">1</span>] = sum;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = c-n; i &gt;= n+<span class="number">2</span>; i--) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (ca[i].a &gt;= q.top()) r[i] = sum;  </span><br><span class="line">        <span class="keyword">else</span> &#123;  </span><br><span class="line">            sum -= q.top() - ca[i].a;  </span><br><span class="line">            q.pop(); q.push(ca[i].a);  </span><br><span class="line">            r[i] = sum;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">-1</span>;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = c-n; i &gt;= n+<span class="number">1</span>; i--) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (r[i+<span class="number">1</span>] + l[i<span class="number">-1</span>] + ca[i].a &lt;= f) &#123;  </span><br><span class="line">            ans = ca[i].s;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><br>priority_queue的应用：加速搜索<br>例2：CSU 1780<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long    </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;    </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">po</span>&#123;</span>    </span><br><span class="line">    <span class="keyword">int</span> x, y, w, di;    </span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &gt; (<span class="keyword">const</span> po &amp;a)<span class="keyword">const</span> &#123;<span class="keyword">return</span> w &gt; a.w;&#125;    </span><br><span class="line">&#125;;    </span><br><span class="line"><span class="keyword">int</span> n, m, vis[<span class="number">505</span>][<span class="number">505</span>], v[<span class="number">505</span>][<span class="number">505</span>][<span class="number">4</span>];    </span><br><span class="line"><span class="keyword">int</span> maze[<span class="number">510</span>][<span class="number">510</span>], r1, c1, r2, c2, t;    </span><br><span class="line"><span class="keyword">char</span> st[<span class="number">5</span>];    </span><br><span class="line"><span class="keyword">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="built_in">priority_queue</span> &lt;po, <span class="built_in">vector</span>&lt;po&gt;, greater&lt;po&gt; &gt; q;    </span><br><span class="line">    q.push((po)&#123;r1, c1, maze[r1][c1], <span class="number">0</span>&#125;);    </span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));    </span><br><span class="line">    vis[r1][c1] = <span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">while</span> (!q.empty())&#123;    </span><br><span class="line">        po t = q.top(); q.pop();    </span><br><span class="line">        <span class="keyword">if</span> (t.x==r2 &amp;&amp; t.y==c2) <span class="keyword">return</span> t.w;    </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;    </span><br><span class="line">            <span class="keyword">int</span> nx = t.x+dx[i], ny = t.y+dy[i];    </span><br><span class="line">            <span class="keyword">if</span> (nx&lt;<span class="number">1</span> || nx&gt;n || ny&lt;<span class="number">1</span> || ny&gt;m || vis[nx][ny] || maze[nx][ny]==<span class="number">-1</span>) <span class="keyword">continue</span>;    </span><br><span class="line">            q.push((po)&#123;nx, ny, t.w+maze[nx][ny], <span class="number">0</span>&#125;); vis[nx][ny] = <span class="number">1</span>;    </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;    </span><br><span class="line">&#125;      </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs1</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="built_in">memset</span>(v, <span class="number">0</span>, <span class="keyword">sizeof</span>(v));    </span><br><span class="line">    <span class="built_in">priority_queue</span> &lt;po, <span class="built_in">vector</span>&lt;po&gt;, greater&lt;po&gt; &gt; q;    </span><br><span class="line">    q.push((po)&#123;r1, c1, maze[r1][c1], <span class="number">-1</span>&#125;);    </span><br><span class="line">    v[r1][c1][<span class="number">0</span>] = v[r1][c1][<span class="number">1</span>] = v[r1][c1][<span class="number">2</span>] = v[r1][c1][<span class="number">3</span>] = <span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;    </span><br><span class="line">        po t = q.top(); q.pop();    </span><br><span class="line">        <span class="keyword">if</span> (t.x==r2 &amp;&amp; t.y==c2) <span class="keyword">return</span> t.w;    </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)&#123;    </span><br><span class="line">            <span class="keyword">if</span>(i == t.di) <span class="keyword">continue</span>;    </span><br><span class="line">            <span class="keyword">int</span> nx = t.x+dx[i], ny = t.y+dy[i];    </span><br><span class="line">            <span class="keyword">if</span>(nx&lt;<span class="number">1</span> || nx&gt;n || ny&lt;<span class="number">1</span> || ny&gt;m || v[nx][ny][i] || maze[nx][ny]==<span class="number">-1</span>) <span class="keyword">continue</span>;    </span><br><span class="line">            q.push((po)&#123;nx, ny, t.w+maze[nx][ny], i&#125;); v[nx][ny][i] = <span class="number">1</span>;    </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;    </span><br><span class="line">&#125;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d %d %d&quot;</span>, &amp;n, &amp;m, &amp;r1, &amp;c1, &amp;r2, &amp;c2))&#123;    </span><br><span class="line">        <span class="built_in">memset</span>(maze, <span class="number">-1</span>, <span class="keyword">sizeof</span>(maze));    </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)    </span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j)&#123;    </span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st);    </span><br><span class="line">                <span class="keyword">if</span> (st[<span class="number">0</span>] != <span class="string">&#x27;*&#x27;</span>) <span class="built_in">sscanf</span>(st, <span class="string">&quot;%d&quot;</span>, &amp;maze[i][j]);    </span><br><span class="line">            &#125;    </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d %d\n&quot;</span>, ++t, bfs(), bfs1());    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure></p><h2 id="5、set"><a href="#5、set" class="headerlink" title="5、set"></a>5、set</h2><p>set，顾名思义，集合，无重复元素，插入的元素自动按增序排列。内部实现: 红黑树，一种平衡的二叉排序树。容器最主要的功能就是判重，也可以进行二分查找。要允许重复元素，选用multiset即可。容器性能：set与map的查找、删除、插入性能都是对数复杂度。没有定义比较方式的元素需要进行重载，重载方式和优先队列一样。<br>set的应用：判重<br>例：UVA 11572<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000001</span>];  </span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> t, n;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);  </span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a+i);  </span><br><span class="line">        s.clear();  </span><br><span class="line">        <span class="keyword">int</span> st = <span class="number">0</span>, en = <span class="number">0</span>, ma = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">while</span> (en &lt; n) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (en &lt; n &amp;&amp; !s.count(a[en])) s.insert(a[en++]);  </span><br><span class="line">            ma = max(ma, en-st);  </span><br><span class="line">            s.erase(a[st++]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ma);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h2 id="6、map"><a href="#6、map" class="headerlink" title="6、map"></a>6、map</h2><p>这个容器适用于那些需要进行映射（可以根据Key找到对应的Value，作为hash还是不错的），因此map是关联数组。要允许重复元素，使用multimap。<br>map的应用：映射<br>例：HDU 4460<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;  </span><br><span class="line"><span class="keyword">int</span> vis[N], d[N];  </span><br><span class="line"><span class="built_in">map</span> &lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mp;  </span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> ma = <span class="number">0</span>, res, cnt = <span class="number">1</span>;  </span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q; q.push(x);  </span><br><span class="line">    <span class="built_in">memset</span>(vis+<span class="number">1</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (n+<span class="number">1</span>));  </span><br><span class="line">    <span class="built_in">memset</span>(d+<span class="number">1</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (n+<span class="number">1</span>));  </span><br><span class="line">    vis[x] = <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;  </span><br><span class="line">        <span class="keyword">int</span> t = q.front(); q.pop();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G[t].size(); i++) &#123;  </span><br><span class="line">            <span class="keyword">int</span> y = G[t][i];  </span><br><span class="line">            <span class="keyword">if</span> (vis[y]) <span class="keyword">continue</span>;  </span><br><span class="line">            vis[y] = <span class="number">1</span>;  </span><br><span class="line">            d[y] = d[t] + <span class="number">1</span>;  </span><br><span class="line">            <span class="keyword">if</span> (ma &lt; d[y]) res = y, ma = d[y];  </span><br><span class="line">            q.push(y); cnt++;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> cnt != n ? <span class="number">-1</span> : x == <span class="number">1</span> ? res: ma;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n), n) &#123;  </span><br><span class="line">        mp.clear();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) G[i].clear();  </span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">15</span>], str[<span class="number">15</span>];  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s), mp[s] = i;  </span><br><span class="line">        <span class="keyword">int</span> m;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, s, str);  </span><br><span class="line">            G[mp[s]].push_back(mp[str]);  </span><br><span class="line">            G[mp[str]].push_back(mp[s]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">int</span> ans = solve(<span class="number">1</span>, n);  </span><br><span class="line">        ans == <span class="number">-1</span> ? <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>) : <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, solve(ans, n));  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h2 id="7、stack"><a href="#7、stack" class="headerlink" title="7、stack"></a>7、stack</h2><p>stack，栈在STL里面它属于容器适配器，对容器的重新包装，后进先出结构。<br>stack的应用：单调栈的实现<br>例：POJ 2559<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;  </span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;  </span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;  </span></span><br><span class="line"><span class="class"><span class="title">inline</span> <span class="title">void</span> <span class="title">read</span>(<span class="title">T</span> &amp;<span class="title">res</span>) &#123;</span>  </span><br><span class="line">    <span class="keyword">char</span> c; res = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(c = getchar()));  </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(c)) res = res * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>, c = getchar();  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">int</span> l[N], r[N];  </span><br><span class="line">LL h[N];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">while</span> (read(n), n) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) read(h[i]);  </span><br><span class="line">        <span class="keyword">while</span> (!s.empty()) s.pop();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (!s.empty() &amp;&amp; h[s.top()] &gt;= h[i]) s.pop();  </span><br><span class="line">            l[i] = s.empty() ? <span class="number">0</span> : s.top()+<span class="number">1</span>;  </span><br><span class="line">            s.push(i);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">while</span> (!s.empty()) s.pop();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (!s.empty() &amp;&amp; h[s.top()] &gt;= h[i]) s.pop();  </span><br><span class="line">            r[i] = s.empty() ? n : s.top();  </span><br><span class="line">            s.push(i);  </span><br><span class="line">        &#125;  </span><br><span class="line">        LL ans = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) ans = max(ans, (LL)h[i] * (r[i] - l[i]));  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%I64d\n&quot;</span>, ans);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h1 id="字符串算法"><a href="#字符串算法" class="headerlink" title="字符串算法"></a>字符串算法</h1><h2 id="1、trie树"><a href="#1、trie树" class="headerlink" title="1、trie树"></a>1、trie树</h2><p>例：HDU 1075<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">trie</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">trie * next[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line">&#125;;</span><br><span class="line">trie *thead;</span><br><span class="line"><span class="keyword">char</span> dic[<span class="number">1000000</span>][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> trie * <span class="title">newnode</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">trie *t;</span><br><span class="line">t=(trie*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(trie));</span><br><span class="line"><span class="built_in">memset</span>(t,<span class="number">0</span>,<span class="keyword">sizeof</span>(trie));</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(trie * s,<span class="keyword">char</span> x[],<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">trie *t;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; x[i] ;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ] ) s=s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">t=newnode();</span><br><span class="line">s-&gt;next[x[i]-<span class="string">&#x27;a&#x27;</span> ]=t;</span><br><span class="line">s=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">s-&gt;index=pos;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deltrie</span><span class="params">(trie * s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; <span class="number">26</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;next[i] ) deltrie(s-&gt;next[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(s);</span><br><span class="line">s=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(trie *s, <span class="keyword">char</span> x[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span>(x[<span class="number">0</span>] == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; x[i] ;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ] ) s=s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ];</span><br><span class="line">elsebreak;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x[i]==<span class="number">0</span>) returns-&gt;index;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,i,j,all;</span><br><span class="line">charword[<span class="number">20</span>],mars[<span class="number">20</span>],ch;</span><br><span class="line">thead=newnode();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,word)==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(word[<span class="number">0</span>]==<span class="string">&#x27;S&#x27;</span>)<span class="keyword">break</span>;</span><br><span class="line">i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,dic[i])==<span class="number">1</span>&amp;&amp; dic[i][<span class="number">0</span>]!=<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,mars);</span><br><span class="line">insert(thead,mars,i);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">all=i;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,word)==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(word[<span class="number">0</span>]==<span class="string">&#x27;S&#x27;</span>)<span class="keyword">break</span>;</span><br><span class="line">getchar(); j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch)==<span class="number">1</span>&amp;&amp; ch!=<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp; ch&lt;=<span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">mars[j]=ch;j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">mars[j]=<span class="number">0</span>;</span><br><span class="line">t=find( thead , mars );</span><br><span class="line">j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(t&gt;<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,dic[t]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mars[<span class="number">0</span>]!=<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,mars);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,ch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//while</span></span><br><span class="line">deltrie(thead);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2、KMP"><a href="#2、KMP" class="headerlink" title="2、KMP"></a>2、KMP</h2><p>例：HDU 2087<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Inf 0x3FFFFFFFFFFFFFFFLL  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi acos(-1.0)  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>+<span class="number">10</span>;  </span><br><span class="line"><span class="keyword">char</span> s1[maxn],s2[maxn];  </span><br><span class="line"><span class="keyword">int</span> next[maxn],ans;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Kmp</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s1);  </span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">strlen</span>(s2);  </span><br><span class="line">    <span class="keyword">if</span>(m&gt;n) <span class="keyword">return</span> ;  </span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">while</span>(j&amp;&amp;s1[i]!=s2[j]) j=next[j];  </span><br><span class="line">        <span class="keyword">if</span>(s1[i]==s2[j]) j++;  </span><br><span class="line">        <span class="keyword">if</span>(j==m) &#123;ans++;j=<span class="number">0</span>;&#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s2);  </span><br><span class="line">    next[<span class="number">0</span>]=next[<span class="number">1</span>]=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">int</span> j=next[i];  </span><br><span class="line">        <span class="keyword">while</span>(j&amp;&amp;s2[i]!=s2[j]) j=next[j];  </span><br><span class="line">        next[i+<span class="number">1</span>]=(s2[i]==s2[j])?j+<span class="number">1</span>:<span class="number">0</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="comment">//freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="comment">//freopen(&quot;out.txt&quot;,&quot;w&quot;,stdout);  </span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s1))  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(s1[<span class="number">0</span>]==<span class="string">&#x27;#&#x27;</span>) <span class="keyword">break</span>;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s2);  </span><br><span class="line">        ans=<span class="number">0</span>;  </span><br><span class="line">        getnext();  </span><br><span class="line">        Kmp();  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3、AC自动机"><a href="#3、AC自动机" class="headerlink" title="3、AC自动机"></a>3、AC自动机</h2><p>例：UVA 11468<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Inf 0x3FFFFFFFFFFFFFFFLL  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi acos(-1.0)  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000</span>+<span class="number">10</span>;  </span><br><span class="line"><span class="keyword">double</span> p[<span class="number">110</span>],dp[maxn][<span class="number">110</span>];  </span><br><span class="line"><span class="keyword">bool</span> vis[maxn][<span class="number">110</span>];  </span><br><span class="line"><span class="keyword">int</span> ch[maxn][<span class="number">63</span>],val[maxn],next[maxn],size,n;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">idx</span><span class="params">(<span class="keyword">char</span> c)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="keyword">return</span> c-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>) <span class="keyword">return</span> c-<span class="string">&#x27;a&#x27;</span>+<span class="number">10</span>;  </span><br><span class="line">    <span class="keyword">return</span> c-<span class="string">&#x27;A&#x27;</span>+<span class="number">10</span>+<span class="number">26</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));  </span><br><span class="line">    <span class="built_in">memset</span>(ch[<span class="number">0</span>],<span class="number">0</span>,<span class="keyword">sizeof</span>(ch[<span class="number">0</span>]));  </span><br><span class="line">    <span class="built_in">memset</span>(next,<span class="number">0</span>,<span class="keyword">sizeof</span>(next));  </span><br><span class="line">    <span class="built_in">memset</span>(val,<span class="number">0</span>,<span class="keyword">sizeof</span>(val));  </span><br><span class="line">    <span class="built_in">memset</span>(p,<span class="number">0</span>,<span class="keyword">sizeof</span>(p));  </span><br><span class="line">    size=<span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> u=<span class="number">0</span>,len=<span class="built_in">strlen</span>(s);  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">int</span> c=idx(s[i]);  </span><br><span class="line">        <span class="keyword">if</span>(!ch[u][c])  </span><br><span class="line">        &#123;  </span><br><span class="line">            ch[u][c]=++size;  </span><br><span class="line">            <span class="built_in">memset</span>(ch[size],<span class="number">0</span>,<span class="keyword">sizeof</span>(ch[size]));  </span><br><span class="line">            val[size]=<span class="number">0</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        u=ch[u][c];  </span><br><span class="line">    &#125;  </span><br><span class="line">    val[u]=<span class="number">1</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">62</span>;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(ch[<span class="number">0</span>][i]) q.push(ch[<span class="number">0</span>][i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">int</span> u=q.front();q.pop();  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">62</span>;++i)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">int</span> v=ch[u][i];  </span><br><span class="line">            <span class="keyword">if</span>(!v) &#123;ch[u][i]=ch[next[u]][i];<span class="keyword">continue</span>;&#125;  </span><br><span class="line">            q.push(v);  </span><br><span class="line">            <span class="keyword">int</span> j=next[u];  </span><br><span class="line">            <span class="keyword">while</span>(j&amp;&amp;!ch[j][i]) j=next[j];  </span><br><span class="line">            next[v]=ch[j][i];  </span><br><span class="line">            val[v]|=val[next[v]];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> L)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(L==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1.0</span>;  </span><br><span class="line">    <span class="keyword">if</span>(vis[u][L]) <span class="keyword">return</span> dp[u][L];  </span><br><span class="line">    vis[u][L]=<span class="literal">true</span>;  </span><br><span class="line">    dp[u][L]=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">62</span>;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(!val[ch[u][i]])  </span><br><span class="line">            dp[u][L]+=p[i]*f(ch[u][i],L<span class="number">-1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> dp[u][L];  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">char</span> str[<span class="number">110</span>];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="comment">//freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="comment">//freopen(&quot;out.txt&quot;,&quot;w&quot;,stdout);  </span></span><br><span class="line">    <span class="keyword">int</span> t,tcase=<span class="number">0</span>;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);  </span><br><span class="line">    <span class="keyword">while</span>(t--)  </span><br><span class="line">    &#123;  </span><br><span class="line">        tcase++;  </span><br><span class="line">        Init();  </span><br><span class="line">        <span class="keyword">int</span> K;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;K);  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;K;++i)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);  </span><br><span class="line">            insert(str);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);  </span><br><span class="line">        <span class="keyword">char</span> c[<span class="number">3</span>];  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,c);  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;p[idx(c[<span class="number">0</span>])]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        build();  </span><br><span class="line">        <span class="keyword">int</span> L;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;L);  </span><br><span class="line">        <span class="keyword">double</span> ans=f(<span class="number">0</span>,L);  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: %lf\n&quot;</span>,tcase,ans);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S复赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-J/S 复赛模板库</title>
      <link href="CSP-JS%E5%A4%8D%E8%B5%9B%E6%A8%A1%E6%9D%BF%E5%BA%93/"/>
      <url>CSP-JS%E5%A4%8D%E8%B5%9B%E6%A8%A1%E6%9D%BF%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="数论算法"><a href="#数论算法" class="headerlink" title="数论算法"></a>数论算法</h1><h2 id="1、线性筛"><a href="#1、线性筛" class="headerlink" title="1、线性筛"></a>1、线性筛</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> prime[maxn];</span><br><span class="line"><span class="keyword">bool</span> not_prime[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,cnt=<span class="number">0</span>;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">   <span class="built_in">memset</span>(not_prime,<span class="number">0</span>,<span class="keyword">sizeof</span>(not_prime));</span><br><span class="line">   not_prime[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span>(!not_prime[i])</span><br><span class="line">           prime[++cnt]=i;</span><br><span class="line">        <span class="keyword">for</span>(intj=<span class="number">1</span>;j&lt;=cnt;j++)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="keyword">if</span>(prime[j]*i&gt;n)    <span class="keyword">break</span>;</span><br><span class="line">           not_prime[prime[j]*i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,prime[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、埃氏筛"><a href="#2、埃氏筛" class="headerlink" title="2、埃氏筛"></a>2、埃氏筛</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    c=getchar();</span><br><span class="line">   <span class="keyword">for</span>(;c&gt;<span class="string">&#x27;9&#x27;</span>||c&lt;<span class="string">&#x27;0&#x27;</span>;c=getchar());</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(;c&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;c&gt;=<span class="string">&#x27;0&#x27;</span>;c=getchar())sum=sum*<span class="number">10</span>+c<span class="number">-48</span>;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">10010000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   n=read(),m=read();</span><br><span class="line">   <span class="built_in">memset</span>(f,<span class="literal">true</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">   f[<span class="number">0</span>]=f[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(f[i])</span><br><span class="line">    <span class="keyword">for</span>(intj=<span class="number">2</span>;i*j&lt;=n;f[i*j]=<span class="literal">false</span>,j++);</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        x=read();</span><br><span class="line">       <span class="keyword">if</span>(f[x])<span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">        elseprintf(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、拓展欧几里得算法"><a href="#3、拓展欧几里得算法" class="headerlink" title="3、拓展欧几里得算法"></a>3、拓展欧几里得算法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">        y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        intd=exgcd(b,a%b);</span><br><span class="line">        t=x;</span><br><span class="line">        x=y;</span><br><span class="line">        y=t-a/b*x;</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    exgcd(a,b);</span><br><span class="line"><span class="comment">// cout&lt;&lt;__gcd(a,b)&lt;&lt;endl;</span></span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、GCD-amp-LCM"><a href="#4、GCD-amp-LCM" class="headerlink" title="4、GCD&amp;LCM"></a>4、GCD&amp;LCM</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b) returna;</span><br><span class="line">    <span class="keyword">else</span> returngcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    returna/gcd(a,b)*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;gcd(a,b)&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;lcm(a,b)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、分解质因数"><a href="#5、分解质因数" class="headerlink" title="5、分解质因数"></a>5、分解质因数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> longi=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(n!=i)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lld*&quot;</span>,i);</span><br><span class="line">               n=n/i;             </span><br><span class="line">            &#125;</span><br><span class="line">            elsebreak;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、大数翻倍法"><a href="#6、大数翻倍法" class="headerlink" title="6、大数翻倍法"></a>6、大数翻倍法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">233</span>],mo[<span class="number">233</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b) returna;</span><br><span class="line">    <span class="keyword">else</span> returngcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    returna/gcd(a,b)*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;mo[i]);</span><br><span class="line">    intans=<span class="number">0</span>,nowmo=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(inti=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        intother=a[i],othermo=mo[i];</span><br><span class="line">       <span class="keyword">if</span>(othermo&gt;nowmo)</span><br><span class="line">        &#123;</span><br><span class="line">           swap(ans,other);</span><br><span class="line">           swap(nowmo,othermo);</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">while</span>(ans%othermo!=other)</span><br><span class="line">           ans+=nowmo;</span><br><span class="line">       nowmo=lcm(nowmo,othermo);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、快速幂"><a href="#7、快速幂" class="headerlink" title="7、快速幂"></a>7、快速幂</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;    </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;    </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1007</span>;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">xx</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> n,<span class="keyword">int</span> MOD)</span> </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">int</span> tmp=a%MOD;    </span><br><span class="line">    <span class="keyword">while</span>(n)    </span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)    </span><br><span class="line">            ret=ret*tmp%MOD;    </span><br><span class="line">        tmp=tmp*tmp%MOD;    </span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> ret;    </span><br><span class="line">&#125;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">int</span> m,n;    </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n)==<span class="number">2</span>)    </span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,xx(m,n,MOD));    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><h1 id="高精度算法"><a href="#高精度算法" class="headerlink" title="高精度算法"></a>高精度算法</h1><h2 id="1、高精度加法"><a href="#1、高精度加法" class="headerlink" title="1、高精度加法"></a>1、高精度加法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只限两个非负整数相加</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> ans;  </span><br><span class="line">    <span class="keyword">int</span> na[L]=&#123;<span class="number">0</span>&#125;,nb[L]=&#123;<span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="keyword">int</span> la=a.size(),lb=b.size();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;la;i++) na[la<span class="number">-1</span>-i]=a[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lb;i++) nb[lb<span class="number">-1</span>-i]=b[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">int</span> lmax=la&gt;lb?la:lb;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lmax;i++) na[i]+=nb[i],na[i+<span class="number">1</span>]+=na[i]/<span class="number">10</span>,na[i]%=<span class="number">10</span>;  </span><br><span class="line">    <span class="keyword">if</span>(na[lmax]) lmax++;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=lmax<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) ans+=na[i]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">return</span> ans;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;add(a,b)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="2、高精度减法"><a href="#2、高精度减法" class="headerlink" title="2、高精度减法"></a>2、高精度减法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只限大的非负整数减小的非负整数 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">sub</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> ans;  </span><br><span class="line">    <span class="keyword">int</span> na[L]=&#123;<span class="number">0</span>&#125;,nb[L]=&#123;<span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="keyword">int</span> la=a.size(),lb=b.size();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;la;i++) na[la<span class="number">-1</span>-i]=a[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lb;i++) nb[lb<span class="number">-1</span>-i]=b[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">int</span> lmax=la&gt;lb?la:lb;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lmax;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        na[i]-=nb[i];  </span><br><span class="line">        <span class="keyword">if</span>(na[i]&lt;<span class="number">0</span>) na[i]+=<span class="number">10</span>,na[i+<span class="number">1</span>]--;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">while</span>(!na[--lmax]&amp;&amp;lmax&gt;<span class="number">0</span>)  ;lmax++;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=lmax<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) ans+=na[i]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">return</span> ans;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;sub(a,b)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="3、高精度乘法"><a href="#3、高精度乘法" class="headerlink" title="3、高精度乘法"></a>3、高精度乘法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//高精度乘法a,b,均为非负整数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mul</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> s;  </span><br><span class="line">    <span class="keyword">int</span> na[L],nb[L],nc[L],La=a.size(),Lb=b.size();/  </span><br><span class="line">    fill(na,na+L,<span class="number">0</span>);fill(nb,nb+L,<span class="number">0</span>);fill(nc,nc+L,<span class="number">0</span>);  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) na[La-i]=a[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Lb<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) nb[Lb-i]=b[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=La;i++)  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=Lb;j++)  </span><br><span class="line">        nc[i+j<span class="number">-1</span>]+=na[i]*nb[j];  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=La+Lb;i++)  </span><br><span class="line">        nc[i+<span class="number">1</span>]+=nc[i]/<span class="number">10</span>,nc[i]%=<span class="number">10</span>;  </span><br><span class="line">    <span class="keyword">if</span>(nc[La+Lb]) s+=nc[La+Lb]+<span class="string">&#x27;0&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=La+Lb<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)  </span><br><span class="line">        s+=nc[i]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">return</span> s;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;mul(a,b)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="4、高精度除法"><a href="#4、高精度除法" class="headerlink" title="4、高精度除法"></a>4、高精度除法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> L=<span class="number">110</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b,<span class="keyword">int</span> La,<span class="keyword">int</span> Lb)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(La&lt;Lb) <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">    <span class="keyword">if</span>(La==Lb)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)  </span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;b[i]) <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]&lt;b[i]) <span class="keyword">return</span> <span class="number">-1</span>;    </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;La;i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        a[i]-=b[i];  </span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;<span class="number">0</span>) a[i]+=<span class="number">10</span>,a[i+<span class="number">1</span>]--;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)  </span><br><span class="line">        <span class="keyword">if</span>(a[i]) <span class="keyword">return</span> i+<span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">div</span><span class="params">(<span class="built_in">string</span> n1,<span class="built_in">string</span> n2,<span class="keyword">int</span> nn)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> s,v;  </span><br><span class="line">     <span class="keyword">int</span> a[L],b[L],r[L],La=n1.size(),Lb=n2.size(),i,tp=La;  </span><br><span class="line">     fill(a,a+L,<span class="number">0</span>);fill(b,b+L,<span class="number">0</span>);fill(r,r+L,<span class="number">0</span>);  </span><br><span class="line">     <span class="keyword">for</span>(i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) a[La<span class="number">-1</span>-i]=n1[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="keyword">for</span>(i=Lb<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) b[Lb<span class="number">-1</span>-i]=n2[i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="keyword">if</span>(La&lt;Lb || (La==Lb &amp;&amp; n1&lt;n2)) &#123;  </span><br><span class="line">            <span class="comment">//cout&lt;&lt;0&lt;&lt;endl;  </span></span><br><span class="line">     <span class="keyword">return</span> n1;&#125;  </span><br><span class="line">     <span class="keyword">int</span> t=La-Lb;  </span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=La<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)  </span><br><span class="line">        <span class="keyword">if</span>(i&gt;=t) b[i]=b[i-t];  </span><br><span class="line">        <span class="keyword">else</span> b[i]=<span class="number">0</span>;  </span><br><span class="line">     Lb=La;  </span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=t;j++)  </span><br><span class="line">     &#123;  </span><br><span class="line">         <span class="keyword">int</span> temp;  </span><br><span class="line">         <span class="keyword">while</span>((temp=sub(a,b+j,La,Lb-j))&gt;=<span class="number">0</span>)  </span><br><span class="line">         &#123;  </span><br><span class="line">             La=temp;  </span><br><span class="line">             r[t-j]++;  </span><br><span class="line">         &#125;  </span><br><span class="line">     &#125;  </span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L<span class="number">-10</span>;i++) r[i+<span class="number">1</span>]+=r[i]/<span class="number">10</span>,r[i]%=<span class="number">10</span>;  </span><br><span class="line">     <span class="keyword">while</span>(!r[i]) i--;  </span><br><span class="line">     <span class="keyword">while</span>(i&gt;=<span class="number">0</span>) s+=r[i--]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="comment">//cout&lt;&lt;s&lt;&lt;endl;  </span></span><br><span class="line">     i=tp;  </span><br><span class="line">     <span class="keyword">while</span>(!a[i]) i--;</span><br><span class="line">     <span class="keyword">while</span>(i&gt;=<span class="number">0</span>) v+=a[i--]+<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">     <span class="keyword">if</span>(v.empty()) v=<span class="string">&quot;0&quot;</span>;  </span><br><span class="line">     <span class="comment">//cout&lt;&lt;v&lt;&lt;endl;  </span></span><br><span class="line">     <span class="keyword">if</span>(nn==<span class="number">1</span>) <span class="keyword">return</span> s;  </span><br><span class="line">     <span class="keyword">if</span>(nn==<span class="number">2</span>) <span class="keyword">return</span> v;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> a,b;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b) <span class="built_in">cout</span>&lt;&lt;div(a,b,<span class="number">1</span>)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h1 id="图论算法"><a href="#图论算法" class="headerlink" title="图论算法"></a>图论算法</h1><h2 id="1、图的遍历-BFS"><a href="#1、图的遍历-BFS" class="headerlink" title="1、图的遍历-BFS"></a>1、图的遍历-BFS</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> maze[N][N] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> visited[N + <span class="number">1</span>] = &#123;<span class="number">0</span>, &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(start);</span><br><span class="line">    visited[start] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> front = Q.front();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; front &lt;&lt; <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Q.pop();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!visited[i] &amp;&amp;maze[front - <span class="number">1</span>][i - <span class="number">1</span>] == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                visited[i] = <span class="number">1</span>;</span><br><span class="line">                Q.push(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (visited[i] == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        BFS(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、图的遍历-DFS"><a href="#2、图的遍历-DFS" class="headerlink" title="2、图的遍历-DFS"></a>2、图的遍历-DFS</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> maze[N][N] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> visited[N + <span class="number">1</span>] = &#123;<span class="number">0</span>, &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    s.push(start);</span><br><span class="line">    visited[start] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">bool</span> is_push = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (!s.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        is_push = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> v = s.top();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (maze[v - <span class="number">1</span>][i - <span class="number">1</span>] == <span class="number">1</span>&amp;&amp; !visited[i])</span><br><span class="line">            &#123;</span><br><span class="line">                visited[i] = <span class="number">1</span>;</span><br><span class="line">                s.push(i);</span><br><span class="line">                is_push = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!is_push)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; v &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            s.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (visited[i] == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        DFS(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、最小生成树-Kruskal"><a href="#3、最小生成树-Kruskal" class="headerlink" title="3、最小生成树-Kruskal"></a>3、最小生成树-Kruskal</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">30</span>; </span><br><span class="line"><span class="keyword">int</span> pa[MAXN];   </span><br><span class="line"><span class="keyword">int</span> rank[MAXN];    </span><br><span class="line"><span class="keyword">int</span> n,sum; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>  </span><br><span class="line">    <span class="keyword">int</span> x,y;  </span><br><span class="line">    <span class="keyword">int</span> w;  </span><br><span class="line">&#125;edge[MAXN*MAXN];  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node p,node q)</span></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> p.w&lt;q.w;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_set</span><span class="params">(<span class="keyword">int</span> x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    pa[x] = x;  </span><br><span class="line">    rank[x] = <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_set</span><span class="params">(<span class="keyword">int</span> x)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(x != pa[x])  </span><br><span class="line">        pa[x] = find_set(pa[x]);  </span><br><span class="line">    <span class="keyword">return</span> pa[x];  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">union_set</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> w)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    x = find_set(x);  </span><br><span class="line">    y = find_set(y);  </span><br><span class="line">    <span class="keyword">if</span>(x == y)<span class="keyword">return</span> ;  </span><br><span class="line">    <span class="keyword">if</span>(rank[x] &gt; rank[y])</span><br><span class="line">    &#123;  </span><br><span class="line">        pa[y] = x;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        pa[x] = y;  </span><br><span class="line">        <span class="keyword">if</span>(rank[x] == rank[y])  </span><br><span class="line">            rank[y]++;  </span><br><span class="line">    &#125;  </span><br><span class="line">    sum+=w;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="comment">//  freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;  </span><br><span class="line">        <span class="keyword">if</span>(!n) <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">char</span> ch;  </span><br><span class="line">        <span class="keyword">int</span> m,k=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; ch &gt;&gt; m;  </span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; ch &gt;&gt; edge[k].w; </span><br><span class="line">                edge[k].x = i;  </span><br><span class="line">                edge[k].y = ch - <span class="string">&#x27;A&#x27;</span>;  </span><br><span class="line">                k++;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        sort(edge,edge+k,cmp);  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++)  </span><br><span class="line">            make_set(i);  </span><br><span class="line">        sum=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)  </span><br><span class="line">            union_set(edge[i].x,edge[i].y,edge[i].w);  </span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="4、最小生成树-Prim"><a href="#4、最小生成树-Prim" class="headerlink" title="4、最小生成树-Prim"></a>4、最小生成树-Prim</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">30</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1000000</span>;  </span><br><span class="line"><span class="keyword">int</span> graph[maxn][maxn];  </span><br><span class="line"><span class="keyword">int</span> lowcost[maxn],closet[maxn];</span><br><span class="line"><span class="keyword">int</span> visited[maxn];  </span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createGraph</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="built_in">memset</span>(graph,<span class="number">0</span>,<span class="keyword">sizeof</span>(graph));  </span><br><span class="line">    <span class="built_in">memset</span>(lowcost,<span class="number">0</span>,<span class="keyword">sizeof</span>(lowcost));  </span><br><span class="line">    <span class="built_in">memset</span>(closet,<span class="number">0</span>,<span class="keyword">sizeof</span>(closet));  </span><br><span class="line">    <span class="built_in">memset</span>(visited,<span class="number">0</span>,<span class="keyword">sizeof</span>(visited));  </span><br><span class="line">    <span class="keyword">int</span> a;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);  </span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">0</span>)  </span><br><span class="line">            graph[i][j]=graph[j][i]=INF;  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">            graph[i][j]=graph[j][i]=a;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prim</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;  </span><br><span class="line">    visited[<span class="number">0</span>]=<span class="number">1</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;  </span><br><span class="line">        lowcost[i]=graph[i][<span class="number">0</span>]; </span><br><span class="line">        closet[i]=<span class="number">0</span>; </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;    </span><br><span class="line">        <span class="keyword">int</span> minn=lowcost[<span class="number">0</span>],k=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;  </span><br><span class="line">            <span class="keyword">if</span>(!visited[j] &amp;&amp; lowcost[j]&lt;minn)&#123;  </span><br><span class="line">                minn=lowcost[j];  </span><br><span class="line">                k=j;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        sum+=minn;  </span><br><span class="line">        visited[k]=<span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;n;t++)&#123;   </span><br><span class="line">            <span class="keyword">if</span>(!visited[t] &amp;&amp; lowcost[t]&gt;graph[t][k])&#123;  </span><br><span class="line">                lowcost[t]=graph[t][k];  </span><br><span class="line">                closet[t]=k;  </span><br><span class="line">            &#125;  </span><br><span class="line">       &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">   <span class="comment">// freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))&#123;  </span><br><span class="line">        <span class="keyword">if</span>(!n) <span class="keyword">break</span>;  </span><br><span class="line">        createGraph();  </span><br><span class="line">        prim();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>5、最短路径-SPFA<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dqs</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> f,t,c;</span><br><span class="line">&#125;hh[maxn];</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>,first[maxn],next[maxn],d[maxn];</span><br><span class="line"><span class="keyword">bool</span> used[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> f,intt,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hh[++tot]=(dqs)&#123;f,t,c&#125;;</span><br><span class="line">    next[tot]=first[f];</span><br><span class="line">    first[f]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> n,m,s,e;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    q.push(s);</span><br><span class="line">    used[s]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        used[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=first[x];i;i=next[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=hh[i].t;</span><br><span class="line">            <span class="keyword">if</span>(d[u]&gt;d[x]+hh[i].c)</span><br><span class="line">            &#123;</span><br><span class="line">                d[u]=d[x]+hh[i].c;</span><br><span class="line">                <span class="keyword">if</span>(!used[u])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.push(u);</span><br><span class="line">                    used[u]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;s,&amp;e);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        d[i]=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f,t,c;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;f,&amp;t,&amp;c);</span><br><span class="line">        build(f,t,c);</span><br><span class="line">        build(t,f,c);</span><br><span class="line">    &#125;</span><br><span class="line">    spfa(s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d[e]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="6、最短路径-Dijkstra"><a href="#6、最短路径-Dijkstra" class="headerlink" title="6、最短路径-Dijkstra"></a>6、最短路径-Dijkstra</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dqs</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> f,t,c;</span><br><span class="line">&#125;hh[maxn];</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>,first[maxn],next[maxn],d[maxn];</span><br><span class="line"><span class="keyword">bool</span> used[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> f,intt,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hh[++tot]=(dqs)&#123;f,t,c&#125;;</span><br><span class="line">    next[tot]=first[f];</span><br><span class="line">    first[f]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,s,e;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        d[i]=<span class="number">1e9</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!used[i])</span><br><span class="line">                <span class="keyword">if</span>(x==<span class="number">-1</span>||d[i]&lt;d[x])</span><br><span class="line">                    x=i;               </span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">            used[x]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=first[x];i;i=next[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> u=hh[i].t;</span><br><span class="line">                <span class="keyword">if</span>(d[u]&gt;d[x]+hh[i].c)</span><br><span class="line">                    d[u]=d[x]+hh[i].c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;s,&amp;e);</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、最短路径-Floyd"><a href="#7、最短路径-Floyd" class="headerlink" title="7、最短路径-Floyd"></a>7、最短路径-Floyd</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> d[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,s,e;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">               <span class="keyword">if</span>(i!=j&amp;&amp;i!=k&amp;&amp;k!=j)</span><br><span class="line">               d[i][j]=min(d[i][j],d[i][k]+d[k][j]);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;s,&amp;e);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            d[i][j]=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f,t,c;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;f,&amp;t,&amp;c);</span><br><span class="line">        d[f][t]=c;</span><br><span class="line">        d[t][f]=c;</span><br><span class="line">    &#125;</span><br><span class="line">    floyd();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d[s][e]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;      </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="8、最近公共祖先（LCA）-倍增"><a href="#8、最近公共祖先（LCA）-倍增" class="headerlink" title="8、最近公共祖先（LCA）-倍增"></a>8、最近公共祖先（LCA）-倍增</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">250010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dqs</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> f,t,c;</span><br><span class="line">&#125;hh[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>,fa[maxn][<span class="number">31</span>],next[maxn],first[maxn],f[maxn],d[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> ff,inttt,<span class="keyword">int</span> cc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    hh[++tot]=(dqs)&#123;ff,tt,cc&#125;;</span><br><span class="line">    next[tot]=first[ff];</span><br><span class="line">    first[ff]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> deep[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> sd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    deep[x]=sd;</span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=first[x];i;i=next[i])</span><br><span class="line">    &#123;</span><br><span class="line">        u=hh[i].t;</span><br><span class="line">        <span class="keyword">if</span>(!deep[u]&amp;&amp;u)</span><br><span class="line">        &#123;</span><br><span class="line">            f[u]=x;</span><br><span class="line">            d[u]=d[x]+hh[i].c;</span><br><span class="line">            dfs(u,sd+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(deep[x]&lt;deep[y])</span><br><span class="line">    swap(x,y);</span><br><span class="line">    <span class="keyword">int</span> deepcha=deep[x]-deep[y];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>&lt;&lt;i&amp;deepcha)</span><br><span class="line">        x=fa[x][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fa[x][i]!=fa[y][i])</span><br><span class="line">        &#123;</span><br><span class="line">            x=fa[x][i];</span><br><span class="line">            y=fa[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x!=y)</span><br><span class="line">        <span class="keyword">return</span> f[x];</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> u,v,c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;u,&amp;v,&amp;c);</span><br><span class="line">        build(u,v,c);</span><br><span class="line">        build(v,u,c);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        fa[i][<span class="number">0</span>]=f[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">20</span>;j++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        fa[i][j]=fa[fa[i][j<span class="number">-1</span>]][j<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;u,&amp;v);</span><br><span class="line">        <span class="keyword">int</span> xx=lca(u,v);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d[u]+d[v]<span class="number">-2</span>*d[xx]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><h2 id="1、快速排序"><a href="#1、快速排序" class="headerlink" title="1、快速排序"></a>1、快速排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>);</span><br><span class="line">    dores=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res[<span class="number">100005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span> L,intR)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&gt;=R)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> key=res[L],low=L,high=R;</span><br><span class="line">    <span class="keyword">while</span>(low&lt;high)&#123;</span><br><span class="line">       <span class="keyword">while</span>(low&lt;high&amp;&amp;key&lt;=res[high])--high;</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high)res[low++]=res[high];</span><br><span class="line">       <span class="keyword">while</span>(low&lt;high&amp;&amp;key&gt;=res[low])++low;</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high)res[high--]=res[low];</span><br><span class="line">    &#125;</span><br><span class="line">    res[low]=key;</span><br><span class="line">    qsort(L,low<span class="number">-1</span>),qsort(low+<span class="number">1</span>,R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)Rd(res[i]);</span><br><span class="line">    qsort(<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>,res[i],i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、归并排序"><a href="#2、归并排序" class="headerlink" title="2、归并排序"></a>2、归并排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;<span class="keyword">short</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>&amp;&amp;c!=<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">do</span> <span class="title">if</span><span class="params">(c==<span class="string">&#x27;-&#x27;</span>)</span>f</span>=<span class="number">-1</span>;</span><br><span class="line">    elseres=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">    res*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> a[M],b[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> L,intR)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L==R)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=L+R&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    Merge(L,mid);Merge(mid+<span class="number">1</span>,R);</span><br><span class="line">    <span class="keyword">int</span> low=L,high=mid+<span class="number">1</span>,c=L;</span><br><span class="line">   <span class="keyword">while</span>(low&lt;=mid&amp;&amp;high&lt;=R)<span class="comment">//[L,low)</span></span><br><span class="line">        <span class="keyword">if</span>(a[low]&lt;=a[high])b[c++]=a[low++];</span><br><span class="line">        <span class="keyword">else</span> b[c++]=a[high++];</span><br><span class="line">    <span class="keyword">while</span>(low&lt;=mid)b[c++]=a[low++];</span><br><span class="line">    <span class="keyword">while</span>(high&lt;=R)b[c++]=a[high++];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=L;i&lt;=R;i++)a[i]=b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)Rd(a[i]);</span><br><span class="line">    Merge(<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>,a[i],i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、堆排序"><a href="#3、堆排序" class="headerlink" title="3、堆排序"></a>3、堆排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>);</span><br><span class="line">    dores=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Heap</span>&#123;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> M=<span class="number">100005</span>;</span><br><span class="line">    <span class="keyword">int</span> heap[M],sz;</span><br><span class="line">    Heap()&#123;sz=<span class="number">0</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a==b)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> t=*a;*a=*b;*b=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> heap[<span class="number">1</span>];&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">        heap[++sz]=val;</span><br><span class="line">        <span class="keyword">int</span> pos=sz;</span><br><span class="line">        <span class="keyword">while</span>(pos&gt;&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> nxt=pos&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(heap[nxt]&gt;heap[pos])swap(&amp;heap[nxt],&amp;heap[pos]);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            pos=nxt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> pos=<span class="number">1</span>;</span><br><span class="line">        heap[pos]=heap[sz--];</span><br><span class="line">        <span class="keyword">while</span>((pos&lt;&lt;<span class="number">1</span>)&lt;=sz)&#123;</span><br><span class="line">            <span class="keyword">int</span> nxt=pos&lt;&lt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(nxt+<span class="number">1</span>&lt;=sz&amp;&amp;heap[nxt+<span class="number">1</span>]&lt;heap[nxt])++nxt;</span><br><span class="line">           <span class="keyword">if</span>(heap[nxt]&lt;heap[pos])swap(&amp;heap[pos],&amp;heap[nxt]);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            pos=nxt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i&lt;=n;++i)Rd(x),q.push(x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,q.top());</span><br><span class="line">        <span class="built_in">putchar</span>(i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、基数排序"><a href="#4、基数排序" class="headerlink" title="4、基数排序"></a>4、基数排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Rd</span><span class="params">(<span class="keyword">int</span>&amp;res)</span></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;<span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&lt;<span class="number">48</span>);</span><br><span class="line">    dores=(res&lt;&lt;<span class="number">3</span>)+(res&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar(),c&gt;<span class="number">47</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> intM=<span class="number">100005</span>,S=<span class="number">10</span>;</span><br><span class="line">inta[M],s[S][M],sz[S];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;Rd(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)Rd(a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> base=<span class="number">1</span>,i=<span class="number">1</span>;i&lt;S;i++,base*=<span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;S;j++)sz[j]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> step=a[j]/base%<span class="number">10</span>;</span><br><span class="line">            s[step][++sz[step]]=a[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;S;j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=sz[j];k++)</span><br><span class="line">                a[++tot]=s[j][k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>,a[i],i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="STL容器"><a href="#STL容器" class="headerlink" title="STL容器"></a>STL容器</h1><p>STL 容器是一些模板类，提供了多种组织数据的常用方法。常用的STL容器包括pair（组合）、list（列表，类似于链表）、vector（向量，类似于数组）、priority_queue（优先队列）、set（集合）、map（映射）、stack（栈）等，通过模板的参数我们可以指定容器中的元素类型。</p><h2 id="1、pair"><a href="#1、pair" class="headerlink" title="1、pair"></a>1、pair</h2><p>相当于一个Struct，访问方式举个例子：pair<int,int> p; 那么第一个成员便是p.first、第二个p.second，pair使用起来很方便，简单快速高效，可以当做一个二元struct使用，而且它定义了比较的方法，先根据第一个成员比较，在根据第二个，所以如果你的比较运算符是这样，那么你就不需要定义比较函数了，而struct是不能直接进行比较的，构造pair的方法：make_pair。例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; p;  </span><br><span class="line">p a[N];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;  </span><br><span class="line">    a[k++] = p(<span class="number">3</span>, <span class="number">4</span>);  </span><br><span class="line">    a[k++] = p(<span class="number">3</span>, <span class="number">100</span>);  </span><br><span class="line">    a[k++] = p(<span class="number">1</span>, <span class="number">2</span>);  </span><br><span class="line">    a[k++] = p(<span class="number">4</span>, <span class="number">10</span>);  </span><br><span class="line">    sort(a, a+k, greater&lt;p&gt;());  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, a[i].first, a[i].second);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h2 id="2、List"><a href="#2、List" class="headerlink" title="2、List"></a>2、List</h2><p>list是一个循环链表。这个容器的特点：快速插入和删除。作用和vector差不多，但内部是用链表实现。这个容器不支持随机访问，你不能[]或者利用通用算法操作，比如说要排序的话你只能利用成员函数比如list.sort()，而且很重要的一点，list的size()函数是线性的，因为是以遍历函数distance实现的。<br>例：HDU 5127<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;LL, LL&gt; p;  </span><br><span class="line"><span class="built_in">list</span>&lt;p&gt; l;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n), n) &#123;  </span><br><span class="line">        l.clear();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">            LL a, b;  </span><br><span class="line">            <span class="keyword">int</span> t;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %I64d %I64d&quot;</span>, &amp;t, &amp;a, &amp;b);  </span><br><span class="line">            <span class="keyword">if</span> (t == <span class="number">1</span>) l.push_back(p(a, b));  </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">-1</span>) l.erase(find(l.begin(), l.end(), p(a, b)));  </span><br><span class="line">            <span class="keyword">else</span> &#123;  </span><br><span class="line">                <span class="built_in">list</span>&lt;p&gt;::iterator i = l.begin();  </span><br><span class="line">                LL ans = i-&gt;first * a + i-&gt;second * b;  </span><br><span class="line">                <span class="keyword">for</span> (++i; i != l.end(); i++) ans = max(ans, i-&gt;first * a + i-&gt;second * b);  </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%I64d\n&quot;</span>, ans);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure></p><h2 id="3、vector"><a href="#3、vector" class="headerlink" title="3、vector"></a>3、vector</h2><p>相当于一个不定长数组，利用这个你可以添加任意多的元素，容器以连续数组的方式存储元素序列，可以将vector 看作是以顺序结构实现的线性表。当我们在程序中需要使用动态数组时，vector将是一个理想的选择。这个完全相当于把一个数组当成一个元素来进行使用了，可以直接相等，赋值操作等。比较经典的使用包括：<br>a、利用vector防止递归爆栈。<br>b、利用vector来实现邻接表。<br>c、利用vector存储空间占用比较大的矩阵。 </p><h2 id="4、priority-queue"><a href="#4、priority-queue" class="headerlink" title="4、priority_queue"></a>4、priority_queue</h2><p>优先队列其实就是堆，在优先队列中，元素被赋予优先级。当访问元素时，具有最高优先级的元素最先被删除。优先队列具有最高级先出（first in, largest out）的行为特征。重载有两种方式：直接在struct或者class内部定义；定义比较结构。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//内部定义：  </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>  </span><br><span class="line">   <span class="keyword">int</span> x, y;  </span><br><span class="line">   node(<span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span>) : x(x), y(y) &#123;&#125;  </span><br><span class="line">   <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;a) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x &gt; a.x; &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="built_in">priority_queue</span>&lt;node&gt; q;  </span><br><span class="line"><span class="comment">//定义比较结构  </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>  </span><br><span class="line">   <span class="keyword">int</span> x, y;  </span><br><span class="line">   node(<span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span>) : x(x), y(y) &#123;&#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span> &#123;</span>  </span><br><span class="line">   <span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span> <span class="params">(<span class="keyword">const</span> node &amp;a, <span class="keyword">const</span> node &amp;b)</span> </span>&#123; <span class="keyword">return</span> a.x&lt; b.x; &#125;  </span><br><span class="line">&#125;;  </span><br></pre></td></tr></table></figure><br>priority_queue<node, vector<node>,cmp&gt; q;<br>priority_queue的应用：贪心<br>例1：POJ 2010<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;  </span><br><span class="line"><span class="keyword">int</span> l[N], r[N];  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">calf</span> &#123;</span>  </span><br><span class="line">    <span class="keyword">int</span> s, a;  </span><br><span class="line">&#125;ca[N];  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(calf x, calf y)</span> </span>&#123; <span class="keyword">return</span> x.s &lt; y.s; &#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n, c, f;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;n, &amp;c, &amp;f);  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= c; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;ca[i].s, &amp;ca[i].a);  </span><br><span class="line">    sort(ca+<span class="number">1</span>, ca+<span class="number">1</span>+c, cmp);  </span><br><span class="line">    n &gt;&gt;= <span class="number">1</span>;  </span><br><span class="line">    <span class="built_in">priority_queue</span> &lt;<span class="keyword">int</span>&gt; q;  </span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) q.push(ca[i].a), sum += ca[i].a;  </span><br><span class="line">    l[n] = sum;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n+<span class="number">1</span>; i &lt;= c-n<span class="number">-1</span>; i++) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (ca[i].a &gt;= q.top()) l[i] = sum;  </span><br><span class="line">        <span class="keyword">else</span> &#123;  </span><br><span class="line">            sum -= q.top() - ca[i].a;  </span><br><span class="line">            q.pop(); q.push(ca[i].a);  </span><br><span class="line">            l[i] = sum;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    sum = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) q.pop();  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = c; i &gt;= c-n+<span class="number">1</span>; i--) q.push(ca[i].a), sum += ca[i].a;  </span><br><span class="line">    r[c-n+<span class="number">1</span>] = sum;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = c-n; i &gt;= n+<span class="number">2</span>; i--) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (ca[i].a &gt;= q.top()) r[i] = sum;  </span><br><span class="line">        <span class="keyword">else</span> &#123;  </span><br><span class="line">            sum -= q.top() - ca[i].a;  </span><br><span class="line">            q.pop(); q.push(ca[i].a);  </span><br><span class="line">            r[i] = sum;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">-1</span>;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = c-n; i &gt;= n+<span class="number">1</span>; i--) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (r[i+<span class="number">1</span>] + l[i<span class="number">-1</span>] + ca[i].a &lt;= f) &#123;  </span><br><span class="line">            ans = ca[i].s;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><br>priority_queue的应用：加速搜索<br>例2：CSU 1780<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;    </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long    </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;    </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">po</span>&#123;</span>    </span><br><span class="line">    <span class="keyword">int</span> x, y, w, di;    </span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &gt; (<span class="keyword">const</span> po &amp;a)<span class="keyword">const</span> &#123;<span class="keyword">return</span> w &gt; a.w;&#125;    </span><br><span class="line">&#125;;    </span><br><span class="line"><span class="keyword">int</span> n, m, vis[<span class="number">505</span>][<span class="number">505</span>], v[<span class="number">505</span>][<span class="number">505</span>][<span class="number">4</span>];    </span><br><span class="line"><span class="keyword">int</span> maze[<span class="number">510</span>][<span class="number">510</span>], r1, c1, r2, c2, t;    </span><br><span class="line"><span class="keyword">char</span> st[<span class="number">5</span>];    </span><br><span class="line"><span class="keyword">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="built_in">priority_queue</span> &lt;po, <span class="built_in">vector</span>&lt;po&gt;, greater&lt;po&gt; &gt; q;    </span><br><span class="line">    q.push((po)&#123;r1, c1, maze[r1][c1], <span class="number">0</span>&#125;);    </span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));    </span><br><span class="line">    vis[r1][c1] = <span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">while</span> (!q.empty())&#123;    </span><br><span class="line">        po t = q.top(); q.pop();    </span><br><span class="line">        <span class="keyword">if</span> (t.x==r2 &amp;&amp; t.y==c2) <span class="keyword">return</span> t.w;    </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;    </span><br><span class="line">            <span class="keyword">int</span> nx = t.x+dx[i], ny = t.y+dy[i];    </span><br><span class="line">            <span class="keyword">if</span> (nx&lt;<span class="number">1</span> || nx&gt;n || ny&lt;<span class="number">1</span> || ny&gt;m || vis[nx][ny] || maze[nx][ny]==<span class="number">-1</span>) <span class="keyword">continue</span>;    </span><br><span class="line">            q.push((po)&#123;nx, ny, t.w+maze[nx][ny], <span class="number">0</span>&#125;); vis[nx][ny] = <span class="number">1</span>;    </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;    </span><br><span class="line">&#125;      </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs1</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="built_in">memset</span>(v, <span class="number">0</span>, <span class="keyword">sizeof</span>(v));    </span><br><span class="line">    <span class="built_in">priority_queue</span> &lt;po, <span class="built_in">vector</span>&lt;po&gt;, greater&lt;po&gt; &gt; q;    </span><br><span class="line">    q.push((po)&#123;r1, c1, maze[r1][c1], <span class="number">-1</span>&#125;);    </span><br><span class="line">    v[r1][c1][<span class="number">0</span>] = v[r1][c1][<span class="number">1</span>] = v[r1][c1][<span class="number">2</span>] = v[r1][c1][<span class="number">3</span>] = <span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;    </span><br><span class="line">        po t = q.top(); q.pop();    </span><br><span class="line">        <span class="keyword">if</span> (t.x==r2 &amp;&amp; t.y==c2) <span class="keyword">return</span> t.w;    </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)&#123;    </span><br><span class="line">            <span class="keyword">if</span>(i == t.di) <span class="keyword">continue</span>;    </span><br><span class="line">            <span class="keyword">int</span> nx = t.x+dx[i], ny = t.y+dy[i];    </span><br><span class="line">            <span class="keyword">if</span>(nx&lt;<span class="number">1</span> || nx&gt;n || ny&lt;<span class="number">1</span> || ny&gt;m || v[nx][ny][i] || maze[nx][ny]==<span class="number">-1</span>) <span class="keyword">continue</span>;    </span><br><span class="line">            q.push((po)&#123;nx, ny, t.w+maze[nx][ny], i&#125;); v[nx][ny][i] = <span class="number">1</span>;    </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;    </span><br><span class="line">&#125;    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d %d %d&quot;</span>, &amp;n, &amp;m, &amp;r1, &amp;c1, &amp;r2, &amp;c2))&#123;    </span><br><span class="line">        <span class="built_in">memset</span>(maze, <span class="number">-1</span>, <span class="keyword">sizeof</span>(maze));    </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)    </span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j)&#123;    </span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st);    </span><br><span class="line">                <span class="keyword">if</span> (st[<span class="number">0</span>] != <span class="string">&#x27;*&#x27;</span>) <span class="built_in">sscanf</span>(st, <span class="string">&quot;%d&quot;</span>, &amp;maze[i][j]);    </span><br><span class="line">            &#125;    </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d %d\n&quot;</span>, ++t, bfs(), bfs1());    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure></p><h2 id="5、set"><a href="#5、set" class="headerlink" title="5、set"></a>5、set</h2><p>set，顾名思义，集合，无重复元素，插入的元素自动按增序排列。内部实现: 红黑树，一种平衡的二叉排序树。容器最主要的功能就是判重，也可以进行二分查找。要允许重复元素，选用multiset即可。容器性能：set与map的查找、删除、插入性能都是对数复杂度。没有定义比较方式的元素需要进行重载，重载方式和优先队列一样。<br>set的应用：判重<br>例：UVA 11572<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000001</span>];  </span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> t, n;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);  </span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a+i);  </span><br><span class="line">        s.clear();  </span><br><span class="line">        <span class="keyword">int</span> st = <span class="number">0</span>, en = <span class="number">0</span>, ma = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">while</span> (en &lt; n) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (en &lt; n &amp;&amp; !s.count(a[en])) s.insert(a[en++]);  </span><br><span class="line">            ma = max(ma, en-st);  </span><br><span class="line">            s.erase(a[st++]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ma);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h2 id="6、map"><a href="#6、map" class="headerlink" title="6、map"></a>6、map</h2><p>这个容器适用于那些需要进行映射（可以根据Key找到对应的Value，作为hash还是不错的），因此map是关联数组。要允许重复元素，使用multimap。<br>map的应用：映射<br>例：HDU 4460<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;  </span><br><span class="line"><span class="keyword">int</span> vis[N], d[N];  </span><br><span class="line"><span class="built_in">map</span> &lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mp;  </span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> ma = <span class="number">0</span>, res, cnt = <span class="number">1</span>;  </span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q; q.push(x);  </span><br><span class="line">    <span class="built_in">memset</span>(vis+<span class="number">1</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (n+<span class="number">1</span>));  </span><br><span class="line">    <span class="built_in">memset</span>(d+<span class="number">1</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (n+<span class="number">1</span>));  </span><br><span class="line">    vis[x] = <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;  </span><br><span class="line">        <span class="keyword">int</span> t = q.front(); q.pop();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G[t].size(); i++) &#123;  </span><br><span class="line">            <span class="keyword">int</span> y = G[t][i];  </span><br><span class="line">            <span class="keyword">if</span> (vis[y]) <span class="keyword">continue</span>;  </span><br><span class="line">            vis[y] = <span class="number">1</span>;  </span><br><span class="line">            d[y] = d[t] + <span class="number">1</span>;  </span><br><span class="line">            <span class="keyword">if</span> (ma &lt; d[y]) res = y, ma = d[y];  </span><br><span class="line">            q.push(y); cnt++;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> cnt != n ? <span class="number">-1</span> : x == <span class="number">1</span> ? res: ma;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n), n) &#123;  </span><br><span class="line">        mp.clear();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) G[i].clear();  </span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">15</span>], str[<span class="number">15</span>];  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s), mp[s] = i;  </span><br><span class="line">        <span class="keyword">int</span> m;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, s, str);  </span><br><span class="line">            G[mp[s]].push_back(mp[str]);  </span><br><span class="line">            G[mp[str]].push_back(mp[s]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">int</span> ans = solve(<span class="number">1</span>, n);  </span><br><span class="line">        ans == <span class="number">-1</span> ? <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>) : <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, solve(ans, n));  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h2 id="7、stack"><a href="#7、stack" class="headerlink" title="7、stack"></a>7、stack</h2><p>stack，栈在STL里面它属于容器适配器，对容器的重新包装，后进先出结构。<br>stack的应用：单调栈的实现<br>例：POJ 2559<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;  </span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;  </span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;  </span></span><br><span class="line"><span class="class"><span class="title">inline</span> <span class="title">void</span> <span class="title">read</span>(<span class="title">T</span> &amp;<span class="title">res</span>) &#123;</span>  </span><br><span class="line">    <span class="keyword">char</span> c; res = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(c = getchar()));  </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(c)) res = res * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>, c = getchar();  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">int</span> l[N], r[N];  </span><br><span class="line">LL h[N];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n;  </span><br><span class="line">    <span class="keyword">while</span> (read(n), n) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) read(h[i]);  </span><br><span class="line">        <span class="keyword">while</span> (!s.empty()) s.pop();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (!s.empty() &amp;&amp; h[s.top()] &gt;= h[i]) s.pop();  </span><br><span class="line">            l[i] = s.empty() ? <span class="number">0</span> : s.top()+<span class="number">1</span>;  </span><br><span class="line">            s.push(i);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">while</span> (!s.empty()) s.pop();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (!s.empty() &amp;&amp; h[s.top()] &gt;= h[i]) s.pop();  </span><br><span class="line">            r[i] = s.empty() ? n : s.top();  </span><br><span class="line">            s.push(i);  </span><br><span class="line">        &#125;  </span><br><span class="line">        LL ans = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) ans = max(ans, (LL)h[i] * (r[i] - l[i]));  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%I64d\n&quot;</span>, ans);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p><h1 id="字符串算法"><a href="#字符串算法" class="headerlink" title="字符串算法"></a>字符串算法</h1><h2 id="1、trie树"><a href="#1、trie树" class="headerlink" title="1、trie树"></a>1、trie树</h2><p>例：HDU 1075<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">trie</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">trie * next[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> index;</span><br><span class="line">&#125;;</span><br><span class="line">trie *thead;</span><br><span class="line"><span class="keyword">char</span> dic[<span class="number">1000000</span>][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> trie * <span class="title">newnode</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">trie *t;</span><br><span class="line">t=(trie*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(trie));</span><br><span class="line"><span class="built_in">memset</span>(t,<span class="number">0</span>,<span class="keyword">sizeof</span>(trie));</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(trie * s,<span class="keyword">char</span> x[],<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">trie *t;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; x[i] ;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ] ) s=s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">t=newnode();</span><br><span class="line">s-&gt;next[x[i]-<span class="string">&#x27;a&#x27;</span> ]=t;</span><br><span class="line">s=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//for</span></span><br><span class="line">s-&gt;index=pos;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deltrie</span><span class="params">(trie * s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; <span class="number">26</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;next[i] ) deltrie(s-&gt;next[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(s);</span><br><span class="line">s=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(trie *s, <span class="keyword">char</span> x[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span>(x[<span class="number">0</span>] == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; x[i] ;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ] ) s=s-&gt;next[ x[i]-<span class="string">&#x27;a&#x27;</span> ];</span><br><span class="line">elsebreak;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x[i]==<span class="number">0</span>) returns-&gt;index;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,i,j,all;</span><br><span class="line">charword[<span class="number">20</span>],mars[<span class="number">20</span>],ch;</span><br><span class="line">thead=newnode();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,word)==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(word[<span class="number">0</span>]==<span class="string">&#x27;S&#x27;</span>)<span class="keyword">break</span>;</span><br><span class="line">i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,dic[i])==<span class="number">1</span>&amp;&amp; dic[i][<span class="number">0</span>]!=<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,mars);</span><br><span class="line">insert(thead,mars,i);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">all=i;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,word)==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(word[<span class="number">0</span>]==<span class="string">&#x27;S&#x27;</span>)<span class="keyword">break</span>;</span><br><span class="line">getchar(); j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch)==<span class="number">1</span>&amp;&amp; ch!=<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp; ch&lt;=<span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">mars[j]=ch;j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">mars[j]=<span class="number">0</span>;</span><br><span class="line">t=find( thead , mars );</span><br><span class="line">j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(t&gt;<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,dic[t]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mars[<span class="number">0</span>]!=<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,mars);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,ch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//while</span></span><br><span class="line">deltrie(thead);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2、KMP"><a href="#2、KMP" class="headerlink" title="2、KMP"></a>2、KMP</h2><p>例：HDU 2087<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Inf 0x3FFFFFFFFFFFFFFFLL  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi acos(-1.0)  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>+<span class="number">10</span>;  </span><br><span class="line"><span class="keyword">char</span> s1[maxn],s2[maxn];  </span><br><span class="line"><span class="keyword">int</span> next[maxn],ans;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Kmp</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s1);  </span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">strlen</span>(s2);  </span><br><span class="line">    <span class="keyword">if</span>(m&gt;n) <span class="keyword">return</span> ;  </span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">while</span>(j&amp;&amp;s1[i]!=s2[j]) j=next[j];  </span><br><span class="line">        <span class="keyword">if</span>(s1[i]==s2[j]) j++;  </span><br><span class="line">        <span class="keyword">if</span>(j==m) &#123;ans++;j=<span class="number">0</span>;&#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s2);  </span><br><span class="line">    next[<span class="number">0</span>]=next[<span class="number">1</span>]=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">int</span> j=next[i];  </span><br><span class="line">        <span class="keyword">while</span>(j&amp;&amp;s2[i]!=s2[j]) j=next[j];  </span><br><span class="line">        next[i+<span class="number">1</span>]=(s2[i]==s2[j])?j+<span class="number">1</span>:<span class="number">0</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="comment">//freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="comment">//freopen(&quot;out.txt&quot;,&quot;w&quot;,stdout);  </span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s1))  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(s1[<span class="number">0</span>]==<span class="string">&#x27;#&#x27;</span>) <span class="keyword">break</span>;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s2);  </span><br><span class="line">        ans=<span class="number">0</span>;  </span><br><span class="line">        getnext();  </span><br><span class="line">        Kmp();  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3、AC自动机"><a href="#3、AC自动机" class="headerlink" title="3、AC自动机"></a>3、AC自动机</h2><p>例：UVA 11468<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Inf 0x3FFFFFFFFFFFFFFFLL  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi acos(-1.0)  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000</span>+<span class="number">10</span>;  </span><br><span class="line"><span class="keyword">double</span> p[<span class="number">110</span>],dp[maxn][<span class="number">110</span>];  </span><br><span class="line"><span class="keyword">bool</span> vis[maxn][<span class="number">110</span>];  </span><br><span class="line"><span class="keyword">int</span> ch[maxn][<span class="number">63</span>],val[maxn],next[maxn],size,n;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">idx</span><span class="params">(<span class="keyword">char</span> c)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="keyword">return</span> c-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">    <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>) <span class="keyword">return</span> c-<span class="string">&#x27;a&#x27;</span>+<span class="number">10</span>;  </span><br><span class="line">    <span class="keyword">return</span> c-<span class="string">&#x27;A&#x27;</span>+<span class="number">10</span>+<span class="number">26</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));  </span><br><span class="line">    <span class="built_in">memset</span>(ch[<span class="number">0</span>],<span class="number">0</span>,<span class="keyword">sizeof</span>(ch[<span class="number">0</span>]));  </span><br><span class="line">    <span class="built_in">memset</span>(next,<span class="number">0</span>,<span class="keyword">sizeof</span>(next));  </span><br><span class="line">    <span class="built_in">memset</span>(val,<span class="number">0</span>,<span class="keyword">sizeof</span>(val));  </span><br><span class="line">    <span class="built_in">memset</span>(p,<span class="number">0</span>,<span class="keyword">sizeof</span>(p));  </span><br><span class="line">    size=<span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> u=<span class="number">0</span>,len=<span class="built_in">strlen</span>(s);  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">int</span> c=idx(s[i]);  </span><br><span class="line">        <span class="keyword">if</span>(!ch[u][c])  </span><br><span class="line">        &#123;  </span><br><span class="line">            ch[u][c]=++size;  </span><br><span class="line">            <span class="built_in">memset</span>(ch[size],<span class="number">0</span>,<span class="keyword">sizeof</span>(ch[size]));  </span><br><span class="line">            val[size]=<span class="number">0</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        u=ch[u][c];  </span><br><span class="line">    &#125;  </span><br><span class="line">    val[u]=<span class="number">1</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">62</span>;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(ch[<span class="number">0</span>][i]) q.push(ch[<span class="number">0</span>][i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">int</span> u=q.front();q.pop();  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">62</span>;++i)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">int</span> v=ch[u][i];  </span><br><span class="line">            <span class="keyword">if</span>(!v) &#123;ch[u][i]=ch[next[u]][i];<span class="keyword">continue</span>;&#125;  </span><br><span class="line">            q.push(v);  </span><br><span class="line">            <span class="keyword">int</span> j=next[u];  </span><br><span class="line">            <span class="keyword">while</span>(j&amp;&amp;!ch[j][i]) j=next[j];  </span><br><span class="line">            next[v]=ch[j][i];  </span><br><span class="line">            val[v]|=val[next[v]];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> L)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(L==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1.0</span>;  </span><br><span class="line">    <span class="keyword">if</span>(vis[u][L]) <span class="keyword">return</span> dp[u][L];  </span><br><span class="line">    vis[u][L]=<span class="literal">true</span>;  </span><br><span class="line">    dp[u][L]=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">62</span>;++i)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(!val[ch[u][i]])  </span><br><span class="line">            dp[u][L]+=p[i]*f(ch[u][i],L<span class="number">-1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> dp[u][L];  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">char</span> str[<span class="number">110</span>];  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="comment">//freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin);  </span></span><br><span class="line">    <span class="comment">//freopen(&quot;out.txt&quot;,&quot;w&quot;,stdout);  </span></span><br><span class="line">    <span class="keyword">int</span> t,tcase=<span class="number">0</span>;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);  </span><br><span class="line">    <span class="keyword">while</span>(t--)  </span><br><span class="line">    &#123;  </span><br><span class="line">        tcase++;  </span><br><span class="line">        Init();  </span><br><span class="line">        <span class="keyword">int</span> K;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;K);  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;K;++i)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);  </span><br><span class="line">            insert(str);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);  </span><br><span class="line">        <span class="keyword">char</span> c[<span class="number">3</span>];  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,c);  </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;p[idx(c[<span class="number">0</span>])]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        build();  </span><br><span class="line">        <span class="keyword">int</span> L;  </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;L);  </span><br><span class="line">        <span class="keyword">double</span> ans=f(<span class="number">0</span>,L);  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: %lf\n&quot;</span>,tcase,ans);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S复赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-J/S 初赛考纲</title>
      <link href="CSP-JS-%E5%88%9D%E8%B5%9B%E8%80%83%E7%BA%B2/"/>
      <url>CSP-JS-%E5%88%9D%E8%B5%9B%E8%80%83%E7%BA%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="一、人物"><a href="#一、人物" class="headerlink" title="一、人物"></a>一、人物</h1><ul><li><p>艾伦（阿兰）·麦席森·图灵：英国数学家，计算机之父，人工智能之父，计算机逻辑的奠基者，提出“图灵机”概念，1966年由美国计算机协会ACM设“图灵奖”，是计算机界最负盛名、最崇高的一个奖项，有“计算机界的诺贝尔奖”之称，每年评选出一名计算机科学家，目前获得该奖项的华人学者仅有2000年图灵奖得主姚期智教授。现代计算机的基础是抽象的图灵机。（NOIP2017，2018提高组）</p></li><li><p>王选：汉字激光照排系统的创始人，为新闻、出版全过程的计算机化奠定了基础，被誉为“汉字印刷术的第二次发明”。中国计算机学会王选奖原名“中国计算机学会创新奖”，于2005年创立，每年评选一次，属于社会力量设立的科学技术奖。2006年，为了纪念王选院士为中国计算机事业做出的非凡贡献，学中国计算机学会将中国计算机学会创新奖更名为中国计算机学会王选奖。（NOIP2017提高组）</p></li><li><p>冯·诺依曼：美籍匈牙利数学家，现代电子计算机之父，世界上第一台现代意义的通用计算机EDVAC（离散变量自动电子计算机，二进制）的发明者，提出①存储程序思想 ②计算机硬件设备由存储器、中央处理器、控制器、输入设备和输出设备五部分组成</p></li><li><p>世界上第一台电子计算机：ENIAC（电子数值积分计算机，十进制），由宾夕法尼亚大学的莫奇莱教授和埃克特博士等为计算弹道轨迹而研制。</p></li><li><p>布莱士·帕斯卡：法国科学家，制造出机械计算机的第一人。</p></li><li><p>莱布尼茨：德国数学家，发明了“乘法器”，即能够连续重复地做加法减法。</p></li><li><p>巴贝奇：英国剑桥大学科学家，设计的“分析机”有齿轮式“存贮仓库”和“运算室”、“控制器”、输入输出部件，首次提出了类似于现代计算机五大部件的逻辑结构。</p></li><li><p>阿达·奥古斯塔：英国数学家，拜伦的女儿，第一个写软件的人，穿孔机程序创始人，建立了循环和子程序概念，为计算程序拟定“算法”。</p></li><li><p>香农：美国数学家，创立了开关电路理论，把二进制与运用以脉冲方式处理信息的继电器开关相对应，从理论到技术改变了数字电路的设计方向。</p></li></ul><h1 id="二、计算机的组成"><a href="#二、计算机的组成" class="headerlink" title="二、计算机的组成"></a>二、计算机的组成</h1><p><strong>存储器、中央处理器、控制器、输入设备、输出设备</strong></p><p>从理论上讲，CPU和主存组成主机。</p><ul><li>中央处理器CPU：由运算器、控制器和一些寄存器组成；运算器进行各种算术运算和逻辑运算；控制器是计算机的指挥系统，控制机器各个部件协调工作。CPU的主要性能指标是主频和字长，主要任务是执行数据运算和程序控制。（NOIP2015提高组）</li><li>存储器：中央处理器能直接访问的存储器称为内部存储器，它包括快速缓冲存储器(位于CPU和内存之间，现在一般集成在CPU上)和主存储器，中央处理器不能直接访问的存储器称为外部存储器，外部存储器中的信息必须调入内存后才能为中央处理器处理。地址位数N与可寻址的存储单元的个数M的关系：$M = 2^N$，单位：B。（NOIP2016提高组）</li><li>主存储器（内存）：主存储器按读写功能，可分只读存储器（ROM，断电数据还在，如BIOS（基本输入输出系统））和随机存储器（RAM，断电数据没有，如内存条）两种。</li><li>外存储器：也称为辅助存储器，一般容量较大，速度比主存较慢，包括软盘、硬盘、光盘、U盘等一系列移动存储设备。<ul><li>硬盘（Hard disk）：目前的硬盘大多采用了温彻斯特技术，所以又称为“温盘”；温氏技术的特点是：将盘片、读写磁头及驱动装置精密地组装在一个密封盒里；采用接触式起停，非接触式读写的方式（磁盘不工作时，磁头停在磁盘表面的起停区，一旦加电后，磁头随着盘片旋转的气流“飞”起来，悬浮在磁盘表面，进行读写）。</li><li>软盘（Floppy Disk）：目前常见的是3.5英寸/1.44 MB的软盘。</li><li>光盘存储器：CD-ROM（只读型光盘），容量大约是650 MB；EOD（可擦写光盘）；DVD容量在4.7GB~17GB；EVD，DVD的升级版；VCD，CD的一种，即Video CD。</li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj8xpbp7c6j30ia0bs3zj.jpg" alt=""></p><p>数据读写速度：寄存器 &gt; 高速缓存&gt;内存 &gt;硬盘＞U盘＞光盘＞其他辅助存储器</p><h1 id="三、NOIP-CSP的历史、大事件-每年都考"><a href="#三、NOIP-CSP的历史、大事件-每年都考" class="headerlink" title="三、NOIP / CSP的历史、大事件(每年都考)"></a>三、NOIP / CSP的历史、大事件(每年都考)</h1><ul><li><p>NOI：中国计算机学会于1984年（当年，邓小平提出计算机要从娃娃抓起）创办全国青少年计算机程序设计竞赛，即全国青少年信息学奥林匹克竞赛，是国内包括港澳在内的省级代表队最高水平的大赛。</p></li><li><p>NOIP：中国计算机学会于1995年创办全国青少年信息学奥林匹克联赛。NOIP在同一时间、不同地点以各省市为单位由特派员组织。全国统一大纲、统一试卷，初、高中或其他中等专业学校的学生可报名参加。联赛分初赛和复赛，初赛考察通用和实用的计算机科学知识，以笔试为主。复赛为程序设计，须在计算机上调试完成。参加初赛者须达到一定分数线后才有资格参加复赛。联赛分普及组和提高组两个组别，难度不同，分别面向初中和高中阶段的学生。</p></li><li><p>从2005年开始，NOIP不再支持Basic；从2022年开始，不再支持Pascal。</p></li><li><p>选手进入考场时，只许携带笔、橡皮等非电子文具入场。禁止携带任何电子产品或机器设备入场，无存储功能的手表除外；手机（关机）、U盘或移动硬盘、键盘、鼠标、闹钟、计算器、书籍、草稿纸及背包等物品必须存放在考场外。如有违规带入的，一经发现，NOI各省特派员可直接取消违规选手的参赛资格。</p></li><li><p>CCSP：大学生计算机系统与程序设计竞赛，由中国计算机学会(CCF)于2016年发起的一个面向大学生的竞赛，每年举办一次，考察的是算法、编程以及计算机系统设计能力，旨在进一步提高计算机教育质量，使学生通过竞赛进一步学习和掌握计算机系统知识，同时对高校计算机教育产生引领作用。</p></li><li><p>CSP：中国计算机学会于2014年推出CCF计算机软件能力认证，该项认证重点考察软件开发者实际编程能力，由中国计算机学会统一命题、统一评测，委托各地设立的考试机构进行认证考试。该项认证每年大约3、9、12月各举办一次。认证者不限年龄，不限学历，不限报考次数，不限国籍 ，在报名官网注册账户后均可报名参加认证。语言：C/C++(Dev-CPP 5.4.0 (Min GW 4.7.2))，Java(Eclipse (Java SDK 1.7.0_15))，Python(3.6.5) 浏览器：Chrome</p><blockquote><p>CSP认证考试可以带纸质资料进入考场，不过只能是常用语言的程序设计基础书、数据结构的相关书籍。不允许U盘、手机等电子设备进入考场。</p><p>CSP-S/J：认证开始15分钟后，认证者不能再进入认证点。如有认证者提前离开认证点，除身体特别原因外，须在认证进行2小时后方可准予离开。在第一轮认证期间，任何人不得将试卷携带出考场。认证者进入考场时，监考检查认证者携带物品。认证者只许携带笔、橡皮等非电子文具入场。禁止携带任何电子产品或机器设备入场，无存储功能的手表除外；手机（关机）、U盘或移动硬盘、键盘、鼠标、闹钟、计算器、书籍、草稿纸及背包等物品必须存放在考场外。如有违规带入的，一经发现，CSP-J/S认证总负责人可直接取消违规认证者的参加资格。</p></blockquote><p>CSP-S/J：认证开始15分钟后，认证者不能再进入认证点。如有认证者提前离开认证点，除身体特别原因外，须在认证进行2小时后方可准予离开。在第一轮认证期间，任何人不得将试卷携带出考场。认证者进入考场时，监考检查认证者携带物品。认证者只许携带笔、橡皮等非电子文具入场。禁止携带任何电子产品或机器设备入场，无存储功能的手表除外；手机（关机）、U盘或移动硬盘、键盘、鼠标、闹钟、计算器、书籍、草稿纸及背包等物品必须存放在考场外。如有违规带入的，一经发现，CSP-J/S认证总负责人可直接取消违规认证者的参加资格。</p></li></ul><h1 id="四、语言"><a href="#四、语言" class="headerlink" title="四、语言"></a>四、语言</h1><p>  程序设计语言一般分为机器语言、汇编语言和高级语言三大类，机器语言和汇编语言都是低级语言，高级语言又称算法语言。</p><blockquote><ul><li>机器语言：由0和1的不同组合所形成的可为计算机直接识别和执行的二进制指令代码的集合，是面向机器的程序设计语言。机器语言程序占用内存少、执行效率高，但编程工作量大，容易出错；依赖具体的计算机体系，因而程序的通用性、移植性都很差。 速度最快</li><li>汇编语言：使用助记符和有关符合编写的程序称为汇编语言程序，比机器语言更加直观，每一条用符号来表示的汇编指令都与一条计算机机器指令对应，是面向机器的程序设计语言。汇编语言的出现大大降低了记忆难度，占用内存较少，运行效率较高，不仅便于检查和修改程序错误，而且指令、数据的存放位置可以由计算机自动分配，但对于计算机CPU及其外围硬件设备具有很大的依赖性，程序员需要十分熟悉计算机系统的硬件结构。用汇编语言编写的程序称为源程序，计算机不能直接识别和处理源程序，必须通过某种方法将它翻译成为计算机能够理解并执行的机器语言，执行这个翻译工作的程序称为汇编程序。 速度快</li><li>高级语言：人工设计的语言，对具体的算法进行描述，所以又称为算法语言。高级语言独立于计算机的硬件（即与具体的硬件无关），相对于低级语言更容易实现跨平台的移植。 速度慢</li></ul></blockquote><ul><li><p>结构化语言：代码和数据分离，专门描述一个功能单元逻辑要求。它不同于自然语言，也区别于任何特定的程序语言(如VB、VC 等)，是一种介于两者之间的语言。结构化描述语言一般采用英语，既有自然语言灵活性强、表达丰富的特点，又清晰易读和逻辑严密，还是一种用于数据库查询和编程的语言，已经成为关系型数据库普遍使用的标准，对程序设计和数据库的维护都带来了极大的方便，广泛地应用于各种数据查询。</p></li><li><p>Pascal：语法严谨，层次分明，程序易写，可读性强，是第一个结构化编程语言。它基于ALGOL编程语言，是面向过程的编译型语言程序语言。</p></li><li>C：结构化编译型编程语言，具有变量作用域以及递归功能的过程式语言，是面向过程、抽象化的通用程序设计语言，广泛应用于底层开发。C语言具有高效、灵活、功能丰富、表达力强和较高的可移植性等特点，在程序设计中备受青睐。C语言的设计影响了众多后来的编程语言，例如C++、Java、C#等。</li><li>面向对象语言：以对象作为基本程序结构单位，用于描述的设计是以对象为核心，而对象是程序运行时刻的基本成分。语言中提供了类、继承等成分，类、对象的思想实现程序共享，适合大型程序。Simula是第一个面向对象语言。</li><li>VB(Visual Basic)：Microsoft开发的一种通用的结构化的、模块化的、面向对象的、包含协助开发环境的事件驱动为机制的可视化混合型（侧重于解释）程序设计语言，是一种可用于微软自家产品开发的语言。</li><li>C++：面向对象的编译型程序设计语言，最初它被称作“C with Classes”（包含类的C语言），是C语言的继承，进一步扩充和完善了C语言。它是一种静态数据类型检查的、支持多重编程范式的通用程序设计语言，支持过程化程序设计、数据抽象、面向对象程序设计、泛型程序设计等多种程序设计风格。</li><li>Java：跨平台、分布式、多线索、面向对象的混合型（侧重于解释）程序设计语言，是一种先编译后解释的语言，所以它不如全编译性语言快。许多的Android应用都是Java程序员开发者开发，Java还广泛应用于企业级Web应用开发和移动应用开发。</li><li>解释语言：应用程序源代码一边由相应语言的解释器“翻译”成目标代码(机器语言)，一边执行，每条语言只有在执行才被翻译，每执行一次就翻译一次，因此效率比较低，而且不能生成可独立执行的可执行文件 。解释程序的优点是当语句出现语法错误时，可以立即引起程序员注意，而程序员在程序开发期间就能进行校正。一般地来说，如果你听别人说到动态语言，大多都是指解释型语言。eg.Python</li><li>编译语言：编译是指在应用源程序执行之前，就将程序源代码“翻译”成目标代码 (机器语言)，因此其目标程序可以脱离其语言环境独立执行，使用比较方便、效率较高 。Java 程序需要编译，但是没有直接编译成为机器语言，而是编译成为字节码，然后在 Java 虚拟机上用解释方式执行字节码。这种运行方式带来了一些优势，但同时直接导致了复杂的环境、不算很高的效率和很多的争议。</li></ul><h1 id="五、计算机基础"><a href="#五、计算机基础" class="headerlink" title="五、计算机基础"></a>五、计算机基础</h1><h2 id="1-ASCII码"><a href="#1-ASCII码" class="headerlink" title="1.ASCII码"></a>1.ASCII码</h2><p>  ASCII（American Standard Code for Information Interchange，美国标准信息交流码）码是目前微型计算机中使用最广泛的一种字符编码，用7位二进制数来编码（占一个字节），可表示128个字符，最高位为0或作奇偶校验用。</p><p>  常用编码：空格-&gt;0，回车-&gt;13，字符0-&gt;48，A-&gt;65，a-&gt;972.</p><h2 id="2-汉字编码"><a href="#2-汉字编码" class="headerlink" title="2.汉字编码"></a>2.汉字编码</h2><p>  以ASCII码中的94个字符为基础，由任意两个ASCII码组成一个汉字编码（即一个汉字由两个字节组成），第一个字节称为“区”，第二个字节称为“位”，则国标码最多可表示 $94^2$个汉字符号。在国标码中，实际收录汉字6763个，其中一级汉字3755个，按拼音排序；二级汉字3008个，按部首排序。为了避免国标码和ASCII码的双重定义，在计算机内部存储时，汉字的各个字节的最高位都置为1，这时的汉字编码称为机内码。</p><ul><li><p>区位码：优点是无重码或重码率低，缺点是难于记忆。</p></li><li><p>音码：典型代表有全拼码和双拼码，优点是大多数人都易于掌握，但同音字多，重码率高，影响输入的速度。</p></li><li><p>形码：典型代表有五笔字型、表形码，根据汉字的字型进行编码，编码的规则较多，难于记忆，必须经过训练才能较好地掌握；重码率低。</p></li><li><p>音形码：典型代表有自然码、首尾拼音码，将音码和形码结合起来，输入汉字，减少重码率，提高汉字输入速度。</p></li><li><p>字形存储码：供计算机输出汉字（显示或打印）用的二进制信息，也称字模。通常，采用的是数字化点阵字模。在相同点阵中，不管其笔划繁简，每个汉字所占的字节数相等。</p></li></ul><h2 id="3-机内代码及其运算"><a href="#3-机内代码及其运算" class="headerlink" title="3.机内代码及其运算"></a>3.机内代码及其运算</h2><h3 id="原码："><a href="#原码：" class="headerlink" title="原码："></a>原码：</h3><p>  设$X$，若为非负数，则符号位为0，其余各位取值不变，否则符号位为1。如：</p><p>  $X=+1110001$，则$[X]原=01110001；X=-1110001$，则$[X]原=11110001$。</p><h3 id="反码："><a href="#反码：" class="headerlink" title="反码："></a>反码：</h3><p>  设$X$，若为非负数，则与原码相同，否则符号位为1，其余各位取值求反。如：</p><p>  $X=+1110001$，则$[X]反=01110001$；$X=-1110001$，则$[X]反=10001110$。</p><h3 id="补码："><a href="#补码：" class="headerlink" title="补码："></a>补码：</h3><p>  设$X$，若为非负数，则与原码相同，若为负数，则为反码加1。如：</p><p>  $X=+1110001$，则$[X]补=01110001$；$X=-1110001$，则$[X]补=10001111$。</p><h3 id="负补："><a href="#负补：" class="headerlink" title="负补："></a>负补：</h3><p>  对补码（包括符号位）的每一位求反，且最低位加1。如：</p><p>  $X=+1110001，[-X]补=10001111$。</p><p>  $[X+Y]补=[X]补+[Y]补，[X-Y]补=[X]补-[Y]补=[X]补+[-Y]补$（最高位产生的进位要丢掉）</p><h3 id="4-进制（每年都考）"><a href="#4-进制（每年都考）" class="headerlink" title="4.进制（每年都考）"></a>4.进制（每年都考）</h3><p>  十进制-&gt;R进制：整数：短除法，倒序取余数</p><p>  小数：连续乘以R，顺序取整数，直到小数部分为0</p><p>  <img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj8xzpxstfj30fo0c10tt.jpg" alt=""></p><p>R进制-&gt;十进制：小数点向左，第n位数字乘以$R^{n-1}$ ；小数点向右，第n为数字乘以$R^{-n}$，相加得到对应的十进制数。</p><h2 id="5-逻辑运算"><a href="#5-逻辑运算" class="headerlink" title="5.逻辑运算"></a>5.逻辑运算</h2><p>0：假 1：真</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj8y1neiqxj30re0510tk.jpg" alt=""></p><p>同或：相同为真，不同为假 异或（Xor）：相同为假，不同为真</p><h2 id="6-图形和图像"><a href="#6-图形和图像" class="headerlink" title="6.图形和图像"></a>6.图形和图像</h2><p>三基色：RGB，红绿蓝</p><p>三原色：红黄蓝</p><p>饱和度：颜色的纯度，饱和度越大越鲜艳。纯光谱色是完全饱和的，加入白光会稀释饱和度。</p><p>位图：点阵图，由许多点（像素）排列组合而成，容量较大，只要有足够多的不同色彩的像素就可以制作出色彩丰富的位图图像，放大或缩小及旋转时容易失真，清晰度受显示或打印设备的分辨率和图像文件自身的分辨率影响。</p><p>常见制作工具：Photoshop、画图等。</p><p>常见格式：BMP、TIFF、GIF、JPEG（压缩率最高）、PSD、PNG等。</p><p>矢量图：以数学向量方式记录图像内容，文件小，不会失真，不宜制作色彩变化太多的图像。常见制作工具：Flash、CorelDRAW等。 常见格式：WMF</p><h1 id="六、计算机网络发展"><a href="#六、计算机网络发展" class="headerlink" title="六、计算机网络发展"></a>六、计算机网络发展</h1><h2 id="1-网络的发展"><a href="#1-网络的发展" class="headerlink" title="1.网络的发展"></a>1.网络的发展</h2><p>第一个远程计算机网络：1969年由美国国防部的高级研究计划局ARPA组织研制，称为ARPANET，是Internet的前身。</p><p>二十世纪六十年代中期之前：以单台计算机为中心的远程联机系统，也称为面向终端的计算机通信网络。</p><p>二十世纪六十年代中期至七十年代：计算机-计算机网络。</p><p>二十世纪七十年代末至九十年代：开放式标准化的网络。</p><p>二十世纪九十年代末至今L新一代的计算机网络，国际互联网与信息高速公路</p><h2 id="2-网络的基本概念"><a href="#2-网络的基本概念" class="headerlink" title="2.网络的基本概念"></a>2.网络的基本概念</h2><p>计算机网络是利用通信线路和设备，把分布在不同地理位置上的、功能独立的多个计算机系统连接起来，以功能完善的网络软件（如网络通信协议、信息交换方式以及网络操作系统等）来实现网络中信息传递和资源共享的系统。功能独立的计算机系统一般指有CPU的计算机。</p><p>简单地说，计算机网络是指互联起来的自主计算机的集合。</p><p>自主：计算机之间没有主从关系。 集合：构成一个网络至少需要两台计算机。</p><p>最基本的网络拓扑结构：总线拓扑、星型拓扑和环形拓扑。</p><p>总线拓扑结构是一种共享通路的物理结构。这种结构中总线具有信息的双向传输功能，普遍用于局域网的连接，总线一般采用同轴电缆或双绞线。总线拓扑结构的优点是：安装容易，扩充或删除一个节点很容易，不需停止网络的正常工作，节点的故障不会殃及系统。由于各个节点共用一个总线作为数据通路，信道的利用率高。但总线结构也有其缺点：由于信道共享，连接的节点不宜过多，并且总线自身的故障可以导致系统的崩溃。如：以太网Ethernet</p><p>星形拓扑结构是一种以中央节点为中心，把若干外围节点连接起来的辐射式互联结构。这种结构适用于局域网，特别是近年来连接的局域网大都采用这种连接方式。这种连接方式以双绞线或同轴电缆作连接线路。星型拓扑结构的特点是：安装容易，结构简单，费用低，通常以集线器(Hub)作为中央节点，便于维护和管理。中央节点的正常运行对网络系统来说至关重要。</p><p>环形拓扑结构是将网络节点连接成闭合结构。信号顺着一个方向从一台设备传到另一台设备，每一台设备都配有一个收发器，信息在每台设备上的延时时间是固定的。这种结构特别适用于实时控制的局域网系统。环型拓扑结构的特点是：结构简单，适合使用光纤，传输距离远，传输延迟确定。有些网络系统为了提高通信效率和可靠性，采用了双环结构,即在原有的单环上再套一个环,使每个节点都具有两个接收通道。环型网络的弱点是，当节点发生故障时，整个网络就不能正常工作，且难以诊断故障。如：令牌环网Token Ring</p><p>网络的主要功能：资源共享、信息传输、分布处理、综合信息服务</p><h2 id="3-网络的分类"><a href="#3-网络的分类" class="headerlink" title="3.网络的分类"></a>3.网络的分类</h2><ul><li>局域网LAN：作用范围一般为几米到几十千米，大约是一个房间、一幢大楼或一个校园，用于连接个人电脑、工作站等各种类型的计算机和各种外围设备以实现资源共享和信息交换。如：以太网、令牌环网、令牌总线网等。</li><li>城域网MAN：介于LAN与WAN之间，可覆盖一群办公室或一个城市，既可能是私有的也可能是公用的。</li><li>广域网WAN：作用范围一般为几十到几千千米，覆盖一个国家或一个洲。</li><li>网络可划分成资源子网和通信子网两部分。</li></ul><h2 id="4-网络的标准和协议"><a href="#4-网络的标准和协议" class="headerlink" title="4.网络的标准和协议"></a>4.网络的标准和协议</h2><p><strong>ISO/OSI协议模型：</strong>各功能层之间，上一层对下一层提出服务要求，下一层完成上一层提出的要求。OSI参考模型将网络结构划分成七层：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。这只是一种理想的概念模型。</p><p><strong>TCP/IP协议模型：</strong>传输控制协议/互联网络协议，诞生于1974年12月。分为应用层（OSI的应用层、表示层、会话层）、传输层、网际层（OSI的网络层）、网络接口层（OSI的数据链路层、物理层），包含了TCP、IP、UDP（用户数据报协议）、ARP（地址解析协议）等。（NOIP2014提高组）</p><ul><li>其他常见协议：WWW(World Wide Web)：万维网</li><li>URL（Uinform Resource Locator）：统一资源定位器</li><li>HTTP（Hypertext Transfer Protocol）：超文本传输协议</li><li>FTP (File Transfer Protocol)：文本传输协议</li><li>SMTP（Simple Mail Transfer Protocol ）简单邮件传输协议</li></ul><p><strong>IP地址：</strong>Internet中的每一台主机分配一个在全球范围唯一地址。IPv4地址是由32位二进数码表示。为方便记记忆，把这32位二进制数每8个一段用“.” 隔开，再把每一段的二进制数化成十进制数，也就得到我们现在所看到的IP地址形式，用“.”隔开的四个十进制整数，每个数字取值为0—255。（NOIP2015提高组）</p><p>IP地址分A、B、C、D、E五类，目前大量使用的是A、B、C三类，最高位1……126为A类，128……191是B类，192……223是C类。D类为Internet体系结构委员会IAB专用，E类保留在今后使用。IPv4地址不够分，将被IPv6协议取代，由128位二进制码表示。</p><p><strong>域名：</strong>是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。</p><p><strong>通用顶级域：</strong></p><ul><li>无赞助：.biz .com .edu .gov .info .int .mil .name .net .org .pro .xyz</li><li>赞助：.aero .cat .coop .jobs .museum .travel .mobi .asia .tel .xxx</li></ul><h2 id="5-操作系统（OS）"><a href="#5-操作系统（OS）" class="headerlink" title="5.操作系统（OS）"></a>5.操作系统（OS）</h2><ul><li><p>Windows类（Microsoft）：1.0（1985），2.0（1987），3.0（1990，红心大战和扫雷），NT，95（出现“开始”菜单），98（原生支持USB接口），98 SE，2000（最后一个专为企业开发的Windows系统），Me（最后一个基于MS-DOS开发的操作系统），XP，Vista，7，8，10</p></li><li><p><strong>-UNIX：</strong>多用户，多任务的分时操作系统，大部分是由C语言编写的，这使得系统易读，易修改，易移植，1969年开发。</p></li><li><p><strong>LINUX：</strong>自由和开放源码的类UNIX操作系统，较适用于小型网络，1991年10月5日发布</p></li><li><p><strong>MAC OS：</strong>运行于苹果电脑上的操作系统，是首个在商用领域成功的图形用户界面操作系统。Mac系统是基于Unix内核的图形化操作系统，一般情况下在普通PC上无法安装的操作系统。由苹果公司自行开发。</p></li><li><p><strong>iOS：</strong>原名为iPhone OS，是苹果公司为其移动设备所开发的专有移动操作系统，为其公司的许多移动设备提供操作界面，支持设备包括iPhone、iPad和iPod touch。iPhone OS自iOS 4起便改名为iOS。</p></li></ul><h2 id="6-其他"><a href="#6-其他" class="headerlink" title="6.其他"></a>6.其他</h2><p>无线通信技术：蓝牙，Wifi，GPRS（通用分组无线服务技术，GSM移动电话用户可用的一种移动数据业务，属于第二代移动通信中的数据传输技术）</p><p><strong>网卡：</strong>可以将单个计算机接入到计算机网络中的网络接入通讯设备。</p><h1 id="七、数据结构"><a href="#七、数据结构" class="headerlink" title="七、数据结构"></a>七、数据结构</h1><h2 id="1-存储结构"><a href="#1-存储结构" class="headerlink" title="1.存储结构"></a>1.存储结构</h2><p>数组：具有相同类型的若干变量按有序的形式组织起来，因此占用的空间是连续的。数组可分为数值数组、字符数组、指针数组、结构数组等。</p><p>bool a[x] 数组占字节数：1<em>x</em>y</p><p>char/unsigned (short) a[x] [y]数组占字节数：2<em>x</em>y</p><p>int/unsigned long/float a[x] [y]数组占字节数：4<em>x</em>y</p><p>(unsigned) long long/double a[x] [y]数组占字节数：8<em>x</em>y</p><p>链表：物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。相比于线性表顺序结构，链表比较方便插入和删除。（NOIP2015提高组）</p><p>单链表：每个节点只有一个存储直接后继结点地址的链域。</p><p>双向链表：既有存储直接后继结点地址的链域，称为右链域。又有存储直接前驱节点地址的链域，称为左链域。（NOIP2015提高组T13：插入结点；NOIP2010T9：删除结点）</p><h2 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="2.数据结构"></a>2.数据结构</h2><p>散列表：又称哈希表，通过关键码映射到表中一个位置来访问记录，以加快查找的速度。</p><p>栈：后进先出，栈顶允许进行插入和删除操作，栈底固定。（NOIP2015提高组）</p><p>队列：先进先出，队头进行删除操作，队尾进行插入操作。</p><h2 id="3-树"><a href="#3-树" class="headerlink" title="3.树"></a>3.树</h2><p>树上每个元素称为节点，有一个特定的节点称为根节点。树是递归定义的，因此树的操作和应用大都是采用递归思想来解决的。</p><ul><li><p>节点的度：一个节点的子树个数。度为0的节点称为叶节点（or 树叶），度不为0的节点称为分支节点，根节点以外的分支节点称为内部节点。树中各节点的度的最大值称为这棵树的（宽）度。</p></li><li><p>深度：节点的层次等于其父节点的层次数加1，树中各点的层次的最大值称为这棵树的深度。</p></li><li><p>森林：$m(m≥0)$棵互不相交的树的集合。</p></li><li><p>完全二叉树：深度为k，有n个节点的二叉树，当且仅当其每一个节点都与深度为k的满二叉树中编号从1到n的节点一一对应时，称为完全二叉树。</p></li><li><p>堆：完全二叉树，节点的值大于它两个儿子的值时称为大根堆，节点的值小于它两个儿子的值时称为小根堆。堆可以在log n的时间内完成插入节点的功能。</p></li></ul><h2 id="4-图"><a href="#4-图" class="headerlink" title="4.图"></a>4.图</h2><ul><li><p>有向图：若有$n$个顶点，则最多有$n(n-1)$条弧，此时称作有向完全图。以顶点$v$为弧尾的弧的数目称作顶点$v$的出度，以顶点$v$为弧头的弧的数目称作顶点v的入度。任意两点之间有双向路径的有向图称为强连通图，否则，将其中的极大连通子图称为强连通分量。</p></li><li><p>无向图：若有$n$个顶点，则最多有$\frac{n(n-1)}{2}$条边，此时称作无向完全图。与顶点$v$相关的边的条数称作顶点$v$的度。任意两点之间都连通的无向图称为连通图，否则，将其中的极大连通图称为连通分量。</p></li></ul><p>定理：</p><p>①图G中所有顶点的度数之和等于边数的两倍。</p><p>②任意一个图一定有偶数个奇点。</p><ul><li><p>路径长度：路径上边或弧的数目。若路径上顶点没有重复出现，则称这条路径为简单路径。</p></li><li><p>生成树：极小连通子图。包含图的所有n个结点，但只含图的n-1条边。在生成树中添加一条边之后，必定会形成回路或环。</p></li><li><p>哈夫曼树：给定n个权值作为n个叶子结点，构造一棵二叉树，若该树的带权路径长度达到最小，称这样的二叉树为最优二叉树，也称为哈夫曼树(Huffman Tree)。哈夫曼树是带权路径长度最短的树，权值较大的结点离根较近。运用了贪心思想。</p></li></ul><h1 id="八、算法"><a href="#八、算法" class="headerlink" title="八、算法"></a>八、算法</h1><h2 id="1-算法的基本概念"><a href="#1-算法的基本概念" class="headerlink" title="1.算法的基本概念"></a>1.算法的基本概念</h2><ul><li><p>算法的特征：有穷性，确切性，至少一个输出，可行性</p></li><li><p>表示方法：自然语言法，程序流程图法（顺序结构，选择结构，循环结构），程序法</p></li><li><p>复杂度：时间复杂度，通常题目中给出的是时间递推关系式。</p></li></ul><h2 id="2-排序"><a href="#2-排序" class="headerlink" title="2.排序"></a>2.排序</h2><ul><li>简单排序：选择排序：对待排序的记录序列进行n-1遍的处理。第一遍处理是将L[1..n]中最小</li><li>者与L[1]交换位置，第二遍处理是将L[2..n]中最小者与L[2]交换位置，以</li><li>此类推，时间复杂度为$O(n^2)$。选择排序是稳定排序。</li><li>插入排序：经过i-1遍处理后，L[1..i-1]已排好序。第i遍处理仅将L[i]插入L[1..i-1]的</li><li>适当位置p，原来p后的元素一一向右移动一个位置，使得L[1..i]又是排</li><li>好序的序列，时间复杂度为$O(n^2)$。插入排序是稳定排序。</li><li>冒泡排序：又称交换排序。对待排序的记录的关键字进行两两比较，如果发现是反</li><li>序的，则进行交换，时间复杂度为$O(n^2)$。冒泡排序是稳定排序。</li><li>快速排序：先从数据序列中选一个元素，并将序列中所有比该元素小的元素都放在它的一边，</li><li>再对左右两边分别用同样的方法处理，直到每一个待处理的序列长度为1，处理结</li><li>束。时间复杂度下限为O(nlogn)，上限为$O(n^2)$。快速排序是不稳定排序，基于分治思想。</li><li>希尔排序：将整个无序序列分割成若干小的子序列分别进行插入排序或冒泡排序。</li><li>堆排序</li><li>二叉树排序</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> CSP-J/S初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盘点全球那些奇葩机场</title>
      <link href="dangerairpot/"/>
      <url>dangerairpot/</url>
      
        <content type="html"><![CDATA[<p>在全球各地，分布着这样一些机场，它们有的坐落在山脉中，有的跑道只有几百米，还有些有奇奇怪怪的难以避免的设计缺陷。</p><h2 id="朱莉安娜公主国际机场"><a href="#朱莉安娜公主国际机场" class="headerlink" title="朱莉安娜公主国际机场"></a>朱莉安娜公主国际机场</h2><p>朱莉安娜公主国际机场位于加勒比海圣马丁岛，机场命名自荷兰当时的王位继承人朱莉安娜公主。机场始建于20世纪40年代，在第二次世界大战中供美国军队使用，在1943年后便被改建成了民用机场。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxi07mv3j30fo0jldjs.jpg" alt=""></p><p>朱莉安娜公主机场的最大特点就是跑道只有2349米长，但大型客机仍然可以安全降落。由于10号跑道距离海边太近，当飞机在到达机场附近的玛侯海滩（Maho Beach）时，离海滩高度只有约10-20米。当飞机在机场进场降落时，飞行员必须在低空航行，避开海面、海滩上的游客，顺利抵达跑道。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxiu1x88g30b40697wh.gif" alt=""></p><p>该机场曾发生过三次致命的水上降落事件，其中1970年的一架飞机因尝试降落失败而耗尽燃料后弃机。</p><ul><li><p>1970年5月2日，ALM980航班在数次尝试降落未果后耗尽燃料，被迫水面降落(ditching)，23人罹难，40人幸存。</p></li><li><p>1972年12月21日，瓜德罗普航空公司代法航运营的一架DHC-6“双水獭”在夜间从瓜德罗普岛出发，在圣马丁岛附近坠入海中，机上11名乘客及两名飞行员全部死亡。</p></li><li><p>2014年10月30日，Skyway Enterprises的7101航班从圣马丁（荷属加勒比海）飞往圣胡安（波多黎各）SD-360搭载2名机组人员，飞机在当地时间18:35从朱莉安娜公主的28号跑道起飞，随后撞击离海岸（跑道末端）约2海里（3.7公里；2.3英里）的水域。两名飞行员罹难。</p></li></ul><h2 id="马德拉机场"><a href="#马德拉机场" class="headerlink" title="马德拉机场"></a><strong>马德拉机场</strong></h2><p>位于非洲西海岸外，属葡萄牙的马德拉，有个一侧被海洋包围，另一侧被高山包围的机场。马德拉岛是休闲旅游胜地，有着飞往欧洲各大城市的航班，并且机场也在马德拉群岛货物运输中起着关键作用。</p><p>马德拉国际机场这些年受到了很多媒体的关注。从2017年3月为纪念足球运动员克里斯蒂亚诺-罗纳尔多而改名，到2016年被授予杰出结构奖。然而，它也被称为地球上最危险的机场之一。在极端天气条件下，成功着陆便是一项格外艰巨的任务。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxk0us42j30go0b240c.jpg" alt=""></p><p>虽然机场位于山脚，但部分跑道是修建在海面上，机场跑道由180根柱子支撑。此外，极短的跑道和暴雨、大风，使机场成为了欧洲最危险的机场之一。由于安全着落的难度系数之高，飞行员在被允许飞往马德拉之前，需要接受特殊训练。</p><h2 id="直布罗陀国际机场"><a href="#直布罗陀国际机场" class="headerlink" title="直布罗陀国际机场"></a>直布罗陀国际机场</h2><p>直布罗陀机场跑道长度较短，只有1829米，因此只能起降较小的飞机。除此以外直布罗陀国际机场实际上是两个世界的交汇点：一个国际机场和一条国内公路。任何飞机想要在机场起降，都必须先穿过公路。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxke4frsj30rs0fs0xm.jpg" alt=""></p><p>每当有飞机起降，铁路道口栏杆似的东西便会封闭道路。作为欧洲和非洲的交界之处，飞行之中最有意思的地方就是可以目睹海峡所划分出的两片截然不同的大陆同时存在，比如在飞机起降的时候，你会想望向窗外看看哪一片大陆是欧洲，而哪一片是非洲。</p><p>直布罗陀国际机场面朝大海，经常有报告说海风非常大，这使得控制飞机降落时有点困难。此外，由于跑道两端都是海，所以飞行员们必须要掌握好进场和起飞的时机。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxlajgsmj30fa0910u7.jpg" alt=""></p><h2 id="Courchevel-Airport高雪维尔机场"><a href="#Courchevel-Airport高雪维尔机场" class="headerlink" title="Courchevel Airport高雪维尔机场"></a><strong>Courchevel Airport高雪维尔机场</strong></h2><p>高雪维尔机场是阿尔卑斯山中的一个小型机场，主要起降直升机和小型固定翼飞机，机场专门负责为滑雪胜地提供服务，降落在雪山中会带来巨大挑战。机场的地形相当不利，而且跑道的长度略短于1800英尺（大概只有560米长），跑道坡度为18.5％，这使得着陆和起飞的精度成为关键。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxlzqo4wj30u00k1n3i.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxmdgv1sg30b4069hdt.gif" alt=""></p><p>最大的问题在于坡度，跑道中段部位有个山丘，飞机需要上坡降落，下坡起飞以减少滑行距离。所以在那里着陆并不是一件轻松的事情。更糟糕的是，这个机场不提供灯光或仪器辅助，因此无法在恶劣天气中起降。</p><p>法国民航局（DGAC）制定了飞往高雪维尔的航班规定。目前，唯一允许经营商业包机的航空公司是阿尔卑斯航空公司。</p><h2 id="洪都拉斯通孔廷国际机场"><a href="#洪都拉斯通孔廷国际机场" class="headerlink" title="洪都拉斯通孔廷国际机场"></a>洪都拉斯通孔廷国际机场</h2><p>通孔廷国际机场，是位于洪都拉斯首都特古西加尔巴的国际机场，距离特古西加尔巴的市中心约6公里，这里气候极端，跑道短（7,096英尺），地形多山。</p><p>该机场因靠近山地、跑道短、气候极端以及难以降落的跑道而被人称为世界上最危险的机场之一，洪都拉斯政府多年来一直在努力用目前作为空军基地的科马亚瓜的索托-卡诺机场取代该机场。不过，在特古西加尔巴机场公司(ACT)和InterAirports公司(洪都拉斯政府签约管理该国四大机场)的努力下，Toncontin机场得到了显著改善。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxndvu6aj30rs0lfn24.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxnmaw4jj30jg0e040w.jpg" alt=""></p><p>该机场海拔1,005米，直到2009年5月，该跑道的长度仅为6,112英尺（1,863米）。2007年，当地通过用推土机推平了跑到尽头前的一大片山坡，使进场变得更加容易。在这项工程之后，2009年5月，跑道南端进行了984英尺(300米)的延长，将其延长至7,096英尺(2,163米)。</p><p>科帕航空公司运营的波音737-800型飞机是通常在通孔廷降落的最大飞机。即使最近延长了跑道，Toncontin的跑道仍然比大多数国际机场的跑道短得多。</p><p>由于机场附近山区的地形以及风向的原因，飞行员还必须穿越高山才能到达机场，02号跑道是最常使用的跑道，在这里飞机不能采用传统的直线进场。取而代之的是RNAV(GPS)进场方式，类似于目视盘旋进近。飞机沿着Anillo Periferico公路飞行，随后飞机急速左转，与02跑道对齐。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1giwxny2ke3j30hs0bvgo4.jpg" alt=""></p><p>自1989年以来，在机场进场或起飞时已经发生了六起致命的事故。</p><ul><li><p>1989年2月25日：一架道格拉斯DC-6撞上坠毁。机上10人罹难。同年10月21日：一架波音727-200 飞机，坠毁在附近的一座山丘上，造成146人中的127人罹难。飞机失事的原因是由于飞行员未遵守规定的进近程序而导致的。</p></li><li><p>1997年4月1日：一架美国空军的 C-130由于着陆时速度过快，导致飞机起火。</p></li><li><p>2008年5月30日：一架空中客车A320，在02号跑道降落后，冲出了跑道。</p></li><li><p>2011年2月14日：一架Let L-410涡轮喷气式飞机，在距机场20公里时坠毁。机上14人罹难。</p></li><li>2018年5月22日：一架从德克萨斯州飞往洪都拉斯的湾流G200降落时滑出跑道。至少有六名美国人受伤。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 民航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 Apple 发布会（一）</title>
      <link href="apple2020/"/>
      <url>apple2020/</url>
      
        <content type="html"><![CDATA[<h3 id="发布会回放"><a href="#发布会回放" class="headerlink" title="发布会回放"></a>发布会回放</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=244532652&bvid=BV1zv41117uH&cid=235842554&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><p>如爆料所说，今天凌晨（9月16日）这场线上发布会上并没有 iPhone 12 的身影，这个夜熬的非常难受啊~</p><p>不过，这场发布会也不是一无是处，毕竟它还带来了 4 款新产品和 2 项新服务，听我细细说来。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv1h3si5j30i90d4ade.jpg" alt=""></p><p>首先，蒂姆·库克先出来给大家道了个早安，告诉大家“我想死你们啦~”，接着就开始了正式的新品发布阶段。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv2pjyd0j30i40a9qcw.jpg" alt=""></p><h3 id="Apple-Watch-Series-6"><a href="#Apple-Watch-Series-6" class="headerlink" title="Apple Watch Series 6"></a><strong>Apple Watch Series 6</strong></h3><p>Apple Watch 6 本体的外观和上一代看起来没有差别，不过新增了<strong>红蓝</strong>两种新配色，不得不说苹果的审美还是在线的。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv36lv06j30fa0b377y.jpg" alt=""></p><p>在硬件上，Apple Watch Series 6 采用了新一代 S6 SiP 芯片。S6 芯片采用的是 iPhone 11 中 A13 仿生的新双核处理器，速度比上一代可提升 20%，续航时间18小时。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv3npdb1j30ga0apmzf.jpg" alt=""></p><p>新增了<strong>血氧检测功能</strong>。血氧传感器采用了四组绿色、红色和红外 LED 光簇，以及四个光电二极管，集成在手表背面，用户可在处于静止状态时，根据需要进行测量；而设备也会在用户活动较少时，包括睡觉期间，在后台进行周期性测量。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv47oob3j30ga072aci.jpg" alt=""></p><p>手表的屏幕方面，采用了经过优化的全天候视网膜显示屏，亮度是上一代的2.5倍，在明亮日光下更容易看清表盘上的内容。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv4qpdb2j30hu0anwjj.jpg" alt=""></p><p>当然，配件也有。随着新手表一起发布的还有像运动裤上的绳子一样材质的新表带：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv55y124j30hu05wdln.jpg" alt=""></p><p>还有带弹性的单圈硅胶&amp;编织表带、更贵的皮制链式表带…</p><p><strong>价格方面</strong></p><p><strong>Apple Watch 6 (GPS) ：RMB 3,199 起</strong></p><p><strong>Apple Watch 6 (GPS + 蜂窝网络) ：RMB 3,999 起</strong></p><p><strong>9月17日接受订购，20日正式发售。</strong></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv61fhu7j30hu096gpd.jpg" alt=""></p><h3 id="Apple-Watch-SE"><a href="#Apple-Watch-SE" class="headerlink" title="Apple Watch SE"></a>Apple Watch SE</h3><p>不知道苹果是不是从 iPhone SE 2 的热卖中尝到了甜头，现在手表也 SE 了起来。感觉更适合买给家里的老人或者孩子佩戴，小天才电话手表的劲敌终于出现了！</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv8l2r7hj30hu0b710d.jpg" alt=""></p><p>Apple Watch SE 具有和 Apple Watch 6 一样的显示屏、摔倒检测、加速感应器、陀螺仪和全天候高度计，从外观看不出啥区别。</p><p>辣么，不一样的地方在哪呢？</p><p>处理器，SE 用的是上一代的 S5芯片，不支持全天候常亮显示，而且没有血氧检测功能。所以 SE 的价格更加亲民：</p><p><strong>Apple Watch SE (GPS) ：RMB 2,199 起</strong></p><p><strong>Apple Watch SE (GPS + 蜂窝网络) ：RMB 2,499 起</strong></p><p><strong>9月17日接受订购，20日正式发售。</strong></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisv993us7j30hu09pjwf.jpg" alt=""></p><p>啊对了，两款新 Watch 发售时均配备 watchOS 7 系统，<strong>必须搭配安装了 iOS 14 系统的 iPhone 才能使用。</strong></p><p>手表讲完之后，苹果又插播了一下软件服务：</p><h3 id="Apple-Fitness"><a href="#Apple-Fitness" class="headerlink" title="Apple Fitness+"></a>Apple Fitness+</h3><p>这是为了强迫帮助你健身的应用，通过各种健身视频示范课，为你制定专门的训练计划。</p><p>用户在 iPhone、iPad 或 Apple TV 上选择开始一项体能训练项目时，Apple Watch 会自动开启相应的体能训练类型。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvac98mjj30hu09pjxk.jpg" alt=""></p><p>在训练期间，Apple Watch 所读取的数据会显示在屏幕上，并以生动的形式为用户加油打气。比如，当教练指示用户检查心率或开始倒计时，这些数字就会在屏幕上以动画方式呈现。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvb7f13sj30in09pwll.jpg" alt=""></p><p>当然，不可能让你免费用，每个月9.99美元（约68元），而且<strong>中国不提供这项服务</strong>。（观众：那你说个屁啊）</p><h3 id="Apple-One"><a href="#Apple-One" class="headerlink" title="Apple One"></a>Apple One</h3><p>苹果现在已经推出了 Apple Music、Arcade、Apple TV+、Apple News+、iCloud、Apple Fitness+这么多订阅服务，用户必须一个一个订阅，非常麻烦。</p><p>所以机智的库克想了一个好办法——打包销售。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvc1v687j30in0b340t.jpg" alt=""></p><p>这么多项服务，只用交一次钱就可以哦~</p><p>然而，上面这些服务中，除了 Apple Music 和 iCloud 之外，在国内通通不能用，所以 Apple One 打包订阅<strong>不在国内上线</strong>。（观众：那你说个屁啊）</p><p>聊完了新一代 Apple Watch 之后，苹果又给我们带来了两款 iPad 系列的更新。</p><h3 id="iPad-8"><a href="#iPad-8" class="headerlink" title="iPad 8"></a>iPad 8</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvd5dqcaj30in0b30xd.jpg" alt=""></p><p>首先亮相的是入门级第 8 代 iPad。</p><p>从外观设计上来看，第 8 代 iPad 与第 7 代 iPad 基本上没有明显的变化，依然是 10.2 英寸显示屏、依然是跑飞机的“窄边框”设计、依然是老样子的 Touch ID…</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvdkjm3nj30in0b37ab.jpg" alt=""></p><p>不过升级到了 A12 仿生处理器后，在硬件性能上得到了不小的提升。</p><p>CPU 性能比上一代提升 40%，图形显示性能直接提升了 2 倍。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisve00buxj30in06z769.jpg" alt=""></p><p>根据苹果的介绍，第 8 代 iPad 在性能上分别比主流 Windows 平板电脑快了 2 倍；</p><p>比安卓平板速度快 3 倍；</p><p>比 Chromebook 快了 6 倍；</p><p>说的这么厉害，但苹果并没有给出对比产品的具体参考型号和配置，所以咱们暂时认为它在口嗨吧（虽然我知道 A12 确实很强）…</p><p>同时，第 8 代 iPad 也支持外接键盘与 Apple Pencil，并且你在购买时，就已经预装了新一代 iPadOS 14 系统。</p><p>所以在我看来，它的优势就是，不用再手动更新系统了吧。</p><p><strong>价格方面</strong></p><p><strong>iPad 8 （WIFI）：RMB 2499 起；</strong></p><p><strong>iPad 8 （WIFI+蜂窝网络）：RMB 3499 起；</strong></p><p><strong>9 月 17 日接受订购</strong></p><p><strong>9 月 20 日发售</strong></p><h3 id="iPad-Air4"><a href="#iPad-Air4" class="headerlink" title="iPad Air4"></a>iPad Air4</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvmci7q6j30in07qjx8.jpg" alt=""></p><p>本以为发布会开头的色彩过场是为 iPhone12 配色准备的，但没想到却用在了 iPad Air 上…</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvmtcwb0g30hs0clb29.gif" alt=""></p><p>虽然之前我跟大家透露过很多次，这次 iPad Air 会大变样，但当它真正的展示在我面前时，我还是礼貌性的站了起来 。</p><p>作为 iPad 诞生十周年的新品，苹果本次的全新 iPad Air4 设计上更接近全面屏的 iPad Pro ，并且新增了三种配色：<strong>玫瑰金、绿色和天蓝色</strong>。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvoibvyzj30in0apdia.jpg" alt=""></p><p>iPad Air4 采用 10.9 英寸的 liquid 视网膜显示屏，屏幕分辨率为 2360*1649，像素超过 380 万。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvouyfduj30in08pady.jpg" alt=""></p><p>另外，iPad Air4 在<strong>电源键上集成了 Touch ID 指纹识别功能</strong>，因此没有 Face ID，不过这一举动我感觉，很可能是在给未来 iPhoneSEN 铺路。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvpfcnkjj30ei08pdkv.jpg" alt=""></p><p>值得一提的是，iPadAir4 首发了本该在 iPhone12 上出现的 A14 Bionic 处理器，也算是今晚的夜没白熬。</p><p>关于这颗芯片咱们之前介绍过很多次了，今天就简单说一下参数。</p><p>芯片采用的是 5nm 制程工艺，将 118 亿个晶体管装进 A14，保证了设备拥有更出色的性能。此外，芯片的 CPU 提上了40% 、图形处理提升了 30%。 </p><p>在这个芯片的加持下，iPad Air4 可以畅玩主机游戏，每秒可处理 11 万亿次运算，机器学习的速度提升了 70%，比上代 Air 快了将近十倍，可以轻松剪辑 4K 视频，玩特效非常高的游戏。</p><p>就因为这颗 A14 的存在，我甚至觉得它比 iPad Pro 还要香…</p><p>另外，iPad Air4 还采用了 USB-C 接口，终于抛弃了祖传的 Lightning 接口。</p><p>此外，iPad Air4 搭载前置 700 万像素的摄像头，支持 smart HDR，能够拍摄 1080P 视频拍摄，后置摄像头则是同 iPad Pro 一样的 1200 万摄像头，这块就不多提了。</p><p>不过 iPad Air4 提升了扬声器体验，横屏状态下可以提供立体声效，算是一个小惊喜吧。</p><p>同样也能配合 Apple Pencil、妙控键盘使用，且支持 WiFi6。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvqo6n5dj30h40btn02.jpg" alt=""></p><p><strong>价格方面</strong></p><p><strong>iPad Air4 （WIFI）：RMB 4799 起；</strong></p><p><strong>iPad Air4 （WIFI+蜂窝网络）：RMB 5799 起；</strong></p><p><strong>10 月发售</strong></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gisvr7jwi0j30h40btgov.jpg" alt=""></p><p>到这里，我也把今天苹果发布的新品细节介绍的差不多了。</p><p>说实话，这是我第一次看困了…</p><p>不过你有没有发现，苹果在产品的布局上已经有点“广撒网”的意思了，现在中低端、中端、高端的产品线基本都齐了，那么下一步就是…</p><p><strong>对了…iPhone 12 呢？？？</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Infinite Flight飞行操作指南（萌新版）</title>
      <link href="2020-08-19-ifmengxin/"/>
      <url>2020-08-19-ifmengxin/</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>使用须知</p><p>您现在看到的是v0.1版本。</p><p>注：本版本只适合萌新使用，没有标注一些自动化的设备，例如：离场导航、ILS、APPR等</p><p>本操纵指南尚属于编辑阶段，今后会不断完善图片、视频等。</p></div><p>upd: 2020/11/22 修正部分错误</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Infinite Flight是一款包含全球所有机场的手游飞行模拟器，同时也包含了众多的机型、皮肤（<del>只要你有钱</del>）。目前，IF的售价为：18RMB，Pro版需要70RMB/月或其他套餐·。</p><p>无论您是初次接触Infinite Flight还是已经玩了多年游戏，本指南将带您逐步了解用户界面，并希望能解答您的任何问题！我们开始吧？</p><h1 id="安装Infinite-Flight"><a href="#安装Infinite-Flight" class="headerlink" title="安装Infinite Flight"></a>安装Infinite Flight</h1><h2 id="在Android上安装"><a href="#在Android上安装" class="headerlink" title="在Android上安装"></a>在Android上安装</h2><p>无限飞行可在Google Play商店中下载，<del>也可以去下载盗版</del>。</p><h3 id="最低设备要求"><a href="#最低设备要求" class="headerlink" title="最低设备要求"></a>最低设备要求</h3><p>以下是在设备上成功安装的最低要求。除此之外，强烈建议您的设备至少有 1GB 以上的内部设备内存（RAM）：</p><ul><li><p>Android 6.0（Marshmallow）操作系统或更高版本</p></li><li><p>设备必须支持OpenGL ES 3.0。</p></li></ul><h2 id="在iOS上安装"><a href="#在iOS上安装" class="headerlink" title="在iOS上安装"></a>在iOS上安装</h2><p>Infinite Flight可从App Store下载，iOS没有盗版。</p><h3 id="最低设备要求-1"><a href="#最低设备要求-1" class="headerlink" title="最低设备要求"></a>最低设备要求</h3><p>以下是在设备上成功安装的最低要求。除此之外，我们强烈建议您的设备至少有 1GB以上的内部设备内存（RAM）：</p><ul><li><p>64位设备</p></li><li><p>iOS 10操作系统或更高版本</p></li></ul><h1 id="选择机场、机型"><a href="#选择机场、机型" class="headerlink" title="选择机场、机型"></a>选择机场、机型</h1><p>打开IF后，你将会在屏幕右方分别看到：</p><ul><li>Fly Solo、</li><li>Fly Online、</li><li>ATC Traffic Control</li></ul><p>三个选项，他们的意思是：</p><ul><li>单人飞行（免费）</li><li>联飞（要钱）</li><li>ATC（要钱）</li></ul><p>选择任意一个选项后，你可以在这里选择你想飞行的机型、机场。<strong>注意：非Pro版只能在绿框内飞行，否则会自动让您体验双发失效。</strong></p><p>选择好后点击<code>Fly</code>就可以了！</p><p><strong>注意：初次加载时间会稍长。</strong></p><h1 id="地面"><a href="#地面" class="headerlink" title="地面"></a>地面</h1><p>无论您是没有航空背景的新手，还是拥有数千小时工作经验的专业飞行员；我们的飞行指南旨在帮助您进行无限飞行的各个方面。</p><p>是否想提高您的驾驶技能？让我们准备出发…</p><hr><h2 id="后推和发动机启动"><a href="#后推和发动机启动" class="headerlink" title="后推和发动机启动"></a>后推和发动机启动</h2><p>在推出前，您需要保持以下状态：</p><div class="table-container"><table><thead><tr><th style="text-align:center">项目</th><th style="text-align:center">状态</th></tr></thead><tbody><tr><td style="text-align:center">主要电池（<code>Master Batt</code>）</td><td style="text-align:center">打开</td></tr><tr><td style="text-align:center">APU（APU）</td><td style="text-align:center">开启</td></tr><tr><td style="text-align:center">安全带指示灯（<code>Seat Belts</code>）</td><td style="text-align:center">开启</td></tr><tr><td style="text-align:center">禁止抽烟指示灯（<code>No Smoking</code>）</td><td style="text-align:center">开启</td></tr></tbody></table></div><h4 id="Q：如何打开以上项目？"><a href="#Q：如何打开以上项目？" class="headerlink" title="Q：如何打开以上项目？"></a>Q：如何打开以上项目？</h4><p>A：长按右侧的<code>System</code>上下滑动到每个项目即可</p><p><strong>注意：并不是所有机型均适配APU</strong></p><h2 id="后推"><a href="#后推" class="headerlink" title="后推"></a>后推</h2><p>在<code>system</code>里找到<code>Push Back</code>点一下即可推出，配合下方的<code>Run Breaks</code>即可调整方向。</p><h2 id="启动发动机"><a href="#启动发动机" class="headerlink" title="启动发动机"></a>启动发动机</h2><p>在<code>system</code>里找到<code>Engine</code>并打开所有发动机。</p><p>然后关闭APU</p><h2 id="放襟翼"><a href="#放襟翼" class="headerlink" title="放襟翼"></a>放襟翼</h2><p>在左侧找到<code>Flaps</code>项目，按住并向下滑然后选择合适的角度。</p><h2 id="滑行"><a href="#滑行" class="headerlink" title="滑行"></a>滑行</h2><p>控制油门和方向舵来驾驶飞机滑行至跑道。</p><h1 id="起飞"><a href="#起飞" class="headerlink" title="起飞"></a>起飞</h1><h2 id="起飞-1"><a href="#起飞-1" class="headerlink" title="起飞"></a>起飞</h2><p>到达跑道中线后，打开频闪灯、着陆灯，然后控制飞机达到起飞速度，然后操控设备抬起飞机，点击<code>Gear</code>即可收起起落架。</p><h2 id="自动驾驶"><a href="#自动驾驶" class="headerlink" title="自动驾驶"></a>自动驾驶</h2><p>在起飞之前，应在地图加载飞行计划，点击左下角的地球，点击想要设置的航路点（蓝色的三角），再点击<code>+</code>即可添加，再点击地球就可以退出。</p><p>点击左侧的<code>AP</code>，点击<code>AP OFF</code>，此时自动驾驶就已经启动（相反点击<code>AP ON</code>，自动驾驶就会断开）再点击<code>LNAV</code>就可以按照飞行计划飞行。各个项目的翻译如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">项目</th><th style="text-align:center">中文意思</th></tr></thead><tbody><tr><td style="text-align:center">ALT</td><td style="text-align:center">巡航高度</td></tr><tr><td style="text-align:center">VS</td><td style="text-align:center">上升率</td></tr><tr><td style="text-align:center">SPD</td><td style="text-align:center">巡航速度</td></tr><tr><td style="text-align:center">HDG</td><td style="text-align:center">航向（如果打开<code>LNAV</code>就不能调整）</td></tr></tbody></table></div><p>这时，飞机就进入巡航模式了！</p><h1 id="下降到着陆（此部分待完善）"><a href="#下降到着陆（此部分待完善）" class="headerlink" title="下降到着陆（此部分待完善）"></a>下降到着陆（此部分待完善）</h1><h2 id="下降"><a href="#下降" class="headerlink" title="下降"></a>下降</h2><p>通过降低巡航高度来实现自动下降</p><h2 id="进近和降落"><a href="#进近和降落" class="headerlink" title="进近和降落"></a>进近和降落</h2><p>由于是萌新教程，此处只提供手动进近的方法</p><p>控制飞机到跑道的延长中线上，对准红框，即可对准跑道</p><p>在进近途中，不要忘了执行以下项目</p><div class="table-container"><table><thead><tr><th style="text-align:center">项目</th><th style="text-align:center">状态</th></tr></thead><tbody><tr><td style="text-align:center">起落架（Gear）</td><td style="text-align:center">放下</td></tr><tr><td style="text-align:center">襟翼（Flaps）</td><td style="text-align:center">最大</td></tr><tr><td style="text-align:center">灯光（Lights）</td><td style="text-align:center">打开</td></tr></tbody></table></div><p>然后就可以控制飞机降落了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 模拟飞行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全球（停）机场图片鉴赏</title>
      <link href="2020-08-10-planestop/"/>
      <url>2020-08-10-planestop/</url>
      
        <content type="html"><![CDATA[<p>因疫情原因导致商用航班减少，航空公司不得不将数千架飞机留在地面上。在这样的情况下，他们必须找到一个停放它们的地方。<br><img src="https://s1.ax1x.com/2020/08/10/aHin5d.png" alt="aHin5d.png"></p><p>单单一架飞机，比如空客330，就足足有60米长，机翼占地361平方米。<br><img src="https://s1.ax1x.com/2020/08/10/aHiDMV.png" alt="aHiDMV.png"></p><p>世界主要的国际枢纽机场，滑行道、机库甚至跑道都临时成了大型停机场，多地机场出现飞机滞留停机坪的“爆机”景象。</p><h3 id="中国香港国际机场"><a href="#中国香港国际机场" class="headerlink" title="中国香港国际机场"></a>中国香港国际机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHiIsK.png" alt="aHiIsK.png"></p><p><img src="https://s1.ax1x.com/2020/08/10/aHioqO.png" alt="aHioqO.png"></p><p><img src="https://s1.ax1x.com/2020/08/10/aHiHde.png" alt="aHiHde.png"></p><h3 id="美国塔尔萨国际机场"><a href="#美国塔尔萨国际机场" class="headerlink" title="美国塔尔萨国际机场"></a>美国塔尔萨国际机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHiXRI.png" alt="aHiXRI.png"></p><p><img src="https://s1.ax1x.com/2020/08/10/aHijzt.png" alt="aHijzt.png"></p><h3 id="瑞士苏黎世机场"><a href="#瑞士苏黎世机场" class="headerlink" title="瑞士苏黎世机场"></a>瑞士苏黎世机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHizsf.png" alt="aHizsf.png"></p><h3 id="美国西雅图波音飞机场"><a href="#美国西雅图波音飞机场" class="headerlink" title="美国西雅图波音飞机场"></a>美国西雅图波音飞机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHFCdg.png" alt="aHFCdg.png"></p><p><img src="https://s1.ax1x.com/2020/08/10/aHFkJs.png" alt="aHFkJs.png"></p><h3 id="美国加利福尼亚机场"><a href="#美国加利福尼亚机场" class="headerlink" title="美国加利福尼亚机场"></a>美国加利福尼亚机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHFMo4.png" alt="aHFMo4.png"></p><h3 id="英国伯恩茅斯机场"><a href="#英国伯恩茅斯机场" class="headerlink" title="英国伯恩茅斯机场"></a>英国伯恩茅斯机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHFlFJ.png" alt="aHFlFJ.png"></p><h3 id="西班牙马德里巴拉哈斯机场"><a href="#西班牙马德里巴拉哈斯机场" class="headerlink" title="西班牙马德里巴拉哈斯机场"></a>西班牙马德里巴拉哈斯机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHF3WR.png" alt="aHF3WR.png"></p><h3 id="丹麦哥本哈根机场"><a href="#丹麦哥本哈根机场" class="headerlink" title="丹麦哥本哈根机场"></a>丹麦哥本哈根机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHFYy6.png" alt="aHFYy6.png"></p><h3 id="美国匹兹堡国际机场"><a href="#美国匹兹堡国际机场" class="headerlink" title="美国匹兹堡国际机场"></a>美国匹兹堡国际机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHFawD.png" alt="aHFawD.png"></p><p><img src="https://s1.ax1x.com/2020/08/10/aHF0FH.png" alt="aHF0FH.png"></p><h3 id="中国北京首都国际机场"><a href="#中国北京首都国际机场" class="headerlink" title="中国北京首都国际机场"></a>中国北京首都国际机场</h3><p><img src="https://s1.ax1x.com/2020/08/10/aHFylt.png" alt="aHFylt.png"></p><p>如果疫情再得不到控制，飞机只能一直烧钱，飞机场真的变成了飞机展览馆了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 民航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图——最短路径问题</title>
      <link href="2020-07-25-tu1/"/>
      <url>2020-07-25-tu1/</url>
      
        <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>路径</li><li>最短路</li><li>有向图中的最短路、无向图中的最短路</li><li>单源最短路、每对结点之间的最短路</li></ul><h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><p>对于边权为正的图，任意两个结点之间的最短路，不会经过重复的结点。</p><p>对于边权为正的图，任意两个结点之间的最短路，不会经过重复的边。</p><p>对于边权为正的图，任意两个结点之间的最短路，任意一条的结点数不会超过 $n$ ，边数不会超过 $n-1$ 。</p><h2 id="Floyd-算法"><a href="#Floyd-算法" class="headerlink" title="Floyd 算法"></a>Floyd 算法</h2><p><del>注意不是美国被杀的那个黑人</del></p><p>是用来求任意两个结点之间的最短路的。</p><p>复杂度比较高，但是常数小，容易实现。（我会说只有三个 <code>for</code> 吗？）</p><p>适用于任何图，不管有向无向，边权正负，但是最短路必须存在。（不能有个负环）</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>我们定义一个数组 <code>f[k][x][y]</code> ，表示只允许经过结点 $1$ 到 $k$ ，结点 $x$ 到结点 $y$ 的最短路长度。</p><p>很显然， <code>f[n][x][y]</code> 就是结点 $x$ 到结点 $y$ 的最短路长度。</p><p>我们来考虑怎么求这个数组</p><p> <code>f[0][x][y]</code> ：边权，或者 $0$ ，或者 $+\infty$ （ <code>f[0][x][x]</code> 什么时候应该是 $+\infty$ ？）</p><p> <code>f[k][x][y] = min(f[k-1][x][y], f[k-1][x][k]+f[k-1][k][y])</code> </p><p>上面两行都显然是对的，然而这个做法空间是 $O(N^3)$ 。</p><p>但我们发现数组的第一维是没有用的，于是可以直接改成 <code>f[x][y] = min(f[x][y], f[x][k]+f[k][y])</code> ，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= n; k++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">      f[i][j] = min(f[i][j], f[i][k] + f[k][j]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度是 $O(N^3)$ ，空间复杂度是 $O(N^2)$ 。</p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>“给一个正权无向图，找一个最小权值和的环。”<br>首先这一定是一个简单环。<br>想一想这个环是怎么构成的。</p><p>考虑环上编号最大的结点 u。</p><p> <code>f[u-1][x][y]</code> 和 (u,x), (u,y）共同构成了环。</p><p>在 Floyd 的过程中枚举 u，计算这个和的最小值即可。</p><p> $O(n^3)$ 。</p><p><strong>Q：”已知一个有向图中任意两点之间是否有连边，要求判断任意两点是否连通。”</strong></p><p>该问题即是求 <strong>图的传递闭包</strong> 。</p><p>我们只需要按照 Floyd 的过程，逐个加入点判断一下。</p><p>只是此时的边的边权变为 $1/0$ ，而取 $\min$ 变成了 <strong>或</strong> 运算。</p><p>再进一步用 bitset 优化，复杂度可以到 $O(\frac{n^3}{w})$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// std::bitset&lt;SIZE&gt; f[SIZE];</span></span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    <span class="keyword">if</span> (f[i][k]) f[i] = f[i] | f[k];</span><br></pre></td></tr></table></figure><hr><h2 id="Bellman-Ford-算法"><a href="#Bellman-Ford-算法" class="headerlink" title="Bellman-Ford 算法"></a>Bellman-Ford 算法</h2><p>一种基于松弛（relax）操作的最短路算法。</p><p>支持负权。</p><p>能找到某个结点出发到所有结点的最短路，或者报告某些最短路不存在。</p><p>在国内 OI 界，你可能听说过的“SPFA”，就是 Bellman-Ford 算法的一种实现。（优化）</p><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><p>假设结点为 $S$ 。</p><p>先定义 $dist(u)$ 为 $S$ 到 $u$ （当前）的最短路径长度。</p><p> $relax(u,v)$ 操作指： $dist(v) = min(dist(v), dist(u) + edge_len(u, v))$ .</p><p> $relax$ 是从哪里来的呢？</p><p>三角形不等式： $dist(v) \leq dist(u) + edge_len(u, v)$ 。</p><p>证明：反证法，如果不满足，那么可以用松弛操作来更新 $dist(v)$ 的值。</p><p>Bellman-Ford 算法如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">while (1) for each edge(u, v) relax(u, v);</span><br></pre></td></tr></table></figure><p>当一次循环中没有松弛操作成功时停止。</p><p>每次循环是 $O(m)$ 的，那么最多会循环多少次呢？</p><p>答案是 $\infty$ ！（如果有一个 $S$ 能走到的负环就会这样）</p><p>但是此时某些结点的最短路不存在。</p><p>我们考虑最短路存在的时候。</p><p>由于一次松弛操作会使最短路的边数至少 $+1$ ，而最短路的边数最多为 $n-1$ 。</p><p>所以最多执行 $n-1$ 次松弛操作，即最多循环 $n-1$ 次。</p><p>总时间复杂度 $O(NM)$ 。 <strong>（对于最短路存在的图）</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">relax(u, v) &#123;</span><br><span class="line">  dist[v] = min(dist[v], dist[u] + edge_len(u, v));</span><br><span class="line">&#125;</span><br><span class="line">for (i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">  dist[i] = edge_len(S, i);</span><br><span class="line">&#125;</span><br><span class="line">for (i = 1; i &lt; n; i++) &#123;</span><br><span class="line">  for each edge(u, v) &#123;</span><br><span class="line">    relax(u, v);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：这里的 $edge_len(u, v)$ 表示边的权值，如果该边不存在则为 $+\infty$ ， $u=v$ 则为 $0$ 。</p><h3 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h3><p>给一张有向图，问是否存在负权环。</p><p>做法很简单，跑 Bellman-Ford 算法，如果有个点被松弛成功了 $n$ 次，那么就一定存在。</p><p>如果 $n-1$ 次之内算法结束了，就一定不存在。</p><h3 id="队列优化：SPFA"><a href="#队列优化：SPFA" class="headerlink" title="队列优化：SPFA"></a>队列优化：SPFA</h3><p>即 Shortest Path Faster Algorithm。</p><p>很多时候我们并不需要那么多无用的松弛操作。</p><p>很显然，只有上一次被松弛的结点，所连接的边，才有可能引起下一次的松弛操作。</p><p>那么我们用队列来维护“哪些结点可能会引起松弛操作”，就能只访问必要的边了。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">q = new queue();</span><br><span class="line">q.push(S);</span><br><span class="line">in_queue[S] = true;</span><br><span class="line">while (!q.empty()) &#123;</span><br><span class="line">  u = q.pop();</span><br><span class="line">  in_queue[u] = false;</span><br><span class="line">  for each edge(u, v) &#123;</span><br><span class="line">    if (relax(u, v) &amp;&amp; !in_queue[v]) &#123;</span><br><span class="line">      q.push(v);</span><br><span class="line">      in_queue[v] = true;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然在大多数情况下 SPFA 跑得很快，但其最坏情况下的时间复杂度为 $O(NM)$ ，将其卡到这个复杂度也是不难的，所以考试时要谨慎使用（在没有负权边时最好使用 Dijkstra 算法，在有负权边且题目中的图没有特殊性质时，若 SPFA 是标算的一部分，题目不应当给出 Bellman-Ford 算法无法通过的数据范围）。</p><h2 id="“Bellman-Ford-的其他优化”"><a href="#“Bellman-Ford-的其他优化”" class="headerlink" title="“Bellman-Ford 的其他优化”"></a>“Bellman-Ford 的其他优化”</h2><p>除了队列优化（SPFA）之外，Bellman-Ford 还有其他形式的优化，这些优化在部分图上效果明显，但在某些特殊图上，最坏复杂度可能达到指数级。</p><ul><li>堆优化：将队列换成堆，与 Dijkstra 的区别是允许一个点多次入队。在有负权边的图可能被卡成指数级复杂度。</li><li>栈优化：将队列换成栈（即将原来的 BFS 过程变成 DFS），在寻找负环时可能具有更高效率，但最坏时间复杂度仍然为指数级。</li><li>LLL 优化：将普通队列换成双端队列，每次将入队结点距离和队内距离平均值比较，如果更大则插入至队尾，否则插入队首。</li><li>SLF 优化：将普通队列换成双端队列，每次将入队结点距离和队首比较，如果更大则插入至队尾，否则插入队首。</li></ul><h2 id="Dijkstra-算法"><a href="#Dijkstra-算法" class="headerlink" title="Dijkstra 算法"></a>Dijkstra 算法</h2><p>Dijkstra 是个人名（荷兰姓氏）。</p><p>这种算法只适用于非负权图，但是时间复杂度非常优秀。</p><p>也是用来求单源最短路径的算法。</p><h3 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h3><p>主要思想是，将结点分成两个集合：已确定最短路长度的，未确定的。</p><p>一开始第一个集合里只有 $S$ 。</p><p>然后重复这些操作：</p><ol><li>对那些刚刚被加入第一个集合的结点的所有出边执行松弛操作。</li><li>从第二个集合中，选取一个最短路长度最小的结点，移到第一个集合中。</li></ol><p>直到第二个集合为空，算法结束。</p><p>时间复杂度：只用分析集合操作， $n$ 次 <code>delete-min</code> ， $m$ 次 <code>decrease-key</code> 。</p><p>如果用暴力： $O(n^2 + m) = O(n^2)$ 。</p><p>如果用堆 $O(m \log n)$ 。</p><p>如果用 priority_queue： $O(m \log m)$ 。</p><p>（注：如果使用 priority_queue，无法删除某一个旧的结点，只能插入一个权值更小的编号相同结点，这样操作导致堆中元素是 $O(m)$ 的）</p><p>如果用线段树（ZKW 线段树）： $O(m \log n + n) = O(m \log n)$ </p><p>如果用 Fibonacci 堆： $O(n \log n + m)$ （这就是为啥优秀了）。</p><p>等等，还没说正确性呢！</p><p>分两步证明：先证明任何时候第一个集合中的元素的 $dist$ 一定不大于第二个集合中的。</p><p>再证明第一个集合中的元素的最短路已经确定。</p><p>第一步，一开始时成立（基础），在每一步中，加入集合的元素一定是最大值，且是另一边最小值，每次松弛操作又是加上非负数，所以仍然成立。（归纳）（利用非负权值的性质）</p><p>第二步，考虑每次加进来的结点，到他的最短路，上一步必然是第一个集合中的元素（否则他不会是第二个集合中的最小值，而且有第一步的性质），又因为第一个集合内的点已经全部松弛过了，所以最短路显然确定了。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">H = new heap();</span><br><span class="line">H.insert(S, 0);</span><br><span class="line">dist[S] = 0;</span><br><span class="line">for (i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">  u = H.delete_min();</span><br><span class="line">  for each edge(u, v) &#123;</span><br><span class="line">    if (relax(u, v)) &#123;</span><br><span class="line">      H.decrease_key(v, dist[v]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Johnson-全源最短路径算法"><a href="#Johnson-全源最短路径算法" class="headerlink" title="Johnson 全源最短路径算法"></a>Johnson 全源最短路径算法</h2><p>Johnson 和 Floyd 一样，是一种能求出无负环图上任意两点间最短路径的算法。该算法在 1977 年由 Donald B. Johnson 提出。</p><p>任意两点间的最短路可以通过枚举起点，跑 $n$ 次 Bellman-Ford 算法解决，时间复杂度是 $O(n^2m)$ 的，也可以直接用 Floyd 算法解决，时间复杂度为 $O(n^3)$ 。</p><p>注意到堆优化的 Dijkstra 算法求单源最短路径的时间复杂度比 Bellman-Ford 更优，如果枚举起点，跑 $n$ 次 Dijkstra 算法，就可以在 $O(nm\log m)$ （取决于 Dijkstra 算法的实现）的时间复杂度内解决本问题，比上述跑 $n$ 次 Bellman-Ford 算法的时间复杂度更优秀，在稀疏图上也比 Floyd 算法的时间复杂度更加优秀。</p><p>但 Dijkstra 算法不能正确求解带负权边的最短路，因此我们需要对原图上的边进行预处理，确保所有边的边权均非负。</p><p>一种容易想到的方法是给所有边的边权同时加上一个正数 $x$ ，从而让所有边的边权均非负。如果新图上起点到终点的最短路经过了 $k$ 条边，则将最短路减去 $kx$ 即可得到实际最短路。</p><p>但这样的方法是错误的。考虑下图：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gh38dcz6mzj30a00a0mx1.jpg" alt=""></p><p> $1 \to 2$ 的最短路为 $1 \to 5 \to 3 \to 2$ ，长度为 $−2$ 。</p><p>但假如我们把每条边的边权加上 $5$ 呢？</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gh38f71svhj30a00a0jr9.jpg" alt=""></p><p>新图上 $1 \to 2$ 的最短路为 $1 \to 4 \to 2$ ，已经不是实际的最短路了。</p><p>Johnson 算法则通过另外一种方法来给每条边重新标注边权。</p><p>我们新建一个虚拟节点（在这里我们就设它的编号为 $0$ ）。从这个点向其他所有点连一条边权为 $0$ 的边。</p><p>接下来用 Bellman-Ford 算法求出从 $0$ 号点到其他所有点的最短路，记为 $h_i$ 。</p><p>假如存在一条从 $u$ 点到 $v$ 点，边权为 $w$ 的边，则我们将该边的边权重新设置为 $w+h_u-h_v$ 。</p><p>接下来以每个点为起点，跑 $n$ 轮 Dijkstra 算法即可求出任意两点间的最短路了。</p><p>一开始的 Bellman-Ford 算法并不是时间上的瓶颈，若使用 <code>priority_queue</code> 实现 Dijkstra 算法，该算法的时间复杂度是 $O(nm\log m)$ 。</p><h3 id="正确性证明"><a href="#正确性证明" class="headerlink" title="正确性证明"></a>正确性证明</h3><p>为什么这样重新标注边权的方式是正确的呢？</p><p>在讨论这个问题之前，我们先讨论一个物理概念——势能。</p><p>诸如重力势能，电势能这样的势能都有一个特点，势能的变化量只和起点和终点的相对位置有关，而与起点到终点所走的路径无关。</p><p>势能还有一个特点，势能的绝对值往往取决于设置的零势能点，但无论将零势能点设置在哪里，两点间势能的差值是一定的。</p><p>接下来回到正题。</p><p>在重新标记后的图上，从 $s$ 点到 $t$ 点的一条路径 $s \to p_1 \to p_2 \to \dots \to p_k \to t$ 的长度表达式如下：</p><p> $(w(s,p<em>1)+h_s-h</em>{p<em>1})+(w(p_1,p_2)+h</em>{p<em>1}-h</em>{p<em>2})+ \dots +(w(p_k,t)+h</em>{p_k}-h_t)$ </p><p>化简后得到：</p><p> $w(s,p_1)+w(p_1,p_2)+ \dots +w(p_k,t)+h_s-h_t$ </p><p>无论我们从 $s$ 到 $t$ 走的是哪一条路径， $h_s-h_t$ 的值是不变的，这正与势能的性质相吻合！</p><p>为了方便，下面我们就把 $h_i$ 称为 $i$ 点的势能。</p><p>上面的新图中 $s \to t$ 的最短路的长度表达式由两部分组成，前面的边权和为原图中 $s \to t$ 的最短路，后面则是两点间的势能差。因为两点间势能的差为定值，因此原图上 $s \to t$ 的最短路与新图上 $s \to t$ 的最短路相对应。</p><p>到这里我们的正确性证明已经解决了一半——我们证明了重新标注边权后图上的最短路径仍然是原来的最短路径。接下来我们需要证明新图中所有边的边权非负，因为在非负权图上，Dijkstra 算法能够保证得出正确的结果。</p><p>根据三角形不等式，图上任意一边 $(u,v)$ 上两点满足： $h_v \leq h_u + w(u,v)$ 。这条边重新标记后的边权为 $w’(u,v)=w(u,v)+h_u-h_v \geq 0$ 。这样我们证明了新图上的边权均非负。</p><p>这样，我们就证明了 Johnson 算法的正确性。</p><hr><h2 id="不同方法的比较"><a href="#不同方法的比较" class="headerlink" title="不同方法的比较"></a>不同方法的比较</h2><div class="table-container"><table><thead><tr><th>Floyd</th><th>Bellman-Ford</th><th>Dijkstra</th><th>Johnson</th></tr></thead><tbody><tr><td>每对结点之间的最短路</td><td>单源最短路</td><td>单源最短路</td><td>每对结点之间的最短路</td></tr><tr><td>没有负环的图</td><td>任意图（可以判定负环是否存在）</td><td>非负权图</td><td>没有负环的图</td></tr><tr><td>$O(N^3)$</td><td>$O(NM)$</td><td>$O(M\log M)$</td><td>$O(NM\log M)$</td></tr></tbody></table></div><p>注：表中的 Dijkstra 算法在计算复杂度时均用 <code>priority_queue</code> 实现。</p><h2 id="输出方案"><a href="#输出方案" class="headerlink" title="输出方案"></a>输出方案</h2><p>开一个 <code>pre</code> 数组，在更新距离的时候记录下来后面的点是如何转移过去的，算法结束前再递归地输出路径即可。</p><p>比如 Floyd 就要记录 <code>pre[i][j] = k;</code> ，Bellman-Ford 和 Dijkstra 一般记录 <code>pre[v] = u</code> 。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7.22考试题解</title>
      <link href="2020-07-23-test/"/>
      <url>2020-07-23-test/</url>
      
        <content type="html"><![CDATA[<h2 id="7-22考试题解"><a href="#7-22考试题解" class="headerlink" title="7.22考试题解"></a>7.22考试题解</h2><p>去年来过一次这个集训，感觉A班讲的很不详细，所以为了不去A班很多会做的题都没交……。在B班呆着就好。</p><h3 id="T1：表达式计算"><a href="#T1：表达式计算" class="headerlink" title="T1：表达式计算"></a>T1：表达式计算</h3><p>注意：“请问一厂和一虎的和、差、积、商、余数分别是多少“，<strong>是一厂和一虎的差、商、余数</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">4396</span>,b=<span class="number">2200</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a-b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a*b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a/b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a%b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T2：拼接木棒"><a href="#T2：拼接木棒" class="headerlink" title="T2：拼接木棒"></a>T2：拼接木棒</h3><p>读懂题就会做</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,o=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T3：字符串问题"><a href="#T3：字符串问题" class="headerlink" title="T3：字符串问题"></a>T3：字符串问题</h3><p>首先先把回文判断写好：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">huiwen</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> size =  s.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size/<span class="number">2</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]!=s[size-i<span class="number">-1</span>])&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们梳理一下题意：</p><ul><li><p>纯数字（<code>number</code>）：数字的数量等于字符的数量</p></li><li><p>纯字母（<code>letter</code>）：字母的数量等于字符的数量</p></li><li><p>混合（<code>string</code>）：字母和数字相结合</p></li></ul><p>设字母为$f_1$，数字为$f_2$，则有：</p><ul><li>如果$f_1*f_2 != 0 $，则$f_1$为字母的数量，$f_2$为数字的数量</li><li>如果$f_1*f_2 = 0$，若$f_1$为0则为纯数字，$f_2$为0则为纯字母。</li></ul><p>字符串拼接：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> a = <span class="string">&quot;123&quot;</span>,b = <span class="string">&quot;456&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a+b;</span><br></pre></td></tr></table></figure><p>这道题其实还好，就是代码量有点大，考的也有点杂</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> size,f1,f2;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hw</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123; </span><br><span class="line">size=s.size();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]!=s[size-i<span class="number">-1</span>])&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">lx</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">size=s.size();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;9&#x27;</span>)f1=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)f2=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;z&#x27;</span>)f2=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(f1*f2)<span class="literal">false</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> a,b,sum,s;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt;n;</span><br><span class="line"><span class="keyword">while</span> (n--)&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">sum=<span class="string">&quot;&quot;</span>;</span><br><span class="line">f1 = f2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.size(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum+=a;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">sum += b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (huiwen(sum)) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;paindrome&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(f1)&#123;</span><br><span class="line">cou &lt;&lt; <span class="string">&quot;non-paindrome&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">leixing(sum);</span><br><span class="line"><span class="keyword">if</span>(f2*f2) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;string&quot;</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(f1) <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;number&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;letter&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T4：3n±1-easy-version"><a href="#T4：3n±1-easy-version" class="headerlink" title="T4：3n±1 easy version"></a>T4：3n±1 easy version</h3><p>梳理一下%3的问题</p><ul><li>余数为0</li><li>余数为1</li><li>余数为2</li><li>0和2是特殊情况</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,n);</span><br><span class="line"><span class="keyword">while</span>(n!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (n%<span class="number">3</span>==<span class="number">0</span>&amp;&amp;n!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">n/=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n%<span class="number">3</span> == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">n--;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,cnt);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T5：整理扑克牌"><a href="#T5：整理扑克牌" class="headerlink" title="T5：整理扑克牌"></a>T5：整理扑克牌</h3><p>排序这个很好说吧，随便选一个就可以了</p><p>首先你需要有一个数组来存放：a[14]，里面分别是：3 4 5 6 7 8 9 10 J Q K A 2 Joker</p><p>然后写14个判断就可以了。[确性.jpg]</p><p>代码就不写了，14个判断太多了</p><h3 id="T6：跳跳虎の跃"><a href="#T6：跳跳虎の跃" class="headerlink" title="T6：跳跳虎の跃"></a>T6：跳跳虎の跃</h3><p>也很简单</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,cnt,step,sum;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">cnt = <span class="number">0</span>,step = <span class="number">0</span>,sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n&lt;<span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line">n=-n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(sum&lt;n)&#123;</span><br><span class="line">step++;</span><br><span class="line">sum+=step;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum==n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;step;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;n-sum+step;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apple WWDC20：大一统的未来</title>
      <link href="2020-06-23-wwdc20/"/>
      <url>2020-06-23-wwdc20/</url>
      
        <content type="html"><![CDATA[<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3nxjaku2j30h509pdmr.jpg" alt=""></p><p>库克：观众朋友们，我想死你们啦！</p><p>接下来为大家介绍你们心心念念的：</p><h2 id="iOS-14"><a href="#iOS-14" class="headerlink" title="iOS 14"></a>iOS 14</h2><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3og3n9z6j30ih09aten.jpg" alt=""></p><p>iOS 14 在主屏幕上新增了小部件功能，App 能够以小中大三个尺寸显示在桌面上，并实时显示内容，小部件可以叠加，根据不同时间段，让你想看到的那个小部件在最前端显示。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ogh3le5j30ih09ak02.jpg" alt=""></p><p>iOS 14 还新增了一个 “App资源库”的功能，它可以自动整理并分类你的 App，使其在手机显示不那么杂乱，更方便查找（不占用主屏幕空间了）。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ogtvo9bj30ih09z0vo.jpg" alt=""></p><p>你们期待的分屏功能虽然没来，但来了个差不多的：画中画。</p><p>我们看视频，在执行其他操作时，可以在小窗继续观看视频，并能够调节大小、使其后台播放。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3oh41ynej30ih09zgog.jpg" alt=""></p><p>人工智障 Siri 经过重新设计之后，更好看也更聪明。</p><p>Siri 现在不会覆盖整个屏幕了，它可以只在底部显示，就像这样：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ohingw8j30ih09z770.jpg" alt=""></p><p>Siri 还可以翻译更多语言，支持整句翻译，甚至专门为它做了个新 App：翻译。新增的翻译功能可以实时检测并翻译11种语言，并且完全不需要联网。（感觉那些翻译机要凉凉了）</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ohyk5v9j30ih09zmz4.jpg" alt=""></p><p>接下来是“信息”App，几乎是照搬微信，新增了群聊艾特、置顶、表情包功能，没啥好介绍的了…反正我们不用</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3oica2z9j30ih09zq5s.jpg" alt=""></p><p>改进了的“地图”，几乎照搬国内的“大众点评”，可以在地图中找到感兴趣的商家…</p><p>还有，新增了自行车导航和电动汽车导航，针对中国用户查看号牌限行功能，emmm…应该对特定用户还是比较有用的。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3oimbucjj30ih09zwha.jpg" alt=""></p><p>CarPlay 可以设置新壁纸、新类别，更重要的是，CarKey 来了。</p><p>苹果现场展示了使用 iPhone 解锁宝马车，让手机变身数码车钥匙。（iOS 13 也将支持此功能）</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3oixg82oj30ih09zalh.jpg" alt=""></p><p>接下来，iOS 版小程序（App Clips）来了，不用下载即可使用，只会在你需要的时候弹出来，点击就可以~苹果甚至为其专门开发了新版的二维码。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ojcr94fj30ih0avgsa.jpg" alt=""></p><p>iOS 14 支持设备：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ojnj187j30ih09b0x6.jpg" alt=""></p><h2 id="iPadOS-14"><a href="#iPadOS-14" class="headerlink" title="iPadOS 14"></a>iPadOS 14</h2><p>iPadOS 14 拥有 iOS 14 的一切新功能，在此基础上还有一些改进。</p><p>比如全新设计的边栏和工具栏、搜索栏，能够让你在大屏幕上使用更加轻松。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ok01om6j30ih0a9qb4.jpg" alt=""></p><p>还有你们想要的:简洁来电界面。这下来电话就不会遮挡住全部屏幕了，玩游戏也不会被打断了，当然，这个功能也会出现在 iOS 14 上！激动啊！！！</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ok8bvrfj30ih0a9wjw.jpg" alt=""></p><p>针对 iPad 的大屏幕，Apple Pencil 也有了新功能，他现在可以将手写文字转换为文本了，鹅妹子嘤！<br>不管是手写中文英文，还是画个圆形三角形五角星，它都可以准确地转化为电脑文本和图形，妙不妙？</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3okj9caoj30ih0a9wf4.jpg" alt=""></p><p>iPadOS 14 支持设备：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3oky7p7bj30ih08ste0.jpg" alt=""></p><h2 id="AirPods"><a href="#AirPods" class="headerlink" title="AirPods"></a>AirPods</h2><p>AirPods 支持设备之间自动切换，举个例子：在 iPhone 上听完音乐去 Mac上视频会议，AirPods 就会自动切换到 Mac；会议结束后用 iPad 看视频，AirPods 又会自动切换到 iPad 上，妙不妙？</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3ol8tcslj30ih0a60yf.jpg" alt=""></p><p>重头戏其实在 AirPods Pro 上，它通过耳机的加速传感器和陀螺仪，加入了“空间音频”。它可以模拟在空间中的几乎任何地方播放声音，环境音会根据人的移动而移动，创造沉浸式的声音体验。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3olhs018j30ih0a6di8.jpg" alt=""></p><h2 id="watchOS-7"><a href="#watchOS-7" class="headerlink" title="watchOS 7"></a>watchOS 7</h2><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3oluldkgj30ih0a6jxe.jpg" alt=""></p><p>watchOS 7 现在可以追踪睡眠了，手表将帮助用户按时上床睡觉，并在正确的时间醒来。</p><p>表盘支持共享了，你可以分享你的表盘设计给其他人，也可以下载别人的表盘使用。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3oplk9w7j30ih0abdpb.jpg" alt=""></p><p>健身App 现在可以识别跳舞，还支持洗手检测，当洗手时间不够时，会提醒你。（我可谢谢你了）</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3omcwmhwj30ih0aedr4.jpg" alt=""></p><h2 id="macOS-Big-Sur"><a href="#macOS-Big-Sur" class="headerlink" title="macOS Big Sur"></a>macOS Big Sur</h2><p>下一代 macOS，正式命名为 macOS Big Sur，采用全新设计，系统界面和图标都有了大变。macOS Big Sur 所有预装 app 的图表都变成了圆角矩形，与 iOS 相同。</p><p>ARM 版 Mac 可以直接运行 iOS 和 iPadOS 软件，妙啊~</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3omojtzzj30ih0ae46p.jpg" alt=""></p><p>同时，苹果宣布未来 Mac 电脑将搭载苹果自主设计的芯片，与 iPhone 、iPad 一样采用 ARM 架构芯片，年底会有搭载 ARM 芯片的新 Mac 推出。</p><p>macOS Big Sur 支持设备：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3on1a0wtj30ih0avahc.jpg" alt=""></p><h2 id="tvOS-14"><a href="#tvOS-14" class="headerlink" title="tvOS 14"></a>tvOS 14</h2><p>这是用在 Apple TV 上的系统，如今集成了了“家庭”App，支持 PS4/XBOX 手柄，不仅能看高清视频，还能玩 ARCADE 游戏，可是那又怎样？Apple TV 我们又用不了…</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3onfwsnqj30ih0abtfg.jpg" alt=""></p><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>很多年以后，当人们用着完全统一系统的设备，他们可能有大有小，有方有正。也许他们不知道的是，所有的这一切可能都源自于今天这个夜晚。 </p><p>「载入史册」这四个字的份量，我自然是清楚的。它需要这件事，对人类社会的变革产生着巨大的影响。苹果在过去的几十年里，我认为有两次。 </p><p>一次是 Apple II，一次是 iPhone 3GS。 </p><p>这两次我们记住的是实体的硬件设备，但是这第三次，我们记住的可能就是： </p><p><strong>「一个大一统的，没有边界的，未来可能成为 Apple OS 的软件系统。」</strong></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gg3od64dirj30h50c8aql.jpg" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Y Round】-5 &amp; 6月月赛-1 题解</title>
      <link href="2020-06-20-yuesai6-1/"/>
      <url>2020-06-20-yuesai6-1/</url>
      
        <content type="html"><![CDATA[<h2 id="T1：XJL的方程"><a href="#T1：XJL的方程" class="headerlink" title="T1：XJL的方程"></a>T1：XJL的方程</h2><p>这道题思维难度和代码难度都不大，就是细节处理有点麻烦，需要判断一些特殊情况（比如 —0.0什么的）。那我就直接上代码思路了。</p><p>因为是一元一次方程，所以最终一定可以化成 $kx+b=0$ 的形式，整理可得 $x=-\frac{b}{k}$，为了方便，将等号右边的多项式直接移到等式左边，即系数均乘 -1，可以用一个变量标记一下。</p><h4 id="一连串的判断："><a href="#一连串的判断：" class="headerlink" title="一连串的判断："></a>一连串的判断：</h4><p>1.对于符号 ‘+’，‘-’，‘=’ 的处理<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">-1</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;+&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;=&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">1</span>;now=<span class="number">-1</span>;&#125;</span><br></pre></td></tr></table></figure><br>这里 $b$ 为常数部分的值；now 表示相对等号的位置，左边为 1 ，右边为 -1；$f$ 表示项的系数的正负性，$x$ 则是项的系数。</p><p>读到加号，常数累加，系数清零，符号标记为正，减号同理。读到等号则需额外将 now 改为 -1。</p><p>2.关于数字的读入<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>;&#125;</span><br></pre></td></tr></table></figure><br>若判定为数字则叠加当前项系数。</p><p>3.关于未知数的处理<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>) &#123;k+=now*f*x;x=<span class="number">0</span>;a=c;&#125;\</span><br></pre></td></tr></table></figure><br>若判定为小写字母，则将未知数的系数累加，项系数清零，并标记未知数名 $a$。</p><p>至此，这一题就成功的挂掉了。因为(变量 $r$ 的含义还没讲呢！)还有</p><h4 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h4><p>1.要是遇到 +x , -x 这种情况怎么办？</p><p>那还不简单，系数为 0 就默认改为 1 就好了嘛。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    x?k+=now*f*x:k+=now*f;</span><br><span class="line">    x=<span class="number">0</span>;a=c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>2.那如果是 +0x , -0x 这种毒瘤情况又怎么办？</p><p>这就需要引入一个新的变量 $r$ 来标记是否有系数的读入。至于 $r$ 的处理，只需要在读到数字时将 $r$ 置为 1 ，读到其它字符都将 $r$ 置为 0 就行了。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">-1</span>;r=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;+&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">1</span>;r=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;=&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">1</span>;now=<span class="number">-1</span>;r=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(r)</span><br><span class="line">    &#123;</span><br><span class="line">        k+=now*f*x;x=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> k+=now*f;</span><br><span class="line">    a=c;r=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>;r=<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure></p><p>完整AC代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> c,a;<span class="comment">//c用来读入,a是未知数名</span></span><br><span class="line"><span class="keyword">int</span> f=<span class="number">1</span>,now=<span class="number">1</span>,k,b,x;<span class="comment">//f初始化为正，now初始为左，k、b、x意义如上</span></span><br><span class="line"><span class="keyword">bool</span> r;<span class="comment">//用来判是否有数字读入</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;c)<span class="comment">//各种处理上面已经解释的很清楚了……（吧）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">-1</span>;r=<span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;+&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">1</span>;r=<span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;=&#x27;</span>) &#123;b+=now*f*x;x=<span class="number">0</span>;f=<span class="number">1</span>;now=<span class="number">-1</span>;r=<span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(r)</span><br><span class="line">            &#123;</span><br><span class="line">                k+=now*f*x;x=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> k+=now*f;</span><br><span class="line">            a=c;r=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>;r=<span class="number">1</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    b+=now*f*x;<span class="comment">//加上最后一项常数（若最后一项是未知数则会加0）</span></span><br><span class="line">    <span class="keyword">double</span> ans=<span class="keyword">double</span>(-b*<span class="number">1.0</span>/k);</span><br><span class="line">    <span class="keyword">if</span>(ans==<span class="number">-0.0</span>) ans=<span class="number">0</span>;<span class="comment">//特判，将-0.0改为0</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c=%.3lf&quot;</span>,a,ans);<span class="comment">//保留三位小数输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="T2：XJL的利润"><a href="#T2：XJL的利润" class="headerlink" title="T2：XJL的利润"></a>T2：XJL的利润</h2><p>政府要求在预期价格上取得最大值，那么我们可以对每一项数据都列出一个不等式，通过解不等式来得到补贴或者税收的取值范围。</p><p>设预期价格为 $c$ ，其对应的销售量为 $j$ ，成本为 $i$ ,那么对于每一对数据 $a b$，都可以列出如下的不等式：</p><script type="math/tex; mode=display">(c−i+x)⋅j≥(a−i+x)⋅b</script><p>由于等式两侧同时除以负数需要改变符号，因此我们需要分两种情况来讨论：</p><p>当 $j&gt;b$ 时,通过移项我们可以得到：</p><script type="math/tex; mode=display">x≥(a−i)⋅b−(c−i)⋅\frac{j}{j-b}</script><p>从而得出了 $x$ 的最小值</p><p>当 $j&lt;b$ 时,通过移项我们可以得到：</p><script type="math/tex; mode=display">x≤(c−i)⋅j−(a−i)⋅\frac{b}{b-j})</script><p>从而得出了 $x$ 的最小值</p><p>当数据中出现间隔的时候不需要对间隔中的每一组数据都求值，因为这个区间中的数据是按照固定的值递减，易证区间中所有数据所计算出的最大最小值均相同，因此只需要计算区间的左右端点的值即可</p><p>由于对预期价格进行了特殊处理，所以以特殊价格为后端点的区间会将不存在数据，因此要为这个区间填补一个元素</p><p>当超过最大价格之后由于同样是按照一个固定的值递减，那么我们也只需要计算一个超过最大值的数据即可</p><p>注意：当出现小数情况时最大值需要向下取整，最小值需要向上取整(cmath头文件中 ceil 函数向上取整 ， floor函数向下取整)</p><p>源代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">&#125; small[<span class="number">500</span>], big[<span class="number">500</span>];<span class="comment">// small保存所有价格小于预期价格的数据，big保存所有价格大于预期价格的数据</span></span><br><span class="line"><span class="keyword">int</span> sl,bl;</span><br><span class="line"><span class="keyword">double</span> MAX = <span class="number">999999999</span>,MIN = <span class="number">-999999999</span>;</span><br><span class="line"><span class="keyword">int</span> e;</span><br><span class="line"><span class="keyword">int</span> expect;</span><br><span class="line"><span class="keyword">int</span> beyond;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMAX</span><span class="params">()</span></span>&#123; <span class="comment">// 计算最大值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= sl; i++) &#123;</span><br><span class="line">        <span class="keyword">double</span> tMAX = (expect - small[<span class="number">1</span>].a) * e - (small[i].a - small[<span class="number">1</span>].a) * small[i].b;</span><br><span class="line">        tMAX = tMAX / (small[i].b - e); <span class="comment">// 计算对于当前价位时税金或补贴的最大值</span></span><br><span class="line">        MAX = min(MAX, tMAX);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getMIN</span><span class="params">()</span></span>&#123; <span class="comment">// 计算最小值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= bl;i++) &#123;</span><br><span class="line">        <span class="keyword">double</span> tMIN = (big[i].a - small[<span class="number">1</span>].a) * big[i].b - (expect - small[<span class="number">1</span>].a) * e;</span><br><span class="line">        tMIN = tMIN / (e - big[i].b);<span class="comment">// 计算对于当前价位时税金或补贴的最小值</span></span><br><span class="line">        MIN = max(MIN, tMIN);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;in.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; expect;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">-1</span> &amp;&amp; b == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; expect) &#123; <span class="comment">// 当读入的数据小于预期价格时</span></span><br><span class="line">            sl++;</span><br><span class="line">            small[sl].a = a;</span><br><span class="line">            small[sl].b = b;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; expect) &#123; <span class="comment">// 当读入的数据大于预期价格时</span></span><br><span class="line">            bl++;</span><br><span class="line">            big[bl].a = a;</span><br><span class="line">            big[bl].b = b;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            e = b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; beyond;</span><br><span class="line">    <span class="keyword">if</span> (e == <span class="number">0</span>) &#123; <span class="comment">// 如果读入数据中不存在预期价格的数据</span></span><br><span class="line">        <span class="keyword">if</span> (bl == <span class="number">0</span>) <span class="comment">// 当读入的数据存在大于预期数据的情况</span></span><br><span class="line">            e = small[sl].b - (expect - small[sl].a) * beyond;</span><br><span class="line">        <span class="keyword">else</span>  <span class="comment">// 当预期数据已经超过了所给出的最大价格</span></span><br><span class="line">            e = small[sl].b - (small[sl].b - big[<span class="number">1</span>].b) / (big[<span class="number">1</span>].a - small[sl].a) * (expect - small[sl].a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (small[sl].a != expect - <span class="number">1</span>) &#123; <span class="comment">// 添加一组价格正好是预期价格 -1 的数据，以填补预期价格的空缺</span></span><br><span class="line">        sl++;</span><br><span class="line">        small[sl].a = expect - <span class="number">1</span>;</span><br><span class="line">        small[sl].b = e + beyond;</span><br><span class="line">    &#125;</span><br><span class="line">    bl++;</span><br><span class="line">    <span class="keyword">if</span> (bl == <span class="number">1</span>) &#123; <span class="comment">// 填补一组超过最大价格的数据</span></span><br><span class="line">        big[bl].a = expect + <span class="number">1</span>;</span><br><span class="line">        big[bl].b = e - beyond;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        big[bl].a = big[bl - <span class="number">1</span>].a + <span class="number">1</span>;</span><br><span class="line">        big[bl].b = big[bl - <span class="number">1</span>].b - beyond;</span><br><span class="line">    &#125;</span><br><span class="line">    getMAX();</span><br><span class="line">    getMIN();</span><br><span class="line">    <span class="comment">//MIN++;</span></span><br><span class="line">    <span class="comment">//MAX--;</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; MIN &lt;&lt; &quot; &quot; &lt;&lt; MAX &lt;&lt; endl;</span></span><br><span class="line">    MIN = <span class="built_in">ceil</span>(MIN); <span class="comment">// 最小值向上取整</span></span><br><span class="line">    MAX = <span class="built_in">floor</span>(MAX); <span class="comment">// 最大值向下取整</span></span><br><span class="line">    <span class="keyword">if</span> (MIN &gt; MAX) </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;NO SOLUTION&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(MAX &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; MAX;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(MIN &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; MIN;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="T3：XJL算乘积"><a href="#T3：XJL算乘积" class="headerlink" title="T3：XJL算乘积"></a>T3：XJL算乘积</h2><p>很经典的一道简单DP题</p><p>数组 $a[i][j]$ 表示 $i$ 个字符到第 $j$ 个字符代表的数</p><p>数组 $dp[i][j]$ 表示处理到第 $i$ 个数字，已经有 $j$ 个乘号的最大值</p><p>枚举 $h$ 表示第 $j$ 个等号在第 $h$ 位后面 </p><p>那么只需要比较在当前位置插入和不插入的大小比较</p><p>所以动态转移方程就是</p><script type="math/tex; mode=display">dp[i][j]=max(dp[i][j],dp[h][j-1]*a[h+1][i])</script><p>这样这道题就解决啦！<br>AC代码如下<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> s=<span class="number">0</span>,w=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">char</span> ch=getchar();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)w=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>) s=s*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=getchar();</span><br><span class="line">   <span class="keyword">return</span> s*w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,dp[<span class="number">45</span>][<span class="number">8</span>],a[<span class="number">45</span>][<span class="number">45</span>],w[<span class="number">45</span>];</span><br><span class="line"><span class="keyword">char</span> G;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();</span><br><span class="line">    k=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;G;</span><br><span class="line">        w[i]=G-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][j]=a[i][j<span class="number">-1</span>]*<span class="number">10</span>+w[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        dp[i][<span class="number">0</span>]=a[<span class="number">1</span>][i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">1</span>;h&lt;i;h++)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][j]=max(dp[i][j],dp[h][j<span class="number">-1</span>]*a[h+<span class="number">1</span>][i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[n][k]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="T4：XJL玩接龙"><a href="#T4：XJL玩接龙" class="headerlink" title="T4：XJL玩接龙"></a>T4：XJL玩接龙</h2><p>这道题需要注意三点：</p><ol><li><p>每个单词最多在龙里出现两次</p></li><li><p>不能在龙里出现包含关系</p></li><li><p>可以有重合部分</p></li></ol><p>重点来了</p><p>求重合部分可以从已经在龙里的最后一个单词的最后面开始枚举（从后向前枚举）直到找到最后一个单词的一个字母和想要接龙的单词的第一个字母相等，把那个单词的字母的位置记录为 $k$，然后从已经在龙里的那个单词从k到尾进行循环枚举，同时想要接龙的单词从头到k进行枚举，如果有不相等的一个字母就返回 0 ，否则返回那个单词的长度 -$（k + 1）$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, vis[<span class="number">100001</span>], ans, maxn, l[<span class="number">100001</span>], p;</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">10001</span>];</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span><span class="comment">//是否能合并 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lx = l[x];</span><br><span class="line"><span class="keyword">int</span> ly = l[y];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = lx - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[x][i] == s[y][<span class="number">0</span>])<span class="comment">//发现字母相等！ </span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= lx - <span class="number">1</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                k++;<span class="comment">//同时枚举 </span></span><br><span class="line">                <span class="keyword">if</span>(s[x][j] != s[y][k])<span class="comment">//有一个字母不相等就返回0 </span></span><br><span class="line">                &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ly - (k + <span class="number">1</span>);<span class="comment">//全相等返回长度 </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span><span class="comment">//搜索单词 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i] &lt; <span class="number">2</span> &amp;&amp; find(x, i))<span class="comment">//不能用两次且可以接龙 </span></span><br><span class="line">        &#123;</span><br><span class="line">            vis[i]++;<span class="comment">//用的次数++ </span></span><br><span class="line">ans += find(x, i);<span class="comment">//加上新单词的长度 </span></span><br><span class="line">            dfs(i);<span class="comment">//接着这个单词继续搜 </span></span><br><span class="line">            vis[i]--;<span class="comment">//回溯 </span></span><br><span class="line">ans -= find(x, i);<span class="comment">//回溯 </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans &gt; p)<span class="comment">//求最大 </span></span><br><span class="line">    &#123;</span><br><span class="line">    p = ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">        l[i] = s[i].length();<span class="comment">//存下所有单词的长度 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i][<span class="number">0</span>] == ch)<span class="comment">//得等于首字母才能接 </span></span><br><span class="line">        &#123;</span><br><span class="line">            ans = l[i];<span class="comment">//先加上首单词的长度 </span></span><br><span class="line">            vis[i]++;<span class="comment">//首单词用过了 </span></span><br><span class="line">            dfs(i);</span><br><span class="line">            vis[i]--;<span class="comment">//回溯 </span></span><br><span class="line">            <span class="keyword">if</span>(p &gt; maxn)<span class="comment">//求最大 </span></span><br><span class="line">            &#123;</span><br><span class="line">            maxn = p;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, maxn);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.22巴基斯坦空难先导</title>
      <link href="2020-05-31-%E5%B7%B4%E5%9F%BA%E6%96%AF%E5%9D%A6%E7%A9%BA%E9%9A%BE/"/>
      <url>2020-05-31-%E5%B7%B4%E5%9F%BA%E6%96%AF%E5%9D%A6%E7%A9%BA%E9%9A%BE/</url>
      
        <content type="html"><![CDATA[<p>据人民日报海外网报道，巴基斯坦时间5月22日下午2点37分，巴基斯坦国际航空公司A320客机，自拉合尔抵达卡拉奇，降落趋近跑道的过程中失控，在附近居民区坠毁。机上包括91名乘客和8名机组人员共99人，其中97人遇难，2人奇迹生还。同时，由于坠机地点是人口密集的居民区，此次事故还造成约19所房屋被烧毁，一些居民也造成了严重的烧伤，所幸的是未造成人员死亡。目前，坠机原因仍在调查之中。</p><p>此次事故的两名生还者，给我们简单描述了空难事故中的情况。其中一名生还者祖贝尔告诉《卫报》，“我们不止一次差点撞到地面，但随后不知道为什么飞机停不下来，我们又飞了起来。”祖贝尔回忆道，坠机后他曾短暂失去意识，恢复意识后，“我能看到的就是一片火海。我看不到人，只能听到他们的尖叫。”</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfbetkumnnj30k90ddgyn.jpg" alt=""></p><p>另一名幸存者扎法尔·马苏德称仅能记得的就是飞机发生了颠簸，然后基本失去了意识。等马苏德再次清醒，才意识到自己手臂骨折了，但还活着。据了解，马苏德在这场奇迹般的生还过程中只有手臂骨折和一些淤伤。</p><h2 id="疑点重重"><a href="#疑点重重" class="headerlink" title="疑点重重"></a>疑点重重</h2><p>据了解，事故发生后第一时间，巴基斯坦当局便对原因展开调查。同时，一份初步调查报告显示出飞行员在处理飞机故障过程中存在许多疑问。报道显示，飞机在飞行员试图降落时与跑道发生过三次剐蹭，造成跑道上三处标记。虽然飞机引擎接触了地面，但飞机腹部却始终没有和跑道接触。更加奇怪的是，第三次撞击后飞行员再次将飞机拉起，且机组人员没有告知空管员飞机起落架有问题，不能正常着陆。</p><p>更让人感到不解的是，如果飞机出现故障，机舱内的报警系统第一时间就会做出提示，但是飞行员显然是没有在故障的第一时间收到提示，是报警系统失灵还是机组人员忽略，我们不得而知。此外，飞机上所有系统一般都会有自动备份功能，如果在事发时有系统发生故障，为什么备份的系统没有得到启用？所以此次事故有可能是飞机在起飞前没有做到详细的检查，导致有一些潜在的事故没有排除。但是更多的一些原因，还在调查之中。</p><h2 id="摔机事件已是巴航的“优良传统”"><a href="#摔机事件已是巴航的“优良传统”" class="headerlink" title="摔机事件已是巴航的“优良传统”"></a>摔机事件已是巴航的“优良传统”</h2><p>这已经不是巴基斯坦航空公司第一次发生坠机事件。2016年，巴航一国内航班就发生过飞机坠毁事件。一架国内航班从奇特拉尔飞往首都伊斯兰堡的过程中从雷达上消失，事后发现客机已经坠毁在巴基斯坦北部阿伯塔巴德；把时间再往前推移，2010年巴基斯坦发生过18年以来最为严重的空难事故。一架载有152人的飞机在伊斯兰堡附近的马尔加拉山区坠毁，152人全部遇难。</p><p>那么为什么巴基斯坦航空公司频频发生坠机事件？因为，在巴基斯坦，铁路网并不发达，机车破旧，行驶速度缓慢，还经常晚点，所以人们更多的选择了飞机作为出行的交通工具。再加上巴航的票价十分的便宜，这就让人们更加青睐于这种出行方式。</p><p>但是，巴基斯坦生产水平并不发达，不能独立自主研发飞机，大都是从别国进口的二手、三手，甚至四手的老旧产品。这次失事的飞机已经有15年的机龄，自然会有很多的安全隐患。此外，虽然巴基斯坦的飞行员驾驶水平普遍比较高，但是他们盲目自信，经常会冒着恶劣的天气飞行，因此必然会事故频发。正应了中国的一句古话：善骑者坠于马，善水者溺于水，善饮者醉于酒，善战者殁于杀。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 民航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业典礼演讲</title>
      <link href="2020-05-03-biyedianli/"/>
      <url>2020-05-03-biyedianli/</url>
      
        <content type="html"><![CDATA[<p>5月1号的时候在新壹街小码王举办了我们班的毕业典礼。很多同学都看出来了，20页的PPT我只用了不到10页，目的是为了不打扰大家的氛围，今天，我就以文字的形式来展示没被删减的演讲。</p><h2 id="学C-的根本原因：进HF信竞队-尽管后来也没进"><a href="#学C-的根本原因：进HF信竞队-尽管后来也没进" class="headerlink" title="学C++的根本原因：进HF信竞队 尽管后来也没进"></a>学C++的根本原因：进HF信竞队 <del>尽管后来也没进</del></h2><h2 id="学习OI前，我以为OI是这样的："><a href="#学习OI前，我以为OI是这样的：" class="headerlink" title="学习OI前，我以为OI是这样的："></a>学习OI前，我以为OI是这样的：</h2><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszzre94lj30go0c1wfq.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdt0061z0hj30bt0goabv.jpg" alt=""></p><h2 id="学习历程的回顾："><a href="#学习历程的回顾：" class="headerlink" title="学习历程的回顾："></a>学习历程的回顾：</h2><p><img src="https://s1.ax1x.com/2020/04/13/GjQ4VU.png" alt="GjQ4VU.png"></p><h2 id="学到了什么"><a href="#学到了什么" class="headerlink" title="学到了什么:"></a>学到了什么:</h2><ul><li>编程能力：从连int都不会的蒟蒻变成了有✅的人</li><li>思考能力：自主完成题目</li><li>出题能力：举办班级月赛、专题训练</li></ul><h2 id="收获了什么："><a href="#收获了什么：" class="headerlink" title="收获了什么："></a>收获了什么：</h2><ul><li><p>知识</p></li><li><p>为了更好的写题解搭建了个人博客<a href="https://yuzhenghao.cn">https://yuzhenghao.cn</a></p></li><li>自己的题库：约有50道优质的题目</li><li><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdu5aq91w4j30oc05mgm9.jpg" alt=""></li></ul><h3 id="XJL到底是谁？（删减片段）"><a href="#XJL到底是谁？（删减片段）" class="headerlink" title="XJL到底是谁？（删减片段）"></a>XJL到底是谁？（删减片段）</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdt0hei1o1j306q0900u1.jpg" alt=""></p><h2 id="真正在用的OJ：洛谷"><a href="#真正在用的OJ：洛谷" class="headerlink" title="真正在用的OJ：洛谷"></a>真正在用的OJ：洛谷</h2><h3 id="我曾问过kkksc03这个问题：为什么洛谷会让OIer这么喜欢呢（删减片段）"><a href="#我曾问过kkksc03这个问题：为什么洛谷会让OIer这么喜欢呢（删减片段）" class="headerlink" title="我曾问过kkksc03这个问题：为什么洛谷会让OIer这么喜欢呢（删减片段）"></a>我曾问过kkksc03这个问题：为什么洛谷会让OIer这么喜欢呢（删减片段）</h3><h3 id="他的回答是：（删减片段）"><a href="#他的回答是：（删减片段）" class="headerlink" title="他的回答是：（删减片段）"></a>他的回答是：（删减片段）</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszx2ku2pj306902smx5.jpg" alt=""></p><p>从注册到绝望：</p><ul><li>2019/07/31 注册祭，踏上OI之旅</li><li>2019/08/07 蓝名祭</li><li>2019/11/01 绿名祭</li><li>2019/11/09 发第一篇blog祭</li><li>2019/11/11 发第一篇题解祭</li><li>2019/11/23 打卡50天祭</li><li>2019/12/12 绿勾祭，成为真正的OIer</li><li><p>2019/12/21 AC-66祭</p></li><li><p>2020/01/02 打卡90祭</p></li><li>2020/01/12 打卡100祭</li><li>2020/02/12 AC-100祭</li><li>2020/02/13 提交200祭</li></ul><h2 id="对我的影响"><a href="#对我的影响" class="headerlink" title="对我的影响"></a>对我的影响</h2><ul><li><p>从感兴趣到爱好：C++是唯一一个愿意去付出时间的东西</p></li><li><p>对计算机这一领域有一个更深刻的理解：不再是用来打游戏</p></li><li><p>结识到了更多的伙伴</p></li><li><p>让我懂得“十分耕耘一分收获”</p></li></ul><p>我记得在准备2019 CSP的时候，我把2006年到2018年的所有卷子都做了一遍，很多同学都认为我跟某位大佬一样没有复习就稳过分数线，其实不然。我第一次做初赛的卷子才得了9分，从那以后我就一直背，直到自己可以一字不差的把整个复习资料背下来。</p><h2 id="我的感受"><a href="#我的感受" class="headerlink" title="我的感受"></a>我的感受</h2><h3 id="当我提交代码时："><a href="#当我提交代码时：" class="headerlink" title="当我提交代码时："></a>当我提交代码时：</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszm1l4wdj30ln0heh1f.jpg" alt=""></p><h3 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszpvp6l1j30kn04dglo.jpg" alt=""></p><h3 id="我想说："><a href="#我想说：" class="headerlink" title="我想说："></a>我想说：</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdsztbyvrwj30e208cwfe.jpg" alt=""></p><h3 id="我的表情是这样的："><a href="#我的表情是这样的：" class="headerlink" title="我的表情是这样的："></a>我的表情是这样的：</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszr7lzkxj305i05iglk.jpg" alt=""></p><h3 id="我的内心："><a href="#我的内心：" class="headerlink" title="我的内心："></a>我的内心：</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszshkdwkj305i05idfv.jpg" alt=""></p><h3 id="所以…"><a href="#所以…" class="headerlink" title="所以…"></a>所以…</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszi4oq57j305b05i3ym.jpg" alt=""></p><h3 id="每当讲完课时："><a href="#每当讲完课时：" class="headerlink" title="每当讲完课时："></a>每当讲完课时：</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszugn3k0g30ic0c8dk7.gif" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszvk8eijj30k00pztbe.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdszy91yxlj30c80bnt9o.jpg" alt=""></p><h2 id="月赛总结：（删减片段）"><a href="#月赛总结：（删减片段）" class="headerlink" title="月赛总结：（删减片段）"></a>月赛总结：（删减片段）</h2><ol><li>班级平均分</li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">姓名</th><th style="text-align:center">平均分</th></tr></thead><tbody><tr><td style="text-align:center">高贝凡</td><td style="text-align:center">376.67</td></tr><tr><td style="text-align:center">刘致远</td><td style="text-align:center">336.67</td></tr><tr><td style="text-align:center">汤宸</td><td style="text-align:center">135.33</td></tr><tr><td style="text-align:center">方舟</td><td style="text-align:center">113.33</td></tr><tr><td style="text-align:center">徐端</td><td style="text-align:center">86.67</td></tr></tbody></table></div><ol><li>洛谷刷题数量统计</li></ol><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gef97ddomgj30r20eowgu.jpg" alt=""></p><p><strong>看完以上数据你就知道为什么我把他删减了</strong></p><p>其实数据不能反映出什么，态度决定了一切，比如我在4月30日晚上统计数据的时候我发现有一位同学把【Round 1】4月月赛的题目全部提交了一遍，间隔不超过2分钟，还都CE了</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gef9a17h8pj30ni0760tc.jpg" alt=""></p><p>我看到了他的代码，差点就原地爆炸了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>; </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">int</span> a,b,c,d; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;c; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;d; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2&quot;</span>; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>节选自这位同学4个提交记录中的一个</p><p>我先不提你这骗分问题，就你这<code>int main()</code>后面还给我加个分号的我还真是头一次见。</p><blockquote><p>整个月赛系列截至现在一共举办了5次，有两位同学从来没有参加过，也就是高贝凡口中的“某些人”，并且我相信这两位同学根本就没有来看这个赛后总结和解题报告。这两位同学总是以各种理由推脱。我还真的不相信，一个学校的作业比宏帆、鲁巴、南渝这种名校还多。你们究竟是真的没有时间，还是从头到尾一直在划水，只有你们自己清楚。</p></blockquote><p>对于上面所说的那两位同学，你自己好好想想吧</p><p>下一次比赛的内容：模拟与高精度</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专题训练 ｜ 模拟与高精赛前指导</title>
      <link href="2020-05-03-moni-gaojingdu/"/>
      <url>2020-05-03-moni-gaojingdu/</url>
      
        <content type="html"><![CDATA[<h3 id="本文所有题目都在：https-www-luogu-com-cn-training-9473-problems"><a href="#本文所有题目都在：https-www-luogu-com-cn-training-9473-problems" class="headerlink" title="本文所有题目都在：https://www.luogu.com.cn/training/9473#problems"></a>本文所有题目都在：<a href="https://www.luogu.com.cn/training/9473#problems">https://www.luogu.com.cn/training/9473#problems</a></h3><p>所谓“建模”，就是把事物进行抽象，根据实际问题来建立对应的数学模型。“抽象”并不意味着晦涩难懂；相反，它提供了大量的便利。计算机很难直接去解决实际问题，但是如果把实际问题建模成数学问题，就会大大地方便计算机来“理解”和“解决”。</p><p>举个生活中常见的例子：我们拿到了某次数学考试的成绩单，现在需要知道谁考得最好。当然不能把成绩单对着电脑晃一晃，然后问“谁考得最好？”。需要通过一种途径让计算机来理解这个问题。这个问题可以建模成：“给定数组<br><code>score[]</code>，问数组内元素的最大值”。这样建模后，就能很方便的写程序解决问题了。对于这个问题，采用之前讨论过的“擂台法”，就可以给出答案。</p><p>如何把实际问题建模成数学问题，主要依靠我们的经验和直觉、当然还有你灵动的思维；而算法与数据结构，正是解决数学问题的两把利剑。从这一章开始会介绍一些程序设计竞赛中的一些常见套路算法，而下一部分会介绍基础的数据结构。如果已经认真学习完了第一部分，相信这一部分也不在话下。</p><p>这一章是语言部分的延伸，会介绍一些竞赛中会出现的“模拟题目”——这里的“模拟”不是指模拟某场比赛的模拟题，而是指让程序完整的按照题目叙述的方式执行运行得到最终答案。同时也会介绍可以计算很大整数的高精度运算方法。这一章对思维与算法设计的要求不高，但是会考验编程的基本功是否扎实<br>。</p><h2 id="什么是模拟"><a href="#什么是模拟" class="headerlink" title="什么是模拟"></a>什么是模拟</h2><p>模拟就是按照题意建模，题目让你干什么你就照着它干什么。</p><p>模拟的思路非常简单，基本不需要思考。但模拟题有码量大，难调试等缺点，在考场写错也非常浪费时间。</p><h2 id="讲一个例题：P1042-乒乓球（普及-）"><a href="#讲一个例题：P1042-乒乓球（普及-）" class="headerlink" title="讲一个例题：P1042 乒乓球（普及-）"></a>讲一个例题：P1042 乒乓球（普及-）</h2><p><a href="https://www.luogu.com.cn/problem/P1042">https://www.luogu.com.cn/problem/P1042</a></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>从题中我们得知它需要我们球11分制和21分制的比分结果，也就是华华对手或华华谁更快到达（11或21）分时，并且比分差的绝对值不小于2，就输出比分（立为一局），当然这里还有一个重要的点，就是最后一局比赛时，可能比分不会到11或21，我们直接搜索到E结尾，最后退出循环再输出一遍最后局结果即可</p><h3 id="注意！"><a href="#注意！" class="headerlink" title="注意！"></a>注意！</h3><ol><li>本题奇大无比的数据量</li><li>最后的当前比分也许是0:0，一定要输出！！！</li></ol><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt; </span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000000</span>];     <span class="comment">//其实可以不保存，但是本人习惯</span></span><br><span class="line"><span class="keyword">int</span> w, l, x, n, g, t, m, i;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p[<span class="number">10000</span>], q[<span class="number">10000</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;a[t]) &amp;&amp; a[t]!=<span class="string">&#x27;E&#x27;</span>)&#123; <span class="comment">//读取数据，到‘E’结束</span></span><br><span class="line">        <span class="keyword">if</span>(a[t]==<span class="string">&#x27;W&#x27;</span>)&#123; </span><br><span class="line">            w++;   <span class="comment">//11分制</span></span><br><span class="line">            x++;   <span class="comment">//21分制</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[t]==<span class="string">&#x27;L&#x27;</span>)&#123; <span class="comment">//同上</span></span><br><span class="line">            l++;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((w&gt;<span class="number">10</span> &amp;&amp; w-l&gt;<span class="number">1</span>) || (l&gt;<span class="number">10</span> &amp;&amp; l-w&gt;<span class="number">1</span>))&#123;   <span class="comment">//W或L比赛者到达11时，并且比分差不小于2，立为一局，保存一局比分</span></span><br><span class="line">            q[m++]=w;</span><br><span class="line">            q[m++]=l;</span><br><span class="line">            w=<span class="number">0</span>;</span><br><span class="line">            l=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((x&gt;<span class="number">20</span> &amp;&amp; x-n&gt;<span class="number">1</span>) || (n&gt;<span class="number">20</span> &amp;&amp; n-x&gt;<span class="number">1</span>))&#123;   <span class="comment">//W或L比赛者到达21时，并且比分差不小于2，立为一局，保存一局比分</span></span><br><span class="line">            p[g++]=x;</span><br><span class="line">            p[g++]=n;</span><br><span class="line">            x=<span class="number">0</span>;</span><br><span class="line">            n=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t++;    </span><br><span class="line">    &#125;</span><br><span class="line">    p[g++]=x;   <span class="comment">// 当前比分</span></span><br><span class="line">    p[g++]=n;</span><br><span class="line">    q[m++]=w;</span><br><span class="line">    q[m++]=l;   </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i+=<span class="number">2</span>)&#123;  <span class="comment">//输出11分制下比分</span></span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d:%d&quot;</span>, q[i], q[i+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;\n%d:%d&quot;</span>, q[i], q[i+<span class="number">1</span>]);       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;g;i+=<span class="number">2</span>)   <span class="comment">//输出21分制下比分</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n%d:%d&quot;</span>, p[i], p[i+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高精度：背他！"><a href="#高精度：背他！" class="headerlink" title="高精度：背他！"></a>高精度：背他！</h2><p>1.概念</p><p>高精度运算,是指参与运算的数(加数,减数,因子……）范围大大超出了标准数据类型（整型，实型）能表示的范围的运算。例如，求两个200位的数的和。这时，就要用到高精度算法了</p><p>高精度使用数组来存储整数，模拟手算进行四则运算</p><p>2.高精度运算涉及到的问题</p><p>（1） 数据的输入</p><p>（2） 数据的存储</p><p>（3）数据的运算：进位和借位</p><p>（4）结果的输出：小数点的位置和处于多余的0 </p><p>3.高精度加法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a1[<span class="number">100</span>],b1[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>],b[<span class="number">100</span>],c[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> lena,lenb,lenc,i,x; 注意x是Int型</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a)); </span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line"> <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line"> gets(a1); </span><br><span class="line"> gets(b1); <span class="comment">//输入加数与被加数 </span></span><br><span class="line"> lena=<span class="built_in">strlen</span>(a1); </span><br><span class="line"> lenb=<span class="built_in">strlen</span>(b1); </span><br><span class="line"> <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=lena<span class="number">-1</span>;i++)</span><br><span class="line">    a[lena-i]=a1[i]<span class="number">-48</span>; <span class="comment">//加数放入a数组 　 </span></span><br><span class="line"> <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=lenb<span class="number">-1</span>;i++) </span><br><span class="line">    b[lenb-i]=b1[i]<span class="number">-48</span>; <span class="comment">//加数放入b数组 </span></span><br><span class="line"> lenc =<span class="number">1</span>; x=<span class="number">0</span>; </span><br><span class="line"> <span class="keyword">while</span> (lenc &lt;=lena||lenc &lt;=lenb) </span><br><span class="line"> &#123; 　 </span><br><span class="line">  c[lenc]=a[lenc]+b[lenc]+x; <span class="comment">//两数相加 　</span></span><br><span class="line">  x=c[lenc]/<span class="number">10</span>; 　</span><br><span class="line">  c[lenc]%=<span class="number">10</span>; </span><br><span class="line">  lenc++; </span><br><span class="line">&#125;</span><br><span class="line">    c[lenc]=x; </span><br><span class="line"><span class="keyword">if</span> (c[lenc]==<span class="number">0</span>)<span class="comment">//此时最高位上的加法 例如9+3 = 12 要溢出一位 </span></span><br><span class="line">   lenc--; <span class="comment">//处理最高进位 </span></span><br><span class="line"><span class="keyword">for</span> (i=lenc;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;c[i]; <span class="comment">//输出结果 cout&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>4.高精度减法</p><p>  和高精度加法相比，减法在差为负数时处理的细节更多一点：当被减数小于减数时，差为负数，差的绝对值是减数减去被减数；在程序实现上用一个变量来存储符号位，用另一个数组存差的绝对值。</p><p>算法流程：</p><ul><li><p>读入被减数S1，S2（字符串）；</p></li><li><p>置符号位：判断被减数是否大于减数：大则将符号位置为空；小则将符号位置为“-”，交换减数与被减数；</p></li><li><p>被减数与减数处理成数值，放在数组中；</p></li><li><p>运算：</p><ul><li>取数；</li><li>判断是否需要借位；</li><li>减，将运算结果放到差数组相应位中；</li><li>判断是否运算完成：是，转5；不是，转A；</li></ul></li><li>打印结果：符号位，第1位，循环处理第2到最后一位；</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exch_str</span><span class="params">(<span class="keyword">char</span>*s1, <span class="keyword">char</span>*s2)</span><span class="comment">//当减数大于被减数 交换二者 eg:2 -3 减数为3 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> tmp[<span class="number">1001</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(tmp,s1);</span><br><span class="line">    <span class="built_in">strcpy</span>(s1,s2);</span><br><span class="line">    <span class="built_in">strcpy</span>(s2,tmp);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> a1[<span class="number">1001</span>],b1[<span class="number">1001</span>],s[<span class="number">1001</span>]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">1001</span>], b[<span class="number">1001</span>];</span><br><span class="line">    <span class="keyword">int</span> sign=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> len_a, len_b, i, j, k=<span class="number">0</span>, t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, a, b);</span><br><span class="line">    len_a = <span class="built_in">strlen</span>(a);</span><br><span class="line">    len_b = <span class="built_in">strlen</span>(b);</span><br><span class="line">    <span class="keyword">if</span>(len_a &lt; len_b)</span><br><span class="line">    &#123;</span><br><span class="line">        sign = <span class="number">-1</span>;<span class="comment">//符号位置负</span></span><br><span class="line">        exch_str(a,b);<span class="comment">//交换被减数与减数</span></span><br><span class="line">        t = len_a;</span><br><span class="line">        len_a = len_b;</span><br><span class="line">        len_b = t;<span class="comment">//交换他们的长度</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(len_a == len_b)</span><br><span class="line">      <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len_a; ++i)</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt; b[i])</span><br><span class="line">        &#123;</span><br><span class="line">          sign = <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i] &lt; b[i])<span class="comment">//两者长度相同 差仍未负数 </span></span><br><span class="line">        &#123;</span><br><span class="line">          sign = <span class="number">-1</span>;</span><br><span class="line">          exch_str(a,b);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          sign = <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len_a; ++i)</span><br><span class="line">       a1[i] = a[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; len_b; ++j)</span><br><span class="line">       b1[j] = b[j] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   <span class="keyword">while</span>(i&gt;=<span class="number">0</span> &amp;&amp; j&gt;=<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">    s[k] = a1[i] - b1[j];<span class="comment">//s[0]=0,因为a1[len_a]和b1[len_b]为0</span></span><br><span class="line">    <span class="keyword">if</span>(s[k] &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      a1[i<span class="number">-1</span>] -= <span class="number">1</span>;<span class="comment">//借位</span></span><br><span class="line">      s[k]+=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    k++;</span><br><span class="line">    i--;</span><br><span class="line">    j--;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     s[k] = a1[i];</span><br><span class="line">     k++;</span><br><span class="line">     i--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sign&lt;<span class="number">0</span>)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(s[k]==<span class="number">0</span>&amp;&amp;k&gt;<span class="number">0</span>)</span><br><span class="line">      k--;</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">0</span>)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(k &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[k]);</span><br><span class="line">      k--;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.高精度乘法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> n[<span class="number">255</span>],m[<span class="number">255</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n1[<span class="number">255</span>],m1[<span class="number">255</span>],s[<span class="number">510</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i,j, k=<span class="number">0</span>, t, x=<span class="number">0</span>, dig;</span><br><span class="line"><span class="keyword">int</span> lenn, lenm;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">lenn = <span class="built_in">strlen</span>(n);</span><br><span class="line">lenm = <span class="built_in">strlen</span>(m);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; lenn; i++)</span><br><span class="line">   n1[i] = n[i] - <span class="number">48</span>;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; lenm; j++)</span><br><span class="line">   m1[j] = m[j] - <span class="number">48</span>;</span><br><span class="line"><span class="keyword">for</span>(j = lenm<span class="number">-1</span>; j&gt;=<span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line">t=k;</span><br><span class="line"><span class="keyword">for</span>(i = lenn<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">  s[t]+=n1[i]*m1[j];</span><br><span class="line">  t++;</span><br><span class="line">    &#125;</span><br><span class="line">    ++k;</span><br><span class="line">    dig=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; dig; i++)</span><br><span class="line">   <span class="keyword">while</span>(s[i] &gt;= <span class="number">10</span>)</span><br><span class="line">          &#123;</span><br><span class="line">     s[i] -= <span class="number">10</span>;</span><br><span class="line">     ++s[i+<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(s[dig] != <span class="number">0</span>)</span><br><span class="line">     <span class="keyword">for</span>(i=dig;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,s[i]);</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">for</span>(i=dig<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,s[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.高精度除法<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="built_in">string</span> str1,str2;  </span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">250</span>],b[<span class="number">250</span>],c[<span class="number">500</span>],len;    <span class="comment">//250位以内的两个数相乘  </span></span><br><span class="line">  <span class="keyword">int</span> i,j;  </span><br><span class="line">  <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));  </span><br><span class="line">  <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));  </span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2;  </span><br><span class="line">  a[<span class="number">0</span>]=str1.length();  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=a[<span class="number">0</span>];i++)  </span><br><span class="line">    a[i]=str1[a[<span class="number">0</span>]-i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">  b[<span class="number">0</span>]=str2.length();  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=b[<span class="number">0</span>];i++)  </span><br><span class="line">    b[i]=str2[b[<span class="number">0</span>]-i]-<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line">  <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=a[<span class="number">0</span>];i++)   <span class="comment">//做按位乘法同时处理进位，注意循环内语句的写法。  </span></span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=b[<span class="number">0</span>];j++)  </span><br><span class="line">    &#123;  </span><br><span class="line">    c[i+j<span class="number">-1</span>]+=a[i]*b[j];  </span><br><span class="line">    c[i+j]+=c[i+j<span class="number">-1</span>]/<span class="number">10</span>;  </span><br><span class="line">    c[i+j<span class="number">-1</span>]%=<span class="number">10</span>;     </span><br><span class="line">    &#125;  </span><br><span class="line">  len=a[<span class="number">0</span>]+b[<span class="number">0</span>]+<span class="number">1</span>;  <span class="comment">//去掉最高位的0，然后输出  </span></span><br><span class="line">  <span class="keyword">while</span>((c[len]==<span class="number">0</span>)&amp;&amp;(len&gt;<span class="number">1</span>)) len--;   <span class="comment">//为什么此处要len&gt;1??  </span></span><br><span class="line">  <span class="keyword">for</span>(i=len;i&gt;=<span class="number">1</span>;i--)  </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;c[i];  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>状压dp及其经典题型</title>
      <link href="2020-04-20-%E7%8A%B6%E5%8E%8Bdp/"/>
      <url>2020-04-20-%E7%8A%B6%E5%8E%8Bdp/</url>
      
        <content type="html"><![CDATA[<h2 id="状压dp总结"><a href="#状压dp总结" class="headerlink" title="状压dp总结"></a>状压dp总结</h2><p>在很多情况下，我们需要记录的状态很复杂。</p><p>我们就把这些dp统一称为状压dp。</p><p>这类问题的一个经典应用是在棋盘上。</p><p>我们往往记录一整行信息，或者记录之前的一些网格/线/列/斜线的信息。</p><p>在一些其他的问题中，我们可能需要记录每一项的选择状态。</p><p>我们通常用0表示一个物品没被选中，1表被选中。</p><p>剩下的物体最优解，只与前面少量的信息有关。</p><p>在更复杂的情况下，一个项目可以有更复杂的状态。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>一般用一个二进制数表示压缩后的状态。</p><p>然后即可暴力跑状态dp。</p><p>因此状压dp复杂度一般是指数级的。</p><p>所以 $n$ 一般在10到18之间。</p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h3 id="愤怒的小鸟"><a href="#愤怒的小鸟" class="headerlink" title="愤怒的小鸟"></a>愤怒的小鸟</h3><p><a href="https://www.luogu.com.cn/problem/P2831">传送门</a></p><h4 id="简述题意"><a href="#简述题意" class="headerlink" title="简述题意"></a>简述题意</h4><ul><li>有n个猪，你可以从原点引出抛物线，问最少用多少次可以打到所有猪。</li></ul><h4 id="简述做法"><a href="#简述做法" class="headerlink" title="简述做法"></a>简述做法</h4><ul><li>预处理所有有效抛物线。</li><li>以猪有没有被打下来作为状态进行状压DP。</li></ul><h4 id="具体阐述"><a href="#具体阐述" class="headerlink" title="具体阐述"></a>具体阐述</h4><p>我们对每个猪进行一次遍历，每次对序号在他后面的猪进行遍历，对于之前没有的抛物线我们新保存一次。</p><p>对于抛物线 $y=ax^2+bx+c$。已知经过原点，所以 $c=0$ 。</p><p>我们又另知抛物线经过两点 $(x_i,y_i)(x_j,y_j)$</p><p>可算出$a = \frac{x<em>{j}y</em>{i}−x<em>{i}y</em>{j}}{x<em>{i}x</em>{j}(x<em>i−x_j)}$，$b = \frac{x</em>{i}x<em>{i} y</em>{j} − x<em>{j}x</em>{j}y<em>{i}}{x</em>{i}x{j}(x_{i}x{j})}$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            line[cnt++]=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">            <span class="keyword">for</span>(ll j=i+<span class="number">1</span>,use=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                <span class="keyword">if</span>((use&gt;&gt;j)&amp;<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ld a=(x[j]*y[i]-x[i]*y[j])/(x[i]*x[j]*(x[i]-x[j])),b=(x[i]*x[i]*y[j]-x[j]*x[j]*y[i])/(x[i]*x[j]*(x[i]-x[j]));</span><br><span class="line">                    <span class="keyword">if</span>(a&gt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    line[cnt]=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">                    <span class="keyword">for</span>(ll k=j;k&lt;n;k++) </span><br><span class="line">                        <span class="keyword">if</span>(ab(a*x[k]*x[k]+b*x[k]-y[k])&lt;=eps) use|=(<span class="number">1</span>&lt;&lt;k),line[cnt]|=(<span class="number">1</span>&lt;&lt;k);</span><br><span class="line">                    cnt++;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 因为 $n≤18$ ，所以很容易想到状压DP。</p><p>我们定义 $f_s$ 为打到 $s$ 的状态时最少的次数。</p><p>​对于每个抛物线，可易得<strong>转移方程</strong>：$f<em>{i∣line</em>{j}} = minf<em>{i∣line</em>{j}},f_{i}+1$<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">​<span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)</span><br><span class="line">    <span class="keyword">for</span>(ll j=<span class="number">0</span>;j&lt;cnt;j++)</span><br><span class="line">        f[i|line[j]]=min(f[i|line[j]],f[i]+<span class="number">1</span>);</span><br></pre></td></tr></table></figure></p><p>本题运用基本数学知识和基本状压DP，偏模板型。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">const</span> ll N=<span class="number">20</span>;</span><br><span class="line">ll n,T,line[<span class="number">200</span>],f[<span class="number">1</span>&lt;&lt;N],cnt,op;</span><br><span class="line">ld x[N],y[N],eps=<span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rd</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    ll fl=<span class="number">1</span>;x=<span class="number">0</span>;<span class="keyword">char</span> c=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=getchar()) <span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) fl=-fl;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=getchar()) x=(x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    x*=fl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wr</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>) x=-x,<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">10</span>) <span class="built_in">putchar</span>(x+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>) wr(x/<span class="number">10</span>),<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ld <span class="title">ab</span><span class="params">(ld x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;=<span class="number">0.00</span>?x:-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//  freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//  freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    rd(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0x3f3f3f3f</span>,<span class="keyword">sizeof</span>(f));cnt=<span class="number">0</span>;</span><br><span class="line">        rd(n);rd(op);</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%llf %llf&quot;</span>,&amp;x[i],&amp;y[i]);</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            line[cnt++]=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">            <span class="keyword">for</span>(ll j=i+<span class="number">1</span>,use=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                <span class="keyword">if</span>((use&gt;&gt;j)&amp;<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ld a=(x[j]*y[i]-x[i]*y[j])/(x[i]*x[j]*(x[i]-x[j])),b=(x[i]*x[i]*y[j]-x[j]*x[j]*y[i])/(x[i]*x[j]*(x[i]-x[j]));</span><br><span class="line">                    <span class="keyword">if</span>(a&gt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    line[cnt]=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">                    <span class="keyword">for</span>(ll k=j;k&lt;n;k++) </span><br><span class="line">                        <span class="keyword">if</span>(ab(a*x[k]*x[k]+b*x[k]-y[k])&lt;=eps) use|=(<span class="number">1</span>&lt;&lt;k),line[cnt]|=(<span class="number">1</span>&lt;&lt;k);</span><br><span class="line">                    cnt++;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)</span><br><span class="line">            <span class="keyword">for</span>(ll j=<span class="number">0</span>;j&lt;cnt;j++)</span><br><span class="line">                f[i|line[j]]=min(f[i|line[j]],f[i]+<span class="number">1</span>);</span><br><span class="line">        wr(f[(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>]);<span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>时间复杂度 $O(2^n×n^2)$</p><h2 id="还有一道题我还没想明白，为了避免出锅就先不放了"><a href="#还有一道题我还没想明白，为了避免出锅就先不放了" class="headerlink" title="还有一道题我还没想明白，为了避免出锅就先不放了"></a>还有一道题我还没想明白，为了避免出锅就先不放了</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPhone SE：称心称手，值得入手</title>
      <link href="2020-04-16-iPhone-SE/"/>
      <url>2020-04-16-iPhone-SE/</url>
      
        <content type="html"><![CDATA[<p>来了来了，终于来了！</p><p><strong>就刚刚，苹果悄悄在官网上线了第二代 iPhoneSE。</strong></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv92griyoj30ic0b0q52.jpg" alt=""></p><p>像我一样的等等党也终于如愿以偿。</p><p>但这次的「新」产品，我总结一下就是：<strong>毫无意外</strong></p><p>当然，这也是因为先前看了太多泄密和爆料的原因吧。</p><p>不多 BB，咱们直接进入正题</p><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><p>iPhoneSE 还是使用的「单摄」，并且依旧是那么的突起…</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv93gn3zmj30ic0brtc7.jpg" alt=""></p><p>为了迎合目前的 iPhone 系列的统一性，苹果 logo 还是在居中的位置。</p><p>第一眼看完，我真以为是 iPhone8…</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv94ctksxj30in0xc74z.jpg" alt=""></p><p>同时也给你提供了 3 种颜色的选择：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv94yf9w1j30g10jbtgl.jpg" alt=""></p><p>整体淡雅了不少，还挺好看</p><p>咱们翻到正面</p><p>还是 4.7 英寸，依旧是超厚大白边，依旧是停航母的屏幕边框，依旧还是哪个熟悉的 Touch ID。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv95n096mj30g10afq47.jpg" alt=""></p><h2 id="拍照"><a href="#拍照" class="headerlink" title="拍照"></a>拍照</h2><p>回归到了「单摄」，iPhoneSE 使用的依旧是 iPhone8 上面的那颗 1200 万像素广角镜头，并且支持 5 倍数码变焦、ƒ/1.8 光圈、光学图像防抖功能等等，只要是 iPhone11 上有的，它都有～</p><p>但与 iPhone8 不同的地方在于，这颗摄像头是 A13 罩着的。</p><p>所以，像是 iPhone11 上前后摄像头都支持的人像模式；</p><p>人像光效；</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv981xhvvj30ds0g6dq4.jpg" alt=""></p><p>智能 HDR；</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv98tksvzj30ds0fp7gf.jpg" alt=""></p><p>4K 视频拍摄；</p><p>以及拍着照片的时候，只要按住快门就能切换成视频拍摄，再右滑直接进入视频拍摄模式。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv99u4dawj30i20cj465.jpg" alt=""></p><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><p>这一次，当然用上了 A13 Bionic 芯片，还是一如既往地给力。</p><p>回想当初 iPhone 11 系列发布的时候，还把友商拉出来吊打了一回。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv9alkicxj30i20cjwjp.jpg" alt=""></p><p>在这些提升的基础上，iPhoneSE 的电池续航依旧与 iPhone8 持平…这确实让我有些意外。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv9bhlxruj30gn0jj776.jpg" alt=""></p><p>其他的像是 Touch ID、 IP67 防尘抗水、Qi 无线充电、18W 快充、支持 Wi-Fi 6 等等，基本和前几代都保持一致。</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv9bz9s03j30h40fjjvh.jpg" alt=""></p><p>好了，到这里 iPhoneSE 也就这些内容了，其实一张图就能概括下来，是不是觉得有些无聊？</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gdv9civxukj30id0etdn1.jpg" alt=""></p><p>那我们就来揭晓一下价格吧。</p><p>64GB ——3299 元人民币</p><p>128GB ——3799 元人民币</p><p>256GB ——4599 元人民币</p><p>将于 4 月 17 日晚 8 点开始预购，并且所有机型将在获得批准后发售。</p><p>看到这，你就知道为什么我开头会说毫无意外了吧。</p><p>熟悉苹果的朋友，肯定能看出来，这次的 iPhoneSE，还是一次「清库存」的升级。</p><p>无论是摄像头、屏幕还是芯片等等，怎么看都像是过去 iPhone8、iPhoneXR 等机型剩下来的…</p><p>但就像苹果之前所说的那样，iPhone9 发布的目的，就是督促老机型用户：「你该换机了」</p><p>在这里我也提醒大家一下，目前还在用 iPhone6s、iPhone7 等远古机型的同学，如果你的手机用起来已经吃力的，可以考虑换这个，当然，如果你想坚持到 iPhone12 再换也可以。</p><p>而那些在用 iPhone11、iPhoneXS 等机型的用户就别买了，虽然价格很便宜，但几千块留着买排骨不香么？</p><p>那么这次的新机就这样，嘿嘿，我也终于有借口不买了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LGR-071】洛谷4月月赛 &amp; MdOI Round 2 Div.2题解</title>
      <link href="2020-04-13-luoguyuesai4-2-2/"/>
      <url>2020-04-13-luoguyuesai4-2-2/</url>
      
        <content type="html"><![CDATA[<h1 id="A-Car"><a href="#A-Car" class="headerlink" title="A. Car"></a>A. Car</h1><p>考点：简单字符串。</p><h2 id="Subtask-1"><a href="#Subtask-1" class="headerlink" title="Subtask 1"></a>Subtask 1</h2><p>根据题意，外地车每天都限行，直接输出 <code>1 1 1 1 1</code> 即可。</p><h2 id="Subtask-2"><a href="#Subtask-2" class="headerlink" title="Subtask 2"></a>Subtask 2</h2><p>还是要先判断是否为外地车。若是则直接输出并退出程序。</p><p>若为本地车，则由于最后一位一定是数字，故尾号一定是最后一位。</p><p>观察发现，除了周五，周 的限行尾号就是 和 ，我们可以用这个性质用 $for$ 语句判断周一到<br>周四的限行情况。</p><h2 id="Subtask-3"><a href="#Subtask-3" class="headerlink" title="Subtask 3"></a>Subtask 3</h2><p>我们现在没有解决的一个问题是尾号究竟出现在哪一位。</p><p>根据题意，我们可以定义一个变量，从最后一位开始从左数，直到碰到第一个数字为止。</p><h1 id="B-Mayuri"><a href="#B-Mayuri" class="headerlink" title="B. Mayuri"></a>B. Mayuri</h1><p>涉及知识点：贪心。</p><p>首先，我们分析输出 -1 的情况。</p><p>容易发现，当 $a$ = 10 并且 的第一个字符为 1 时显然无解，具体证明同样例二。</p><p>除此以外的情况都是有解的。故在接下来的讨论中排除无解的情况。</p><h2 id="Subtask-1-1"><a href="#Subtask-1-1" class="headerlink" title="Subtask 1:"></a>Subtask 1:</h2><p>由于 $n$ 是正整数，在字符串长度为 1 位的情况下，如果输入的串是 0 ，则 显然是最小的答案。</p><p>如果输入的串是 1 ，则显然直接输出 $a$ 是最小的，因为 $a$ 的最小倍数就是 $a$ 本身。</p><h2 id="Subtask-2-1"><a href="#Subtask-2-1" class="headerlink" title="Subtask 2:"></a>Subtask 2:</h2><p>对于 $n$ 为两位数的情况，我们可以选择直接打表，直接算出每种可能的对应最小解。</p><p>我们也可以采用枚举所有两位数逐个判断的方式。</p><p>当我们判断某一个数是否符合条件时，我们通过除以 10 的方式得到其第一位，并判断其是否整除 。</p><p>如果第一位符合条件，我们再直接判断其是否整除 $a$ 以判断前 2 位是否满足条件。</p><h2 id="Subtask-3-1"><a href="#Subtask-3-1" class="headerlink" title="Subtask 3:"></a>Subtask 3:</h2><p>与上面的做法相似，直接枚举所有 10000 位数。</p><p>不同的是对于每一个数我们要判断 10000 次。</p><p>我们通过除以 得到其第一位，通过除以 900000 得到其前两位构成的数，以此类推。</p><p>对于每个数，逐一判断。先分离其第一位判断是否满足条件，若满足则分离前两位，以此类推。<br>由于 位数一共只有 6 个，因此我们只需要经过不超过 900000 次枚举就可以找到符合条件的<br>数。</p><h2 id="Subtask-4"><a href="#Subtask-4" class="headerlink" title="Subtask 4:"></a>Subtask 4:</h2><p>要判断一个数是否是 的倍数只需要判断最后一位是否为 2 的倍数 。</p><p>所以我们可以考虑从高位开始往后添加数字。</p><p>如果某一位是 1 ，则我们需要添加的数字是 2 4 6 8 0 中的一个。本着最小的原则，我们选择 0 。</p><p>同理，如果某一位是 0 则我们选择添加一个 。</p><p>另外，如果字符串的第一位是 1 ，则我们需要进行特判。</p><h2 id="Subtask-5"><a href="#Subtask-5" class="headerlink" title="Subtask 5:"></a>Subtask 5:</h2><p>考虑延续上面的做法，从高位往后添加数字。</p><p>由于我们是在高位上添加的，因此我们只需保证我们添加的数字最小，就一定是最优的。</p><p>对于第一位，如果第一位的字符是 0 则我们添加 1 最优，否则第一位添加 $a$ 最优。</p><p>然后对于后面的每一位，设我们当前的数是 $n_1$，添加的数是 $j$，则得到的数是 10 × $n_1$ + $j$。</p><p>由于 $j$ 只有十种可能性，分别枚举尝试，选取最小的加到数的尾端。</p><p>另外，由于 $n$ 过大，无法直接记录，故每添加一个数后对 $a$取模，然后输出时以字符串的方式输出。</p><h2 id="C-Odyssey"><a href="#C-Odyssey" class="headerlink" title="C.Odyssey"></a>C.Odyssey</h2><p>涉及知识点：拓扑排序，动态规划，整除的性质，唯一分解定理</p><h2 id="Subtask-1："><a href="#Subtask-1：" class="headerlink" title="Subtask 1："></a>Subtask 1：</h2><p><strong>特殊限制：</strong><br>当 $k$=1 时，任何两个正整数都组成完美数对，所以只要统计有向无环图上的最长路径即可。<br>这是一个经典的问题，可以用拓扑排序完成，设 $dp(i)$ 表示以 $(i,j,w,l)$ 为终点的最长路径，那么对于<br>边 ，则有转移 $dp(i)$+$l$ -&gt; $dp(j)$，最后所有 的最大值即是答案。</p><p>该算法时间复杂度为 $O(m)$。 </p><h2 id="Subtask-2："><a href="#Subtask-2：" class="headerlink" title="Subtask 2："></a>Subtask 2：</h2><p><strong>特殊限制：</strong><br>由于 $n,m$ 都极小，从每个点开始暴力搜索即可。</p><p>注意当 $k$=2 时，可以先算出 1…100 中间所有数的平方，给这些平方数打个标记，然后对<br>于两个数 ，如果 $x,y$ 打过标记，则$(x,y)$组成完美数对。</p><p>时间复杂度取决于搜索的具体实现方式。</p><p>后面就不是说了</p><h1 id="D-Resurrection"><a href="#D-Resurrection" class="headerlink" title="D.Resurrection"></a>D.Resurrection</h1><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><h3 id="1-1-显然的东西"><a href="#1-1-显然的东西" class="headerlink" title="1.1 显然的东西"></a>1.1 显然的东西</h3><p>观察到，生成的图 $G$ 是一棵树，且假如把原树和新树都看作以 $n$ 为根<br>的有根树，那么新树的任意节点的父节点都是它在原树中的祖先节点。<br>考虑断掉一个节点的父边时，它一定会和某个祖先节点连边。</p><h3 id="1-2-不那么显然的东西"><a href="#1-2-不那么显然的东西" class="headerlink" title="1.2 不那么显然的东西"></a>1.2 不那么显然的东西</h3><p>我们考虑什么样的树可能是生成的新树。<br>一个必要条件是，任意两个祖先-后代节点到父边的连线要么相离，要<br>么某一条包含另一条。也就是说，不存在 $u$，$v$，$u$ 在 $G$ 中的父节点是 $x$，$v$ 是 $y$，满足 $u$ 是 $v$ 的祖先，且 $y$ 是 $u$ 的祖先，且 $x$ 是 $y$ 的祖先。<br>我们考虑 $u$ 的父边被断开的时候，在那之前，$u$ 到 $x$ 之间的任何边都<br>不能被断开，否则 $u$ 到 $x$ 的连边将无法完成。又因为，$y$ 被包含在 $u$ 到 $x$<br>的路径中，$v$ 所在联通块最大点至少是 $x$，其到 $y$ 的连线不可能在这之前完<br>成。而在这之后，$v$ 和 $y$ 不再联通，不可能相互连边。</p><p>同时，这个条件是充分的。考虑这样构造方案：维护一个决策集合，一<br>开始只有根的子节点。每次取决策集合中编号最小的点，断开它在原树中到<br>父节点的边，然后将它在新树中的子节点加入决策集合。<br>这样构造的方案一定是合法的，考虑点 $u$ 到父节点的连边，这个点不<br>可能比它的目标父节点 $v$ 大，因为只有在 $v$ 到父节点的边被断开后 $u$ 才可<br>能加入决策集合。同时这个点也不可能比 $v$ 小，假如这个点比 $v$ 小，那么<br>一定有 $u$ - $v$ 中某一条边被断开了，又因为这些点的编号都比 $u$ 大，必须它们比 $u$ 先加入决策集合才能出现这种情况。然而，根据这个条件的必要性，<br>$v$ 一定是这些节点在 $G$ 中的祖先节点，也就是，这些节点都不早于 $u$ 加入<br>决策集合。矛盾。</p><h3 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h3><p>每个节点会向自己的某个祖先节点连边，并且两条连线不能交叉。我们<br>要计算这样的方案数。考虑 dp。我们记 $f_i$,j 表示考虑到节点 $i$，祖先中有 $j$<br>个可以向其连边的节点时，子树中连边的方案数。<br>考虑枚举点 $u$ 和从下往上数，第 $x$ 个节点连边。那么，这条连线会覆<br>盖掉 $x$ - 1 个可以连边的节点，然后对于子树中的所有节点，$u$ 都是一个可<br>以连边的节点。<br>可以写出转移：</p><p>前缀和优化即可得到 $O$($n^2$) 做法。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专题训练 | 递归与递推赛前指导</title>
      <link href="2020-04-12-diguitui/"/>
      <url>2020-04-12-diguitui/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是最难理解的部分，建议画出递归图来理解递归的过程。</p><h1 id="推荐题目"><a href="#推荐题目" class="headerlink" title="推荐题目"></a>推荐题目</h1><ul><li><a href="https://www.luogu.com.cn/problem/P1028">P1028 数的计算</a></li><li><a href="https://www.luogu.com.cn/problem/P1036">P1036 选数</a></li><li><a href="https://www.luogu.com.cn/problem/P1464">P1464 Function</a></li><li><a href="https://www.luogu.com.cn/problem/P5534">P5534 【XR-3】等差数列</a></li><li><a href="https://www.luogu.com.cn/problem/P1192">P1192 台阶问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1025">P1025 数的划分</a></li><li><a href="https://www.luogu.com.cn/problem/P4994">P4994 终于结束的起点</a></li></ul><h1 id="比赛须知"><a href="#比赛须知" class="headerlink" title="比赛须知"></a>比赛须知</h1><p>命题人：虞正皓、待定</p><p>比赛时间：待定</p><p>赛后讲评：见压缩包（暂未公布）</p><p>题目数量：4题</p><h1 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h1><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><p>递归函数即自调用函数，在函数内部直接的或者间接地调用自己。在求解某些具有随意性的复杂问题时经常使用递归，如要求编写一个函数，将输入的任意长度的字符串反向输出。普通做法是将字符串放入数组中然后将数组元素反向输出即可，然而这里的要求是输入是任意长度的，总不能开辟一个很大的空间保存字符串吧？这时候递归就起作用了。递归采用了分治的思想，将整体分割成部分，从最小的基本部分入手，逐一解决，其中部分通常和整体具有相同的结构，这样部分可以继续分割，直到最后分割成基本部分。</p><p>递归函数必须定义一个终止条件，即什么情况下终止递归，终止继续调用自己，如果没有终止条件，那么函数将一直调用自己，知道程序栈耗尽，这时候等于是写了一个$Bug$!</p><p>总结递归的特点：</p><p>（1） 使用递归时，一定要有明确的终止条件！</p><p>（2） 递归算法解题通常代码比较简洁，但不是很容易读懂。</p><p>（3） 递归的调用需要建立大量的函数的副本，尤其是函数的参数，每一层递归调用时参数都是单独的占据内存空间，他们的地址是不同的，因此递归会消耗大量的时间和内存。而非递归函数虽然效率高，但相对比较难编程。</p><p>（4） 递归函数分为调用和回退阶段，递归的回退顺序是它调用顺序的逆序。</p><h3 id="2-实践"><a href="#2-实践" class="headerlink" title="2.实践"></a>2.实践</h3><p>斐波那契数列当$n$&gt;3时，第$n$个元素的值等于第$n$-1个元素和$n$-2个元素的和，当n不确定具体数值时，可以通过递归的方式实现</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Fib</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> Fib(n - <span class="number">1</span>) + Fib(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_fib</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fib1[n], fib2[n];</span><br><span class="line">    fib1[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    fib1[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    fib2[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    fib2[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        fib1[i] = Fib(i);</span><br><span class="line">        fib2[i] = fib2[i - <span class="number">1</span>] + fib2[i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;use func Fib() &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; fib1[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;use for loop &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; fib2[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终由递归得到的斐波那契数列和由$for$循环得到的数列相同。</p><p>阶乘问题同样可以通过递归实现，代码为<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Factorial</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> n * Factorial(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>当n=5时，函数的调用过程如下图所示</p><p><img src="https://s1.ax1x.com/2020/04/13/GX0eMD.png" alt="GX0eMD.png"></p><h2 id="递推"><a href="#递推" class="headerlink" title="递推"></a>递推</h2><p>递推也是经常被使用的一种<del>简单的</del>算法。递推是一种用若干步可重复的简单运算来描述复杂问题的方法。</p><p>递推的特点在于，每一项都和他前面的若干项由一定的关联，这种关联一般可以通过递推关系式来表示，可以通过其前面若干项得出某项的数据。</p><p>对于递推问题的求解一般从初始的一个或若干个数据项出发，通过递推关系式逐步推进，从而得出想要的结果，这种求解问题的方法叫递推法。其中，初始的若干数据项称为边界。</p><p>我们来看这样一道题目：<br>已知一对兔子，每个月可以生一对小兔子，小兔子出生后的第二个月会变成年兔子，会继续生小兔子。</p><ul><li>第一个月，我们有 1 对小兔子。</li><li>第二个月，我们有 1 对成年的兔子。</li><li>第三个月，我们有 1 对成年的兔子，有 1 对小兔子，共 2 对。</li><li>第四个月，我们有 2 对成年的兔子，有 1 对小兔子，共 3 对。</li><li>第五个月，我们有 3 对成年的兔子，有 2 对小兔子，共 5 对。</li></ul><p>现在我们希望知道第n个月，一共有多少只兔子。（兔子身体素质好，不会死掉。）<br>有可能你已经发现规律了，但是我们还是要来分析一下。</p><p>设第 $i$ 个月的兔子数量为 $F_i$，第 $i$ 月的成年兔子数量为 $a_i$，第 $i$ 月的小兔子数量为 $b_i$，那么 $F_i$ = $a_i$ + $b_i$。</p><p>第 $i$ 月的成年兔子，由第 $i$-1 个月的小兔子长大与第 $i$-1 月的成年兔子得到，也就是说，第 $i$-1 个月兔子的总数量，$a<em>i$ = $a</em>{i-1}$ + $b<em>{i-1}$ = $F</em>{i-1}$。</p><p>第 $i$ 月的小兔子，是由第 $i$-1 个月的成年兔子生的，也就是第 $i$-2 个月的成年兔子和小兔子，也就是 $i$-2 个月兔子的总数量，$b<em>i$ = $a</em>{i-1}$ = $a<em>{i-2}$ + $b</em>{i-1}$ = $F_{i-1}$。 </p><p>这样，我们就找到了这个题目的递推关系式，如果用 $F<em>i$ 代表第 $i$ 个月兔子的总数量，那么递推关系式为：$F_i$ = $F</em>{i-1}$ + $F_{i-2}$。边界值，我们知道 $F_1$ = $F_2$ = 1。那么，我们就可以写出代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f[<span class="number">1</span>] = <span class="number">1</span>, f[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>;i &lt;= n; ++i) &#123;</span><br><span class="line">    f[i] = f[i<span class="number">-1</span>] + f[i<span class="number">-2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盘点那些Apple设备的实用功能</title>
      <link href="2020-04-10-Apple%E5%AE%9E%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>2020-04-10-Apple%E5%AE%9E%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>很多人花了几千块钱甚至是几万块钱去买了MacBook和iPad。这几个实用技巧，你不知道就亏大了。<br><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdofkhk0skj30b406ygmc.jpg" alt=""></p><h2 id="截屏-标记"><a href="#截屏-标记" class="headerlink" title="截屏+标记"></a>截屏+标记</h2><p>苹果系统中的截屏和录屏、标记和剪辑功能一如它的其他产品设计，做得非常细致。在你的日常工作中，也许可以帮到你一些。</p><p>在 iPad 和 iPhone 当中，一般使用锁屏+音量加键截屏。截屏后自动变成缩略图，点击即可进行截图分享或标记。在 Safari 浏览器中截屏后，可以点击整页按钮，上下滑动截取整个页面，一般生成为 PDF 文件，方便保存。</p><p>在 iPad 当中使用 Apple Pencil ，可以从屏幕左下方边缘处向中心滑动，快速截屏和手绘标注。</p><p>在 Mac 当中，除了 <code>Shift+ Command+3</code> 截全屏，<code>Shift+Command+4</code> 截取所选区域，更新的系统增加了 <code>Shift+Command+5</code>，弹出截屏和录屏工具条。你可以截取整个屏幕、截取整个窗口和截取所选区域。其中，截取所选窗口自动生成为无背景的图片。你甚至可以用来截取桌面上的无背景图标。</p><p>右侧的<code>【选项】</code>中，可以选择存储位置、倒计时时长以及另外三个常规选项。</p><p>Mac 系统截图后，你可以用自带的预览工具进行绘图和标记，以及签名。身边有 iPhone 或 iPad，你可以点击右侧的图标进入标记连续互通模式。选择一个设备，马上开始更方便的触屏标记。</p><h2 id="录屏-剪辑"><a href="#录屏-剪辑" class="headerlink" title="录屏+剪辑"></a>录屏+剪辑</h2><p>在 iPad 或者 iPhone 中，主要在控制中心点击，然后开始录制。没有相关按钮，则可以在<code>【设置】</code>中找到<code>【控制中心】</code>-<code>【自定控制】</code>，把屏幕录制功能添加到控制中心。录屏内容保存到照片中后，你可以直接点击右上角的【编辑】，来快速进行一些常规操作，比如剪辑掉首尾多余内容、调整颜色、旋转、水平或垂直校正、镜像翻转、比例裁切……要进行更复杂的剪辑，直接点击右上角的三个点，选择免费的 iMovie 进行处理。</p><p>Mac 当中的基础录屏原先主要在 QuickTime 当中实现。打开 QuickTime 时，点击菜单栏的 <code>【文件】</code>-<code>【新建屏幕录制】</code>。该功能在升级后的系统，比如 Catalina 中，也被纳入到 <code>Shift+Command+5</code> 的快捷入口中。你可以选择录制整个屏幕或者录制选定区域。在录制前通过选项选择存储位置、声音源等等。</p><p>录制结束后，你可以直接摁下空格键通过预览打开，进行快速的首尾剪辑。也可以通过 QuickTime 打开，在菜单栏的<code>【编辑】</code>中进行旋转、翻转，移除音频或视频，修剪等操作。还可以在<code>【文件】</code>中点击<code>【导出为】</code>，选择你需要的分辨率，或者直接生成为音频。</p><p>值得一提的是，你可以把 iPhone 等苹果设备连接在 Mac 上，并在 QuickTime 中点击<code>【文件】</code>-<code>【新建影片录制】</code>，在录制按钮旁边选择录制设备和其他设置后，直接录制其他设备的内容。</p><h2 id="共享文件"><a href="#共享文件" class="headerlink" title="共享文件"></a>共享文件</h2><p>用手机随时调取电脑上的文件，管理所有云端存储，轻松扫描任何文档……很多人觉得可有可无苹果文件应用，其实可以更加高效。</p><p>为了保障安全，在 iPhone 或者 iPad 当中，几乎任何应用都不能直接读取其他应用里边儿的文件。所以，文件应用算是一个公共库。你可以把某些应用上接收到的文件事先存储到这里，然后用其他应用直接打开。比如 Safari 截取的长图直接先存储在这里然后通过微信来发送；比如把微信接收到的文档存储在文件后，用 Word 直接打开来编辑。</p><p>这是基础的共享。</p><p>除了保存在 iPhone 或 iPad 自己的存储中、 iCloud Drive 中，文件应用还支持多种第三方存储工具或应用，比如 Dropbox、OneDrive、百度云盘、QQ 的中转站……只要你的第三方应用支持，这些存储位置的所有内容都可以直接调取使用。</p><p>在文件上直接长按之后，你可以快速进行共享。更新到 iOS13.4 之后，你更可以直接共享某一个文件夹。</p><p>不止如此，通过右上角的三个点，点击【连接服务器】，输入你配置好的服务器，你甚至可以直接读取局域网内其他电脑比如 PC 上的文件。</p><h2 id="云端存储"><a href="#云端存储" class="headerlink" title="云端存储"></a>云端存储</h2><p>得益于对多种第三方存储工具的支持，文件应用本身就是一款很好的云存储管理工具。</p><p>比如我们常用的思维导图工具 XMind 本身是不带云存储功能的。但实际上，如果你打开它的 iOS 或者 iPadOS 客户端，你会发现，它的内容管理是基于文件应用的。我也会把 XMind 文件直接保存在 OneDrive 中的某文件夹里。在 PC 端或其他设备上做的导图，可以直接在手机或 iPad 上来补充。</p><p>又比如我们平常购物会收到很多电子发票，我并不认为收藏到某些票夹中会比较方便。为了避免遗漏，我会当下就保存起来，方便在固定时间处理。以京东发票为例，收到之后，直接点击共享，存储到文件，找到我常用的 OneDrive ，找到发票所在目录，直接保存。到了整理的时候，不用到处搜，在电脑上打开 OneDrive 的这个按日期排序文件夹，分分钟搞定。</p><p>类似的其他场景，你可以根据自己的工作和生活需要，去发掘。</p><h2 id="扫描文件"><a href="#扫描文件" class="headerlink" title="扫描文件"></a>扫描文件</h2><p>为了扫描文件，你可能安装了很多第三方应用，甚至是付费应用。但其实你可以在文件应用中点击右上角三个点，，点击<code>【扫描文稿】</code>，对准你要扫描的文档，自动识别或手动调整。然后你可以调整方向，调整色彩，微调，最终把它存储在特定的位置或共享给他人。</p><p>对了你可以在任何文件夹里长按空白位置，点击<code>【扫描文稿】</code>，快速开始扫描。当然，你也看到了，这里还可以快速新建文件夹。</p><p>多一点小发现，少花点冤枉钱。</p><h2 id="解压压缩"><a href="#解压压缩" class="headerlink" title="解压压缩"></a>解压压缩</h2><p>如果你收到了 zip 一类的文件压缩包，存储在文件应用中，是可以直接解压的。当然如果有需要，你也可以直接在文件应用中，对选中文件或文件夹进行压缩，然后再共享或发送。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你的下一台电脑，何必是电脑</title>
      <link href="2020-04-02-iPad-Pro/"/>
      <url>2020-04-02-iPad-Pro/</url>
      
        <content type="html"><![CDATA[<p>前几天苹果官方商城突然上架了新款的iPad Pro，起售价格6229元。</p><p>新冠肺炎蔓延全球，形势严峻，许多人翘首期盼的苹果发布会也被迫无限期推迟，新款的iPhone也将推迟发布，但是昨天苹果官方商城突然上架了新款的iPad Pro，其中11寸版本售价6229元，12.9寸版本起售价7899元。我们一起来看看这款产品！</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdf25jurnmj30ht0cqjvb.jpg" alt=""></p><h2 id="产品外观与接口"><a href="#产品外观与接口" class="headerlink" title="产品外观与接口"></a>产品外观与接口</h2><p>新款iPad Pro拥有银色和深空灰两种颜色，11寸版本机身尺寸为：247.6mm×178.5mm×5.9mm，重471g，12.9寸版本机身尺寸为：280.6mm×214.9mm×5.9mm，重614g。接口方面上下各两个扬声器，底部有Type-C接口，左侧有sim卡插槽。</p><h2 id="屏幕"><a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h2><p>两个尺寸版本的iPad Pro的屏幕除了尺寸不一致以外，其他参数均相同：2388 x 1668 像素分辨率，264 ppi，Liquid 视网膜显示屏；P3广色域，有防指纹涂层，最高亮度600nit，120Hz刷新率。iPad Pro上用的屏幕一直最顶级，这次自然也不会差。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdf277estbj30ht0cqq9s.jpg" alt=""></p><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p>iPad Pro此次搭载了最新的A12Z仿生芯片，M2协处理器，性能强悍，其拥有的8 核图形处理器可为 4K 视频剪辑、3D 设计和增强现实等任务带来流畅表现。根据苹果官方的说法，iPad Pro比很多Windows笔记本都要快！</p><h2 id="后置相机"><a href="#后置相机" class="headerlink" title="后置相机"></a>后置相机</h2><p>这次iPad Pro的后置相机进行了重大升级，搭载了1200W与1000万像素超广角镜头，另外还有激光扫描仪，根据苹果官方的介绍，这款特制的激光雷达扫描仪利用直接飞行时间 (dToF)，测量室内或室外环境中从最远五米处反射回来的光。它可从光子层面进行探测，并能以纳秒速度运行，<strong>甚至NASA在火星登陆任务中也会用到这项技术</strong>。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdf28s164oj30ht0fwtfk.jpg" alt=""></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>此次苹果还着力做了一款与iPad Pro配套的蓝牙键盘——“妙控键盘”，</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdf2a1zt4zj30f90bpgmd.jpg" alt=""></p><p>这款键盘可以随心所欲的调整iPad Pro的角度，支持背光和触摸板，几乎就等同于一款笔记本电脑键盘，让iPad Pro办公更加方便。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdf2b1kdsvj30h30fb45y.jpg" alt=""></p><p>iPad Pro搭载了苹果专门为平板开发的iPad OS，让iPad不再单纯地和iPhone手机运行同一套系统，反而更像是一款移动办公的电脑！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>此次iPad Pro提升很大：更强悍的A12Z芯片，顶级的视网膜显示屏，升级后置相机模组，更好用iPad OS。妙控键盘与出触控笔可以给用户带来顶级的移动办公体验。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gdf2ccgwr8j30cy08k776.jpg" alt=""></p><p>正如苹果宣传的：你的下一台电脑，何必是电脑？<br>相比较于安卓平板生态的混乱，苹果iPad一直都是体验最好的平板产品，如果你近期有购买平板计划的话，iPad Pro会是不错的选择。当然价格也相对昂贵。起售价6229元。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Apple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Round 2】3月月赛赛后总结</title>
      <link href="2020-03-29-yuesai3-2%E6%80%BB%E7%BB%93/"/>
      <url>2020-03-29-yuesai3-2%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="【Round-2】3月月赛总结："><a href="#【Round-2】3月月赛总结：" class="headerlink" title="【Round 2】3月月赛总结："></a>【Round 2】3月月赛总结：</h2><h3 id="比赛排名及分数"><a href="#比赛排名及分数" class="headerlink" title="比赛排名及分数"></a>比赛排名及分数</h3><p>🎉🎉🎉<strong>全部正确：高茂棋</strong></p><div class="table-container"><table><thead><tr><th style="text-align:center">名次</th><th style="text-align:center">姓名</th><th style="text-align:center">总分</th><th style="text-align:center">第一题得分</th><th style="text-align:center">第二题得分</th><th style="text-align:center">第三题得分</th><th style="text-align:center">第四题得分</th></tr></thead><tbody><tr><td style="text-align:center">#1</td><td style="text-align:center">高茂棋</td><td style="text-align:center">400  (55ms)</td><td style="text-align:center">100 (14ms)</td><td style="text-align:center">100 (15ms)</td><td style="text-align:center">100 (17ms)</td><td style="text-align:center">100 (9ms)</td></tr><tr><td style="text-align:center">#2</td><td style="text-align:center">刘致远</td><td style="text-align:center">400 (60ms)</td><td style="text-align:center">100 (18ms)</td><td style="text-align:center">100 (16ms)</td><td style="text-align:center">100 (16ms)</td><td style="text-align:center">100 (10ms)</td></tr><tr><td style="text-align:center">#3</td><td style="text-align:center">徐  端</td><td style="text-align:center">140 (15ms)</td><td style="text-align:center">100 (15ms)</td><td style="text-align:center">0</td><td style="text-align:center">40</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">#4</td><td style="text-align:center">曾兆兴</td><td style="text-align:center">100 (15ms)</td><td style="text-align:center">100 (15ms)</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">#5</td><td style="text-align:center">汤  宸</td><td style="text-align:center">100 (16ms)</td><td style="text-align:center">100 (16ms)</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">#6</td><td style="text-align:center">方   舟</td><td style="text-align:center">100 (17ms)</td><td style="text-align:center">100 (17ms)</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr></tbody></table></div><h3 id="AC第一人统计（每题第一个做对的人）"><a href="#AC第一人统计（每题第一个做对的人）" class="headerlink" title="AC第一人统计（每题第一个做对的人）"></a>AC第一人统计（每题第一个做对的人）</h3><div class="table-container"><table><thead><tr><th style="text-align:center">题目编号</th><th style="text-align:center">第一AC人</th></tr></thead><tbody><tr><td style="text-align:center">T1</td><td style="text-align:center">刘致远</td></tr><tr><td style="text-align:center">T2</td><td style="text-align:center">刘致远</td></tr><tr><td style="text-align:center">T3</td><td style="text-align:center">高茂棋</td></tr><tr><td style="text-align:center">T4</td><td style="text-align:center">高茂棋</td></tr></tbody></table></div><p>最后，感谢大家参加【Round 2】3月月赛，下一轮比赛【Round 1】4月月赛的时间为：2020.04.12 14:30，大家可以报名了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【空难纪实】哈德逊河奇迹</title>
      <link href="2020-03-22-%E5%93%88%E5%BE%B7%E9%80%8A%E6%B2%B3%E5%A5%87%E8%BF%B9/"/>
      <url>2020-03-22-%E5%93%88%E5%BE%B7%E9%80%8A%E6%B2%B3%E5%A5%87%E8%BF%B9/</url>
      
        <content type="html"><![CDATA[<p>在飞行当中，各种各样的意外都会突然降临，比如恶劣的天气、机械部件的突然失灵。当然还有一个自然界的因素——鸟。不过，这时候就凸显出一名机长的价值出来，一名经验丰富的机长完全可以力挽狂澜，凭借一己之力创造奇迹。本文的主角就是如此，七年前的今天，飞机在爬行过程中遭遇加拿大黑鹰撞击，导致两具发动机同时熄火，飞机完全失去动力，机组成员在确认无法安全抵达任何备降机场的情况下决定在哈迪逊河河面进行迫降。凭借着机长的娴熟技巧创造了零死亡的“哈迪逊河奇迹”。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd2mz10vxnj30hr05yjwr.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd2mzj5g9kj30ho0e7tl6.jpg" alt=""></p><p>2009年1月15日，纽约纽约拉瓜迪亚机场一片繁忙。全美航空1549号执飞北卡罗来纳州的夏洛特再转飞西雅图的日常航班，机长为加入全美航空30多年的沙林博格担任（Chesley<br>Sullenberger III），其之前有在美国空军驾驶F-4战机的经验。副驾驶为49岁的斯基尔斯（Jeffery<br>Skiles），这对于他们来说只是一场例行的任务而已。执飞本次航班的飞机为空中客车公司生产的A320-214，此次航班搭载150名乘客。A320于1988年推出，是第一款使用数字电传操纵飞行控制系统的商用客机。截至2011年，整个A320系列共交付了5000多架，仅次于波音737，是历史上销量第二的喷气式客机，整个A320系列飞机运营记录很好，有很高的可靠性。飞机成员刚从一小时前的夏洛特飞赴纽约，驾驶者为机长沙林博格，回程则由副驾驶斯基尔斯担任，轮流驾驶基本上是航空业的常态形式。全美1549正点从4号跑道正常起飞。这已是正副驾驶的第四天执飞任务，也是本轮的最后一次航班。他们不知道的是，经过半小时后他们的经历传遍全球。经过地面雷达指挥，飞机起飞后将朝东北方向爬升，离开拉瓜迪亚，然后缓慢掉头向南飞向夏洛特——没错这是山猫队的驻地。</p><p>在两具CFM-56航空发动机的强力推动下，1549号航班呼啸而上。此时1549号的飞行速度将近400公里每小时，起飞才一分半钟的时候，一群黑鹰进入了飞行员的视野，由于距离很近，根本来不急躲闪，瞬间就迎着鹰群撞击过去，飞机内也传来一声巨响。撞击13秒之后，机长沙林博格决定接手操控这架飞机。机长检查读数后发现两具发动机皆失去动力，马上让副驾驶拿出QRH。QRH（quickreference<br>handbook快速检查手册）是一本逐步讲解如何化解危机的指南手册。机长马上发出紧急信号通知塔台自己遭遇紧急情况。撞击鸟群，发动机失效，要求返航。此时机舱内也弥漫一股烟味，有什么东西燃烧了起来。按照正常正常，副驾驶逐条阅读QRH，机长操作每个程序，希望能够重新启动发动机。但是飞机的速度却不断往下掉，发动机彻底损坏了。也就是根本没有动力维持飞机返回拉瓜迪亚机场。但是1549号航班距离地面只有1400英尺（大约426米）。根据地面人员的引导距离飞机最近的机场是位于哈迪逊河畔的小型机场——帝特波罗机场，但也在好几公里之外。失去动力的1549号航班下坠速度很快，也没有机会降落在帝特波罗。机长开始播放广播要求乘客做好紧急迫降准备。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd2n0jb5c3j30ho0490vk.jpg" alt=""></p><p>飞行员反复尝试再次启动发动机，但是几次尝试都无济于事。根据沙林博格机长的判断，他们降落的跑道选择了一个不可思议的地方——哈迪逊河河道。相比于两旁的闹市区，只能两害相权取其轻了。随着襟翼伸出，飞机正式进入了紧急迫降程序，这时的高度只有250英尺（76.2米）空速170节（129千米/小时），副驾驶斯基尔斯逐一报出空速和高度，让机长有足够的注意力操控飞机。乘客们看着窗外的哈迪逊河，开始做好逃生准备。地面的雷达上已经搜寻不到300英尺一下的目标了，在雷达屏幕上1549号航班已经消失了。这是一场不成功便成仁的降落。</p><p>训练有素的乘务人员正在做好迫降前的工作，大声喊着“逃生门的人做好准备”。飞机猛烈撞击哈迪逊河水面，在水道上惊起一路的水浪，仿佛要冲向海底。飞行员只能看到风挡玻璃前翻滚的河水，飞机的机身正承受着巨大的冲击压力。终于飞机停了下来，然后浮在了水面上，并随着水波轻柔的摇晃。乘客惊魂未定的坐在自己位置，等待着下一步的行动。全美1549号航班降落在哈迪逊河道之后发现他们正在面临新的危机，机身在漏水。冰冷的河水不断的涌入机舱。机组成员刚刚创造了难度系数极高的飞行奇迹，但工作只是完成了一半。沙林博格机长走向机舱，副驾驶斯基尔斯留下来关闭飞行系统。机舱内的乘客也开始了自救行动，最靠近逃生门的旅客迅速打开逃生门，沙林博格机长和客舱成员开始了疏散作业。副驾驶斯基尔斯也完成了自己的操作，进入机舱协助同事疏散乘客。时间紧迫，乘客按照顺序都来到了机翼上，但是这艘不专业的“大船”正在逐渐的沉没。机舱内的河水已深过膝盖，而且水温很低，这一切都在减慢人自救的节奏。再三确认机舱没有乘客之后，沙林博格和斯基尔斯才最后走出了机舱。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd2n1ib9gzj30ho08ltd3.jpg" alt=""></p><p>拉瓜迪亚机场已经通知了纽约的紧急救助单位，海空一体的救援工作马上展开。在哈迪逊河上有150人正在冻得瑟瑟发抖等待着救援，他们在和死神赛跑。第一艘赶到的救援船只是用于在哈迪逊河上往返的载客渡轮，海巡船只和消防队随后赶到。而全美1549航班安全获救的画面也随着电视直播的信号传遍全国。国家运输安全委员会NTSB（National<br>Transportation Safety<br>Board）的调查人员也在关注这些画面。到了晚上，飞机几乎都全部沉入水中，并被水流推向河边，飞机被绑在了码头边。NTSB接手了以后的调查任务，他们要把飞机从水中打捞上来，并找一个能够详细检查飞机部件的地方。这些对于调查人员而言并不寻常，通常他们的主要任务是查出空难的原因，但1549号航班失事的原因很明显——鸟群撞击。机组成员反应，他们起飞不久就撞上了很多只鸟。但调查人员还不清楚是什么鸟类导致坠机事件，或者出了鸟击之外还有别的原因，机组成员的反应处理方式是否恰当。时任美纽约市市长的布隆伯格召开发布会宣布：“全美航空的机长巧妙地在哈迪逊河紧急迫降。”两名飞行员成为全美民众中的英雄。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd2n2355m5j30ho088dm7.jpg" alt=""></p><p>但调查人员的关注重点则是事故是如何发生的。为了证明鸟击是坠机的肇事原因，调查人员必须把飞机打捞上来，但飞机少了一个很关键的部件，飞机的另一个发动机遗失了。调查人员根据失落的大概范围，由于哈迪逊河河床比较复杂，启用声呐装置花费三天时间才找到了另外一具发动机。调查人员把搜寻到的所有残骸都搬运到新泽西的一间仓库里，以便更细致的调查事故发生的原因。搬运飞机的同时，另一队调查人员开始着手调查“黑匣子”所包含的内容。“黑匣子”位于受损最为严重的机尾，但是里面所包含的通话记录和飞航资料都保存的很完整。通话记录记录了飞行员对紧急情况所做出的反应，通过分析通话记录表明正副驾驶的表现都非常专业，意外发生的时候都终于自己的职责和角色。他们之所以完成的如此出色，另外一个原因是副驾驶斯基尔斯刚刚完成空客公司的驾驶培训，熟能生巧这句话在他身上得以应验。飞行员很熟悉紧急程序，这个时候最重要的就是遵循紧急程序。但调查员检查“重新启动引擎”的检查表时，有一个令人不安的发现。这份检查表实施的前提是，时间发生在两万英尺高空，飞行员有足够的时间完成长达三页的检查表，最后才提到如何在水中迫降。但事实是斯基尔斯仅仅有时间完成一页半的检查项目，机组成员应该花费时间准备如何正确的水中迫降，但是他们却在忙着重新启动发动机。过于复杂的检查表曾经造成过致命的坠机事故。1998年，一架瑞士航空客机失火机组成员要花费半个小时才能完成他们的检查表，但他们没有时间完成时间表，最后造成的坠机的事故。但在1549号航班上，令飞行员们最头大的还不是检查表，而是如何在水中迫降，一旦中间某个环节出现失误，就会有灾难性的后果发生。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 民航 </tag>
            
            <tag> 空难纪实 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【空难纪实】天堂哀鸣曲</title>
      <link href="2020-03-21-%E5%A4%A9%E5%A0%82%E5%93%80%E9%B8%A3%E6%9B%B2/"/>
      <url>2020-03-21-%E5%A4%A9%E5%A0%82%E5%93%80%E9%B8%A3%E6%9B%B2/</url>
      
        <content type="html"><![CDATA[<p>1977年3月27日傍晚，西班牙的特内里费岛上，发生了一起震惊世界的空难事故。两架大型客机在跑道上高速相撞爆炸，造成了583人死亡。这是至今人类史上最惨烈的空难，两机在地面上相撞后，熊熊的大火直到第二天下午才被扑灭。最令人遗憾的是，这场事故是由种种巧合、大意和失误共同织造的，只要有一个环节没出错，惨剧就不会发生。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd1gq4grv1j30hs07f40a.jpg" alt=""></p><h2 id="从炸弹袭击说起"><a href="#从炸弹袭击说起" class="headerlink" title="从炸弹袭击说起"></a>从炸弹袭击说起</h2><p>1977年3月27日，空难发生的数小时之前，特内里费岛还非常宁静祥和。下午1:15，忽然，从附近的大加那利机场传来了一个突发消息：机场发生了一起炸弹恐怖袭击，位置在机场大厅的花店。但这个炸弹威力较小，机场提前收到了警告，进行了疏散，所以只有8个人受伤。<br>花店爆炸事件本身并没有造成太大的损坏，但是不久后航空主管单位便接到电话说机场里还有一枚炸弹。为了安全起见，机场封闭疏散、全面搜查。于是，原本要在大加那利机场降落的国际航班，全部被转降到附近的特内里费岛上。<br>特内里费岛上的机场非常小，只有一条跑道，停机坪容量也很有限。从世界各地转降而来的班机大量涌入，顿时一片混乱，机场上挤满了等待重新起飞的飞机。</p><h2 id="焦急的两架飞机"><a href="#焦急的两架飞机" class="headerlink" title="焦急的两架飞机"></a>焦急的两架飞机</h2><p>花店爆炸事件发生了三个小时后，特内里费岛机场飞机仍滞留停满，人们的心情都焦急不堪，其中荷兰皇家航空4805号班机的机组人员更甚。他们早上9点31分从荷兰起飞，载着235名乘客，经过四小时的飞行后，原本是要降落在大加那利机场的，但现在也只能和其他飞机一样挤在这里，等待大加那利机场重新开放。<br>荷兰皇家航空有一项规定，严格限制一次飞行任务中机组人员的工作时间，超时大家都会受到严厉的处分。这是为了安全，防止疲劳驾驶。眼看着快超时了，机长赞顿非常焦急，为了节约时间，他决定在等待的时候给飞机加满油，如果起飞余下的航程就不再需要加油。<br>不远处美国泛美航空1736号的机长格鲁布同样心情不佳。他不想在特内里费机场停留，因为飞机起飞和降落是最容易出事故的阶段。考虑到大加那利机场应该只会短暂关闭几个小时，所以要求地面的航管允许他直接在上空盘等待大加那利机场重新开放。当然地面航管拒绝了他的要求，命令必须降落在特内里费机场。<br>荷航、泛美的两位机长都经验丰富、名声出众，不是刚出茅庐的毛头小子。然而命运却让他们在这样一个混乱的状况下在特内里费岛相遇，两人都无法预见未来一小时内会发生的悲剧……</p><h2 id="“左边第三个出口”"><a href="#“左边第三个出口”" class="headerlink" title="“左边第三个出口”"></a>“左边第三个出口”</h2><p>下午四点左右，大加那利机场终于检查完毕，准备重新开放，而停留在特内里费机场上的飞机们也准备再次起飞、前往原本的终点站大加那利。但此时大雾逐渐笼罩了机场，能见度变得很低。<br>由于泛美航空的乘客们没有下机，一直在原地等待，所以他们享有优先起飞的特权。飞机停在跑道的末端，需要滑行到跑道的起点去。然而，机长发现前方巨大的荷航挡住了他们的去路，跑道只有一条，泛美没办法绕开，所以不得不等荷航乘客重新登机，起飞离开才能行动。<br>折腾了大约一个小时，在下午16:56时，荷航被允许滑行前往跑道。与此同时，控制塔的工作人员也允许泛美尾随前往跑道。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd1grlhee1j30e803jaag.jpg" alt=""></p><blockquote><p>跑道示意图，右侧是跑道的起点，也就是起飞点，两机起初停在跑道的终点处。蓝线是泛美轨迹，淡蓝线是荷航轨迹，红星是相撞处，1、2、3、4代表各个出口（Wikipedia）</p></blockquote><p>跑道上有四个离开的出口，分别名为C1、C2、C3和C4。控制塔让泛美从“左边第三个出口”（C3出口）离开跑道、从外侧绕到跑道起飞点去。然而，控制塔发出这个命令的时候，泛美已滑行过了C1出口。机长便将左边第三个出口”理解成了“往前再数第三个出口”，也就是C4口。而且C3出口有一个135度掉头的拐弯，对泛美这种大型班机来说要在这么小的机场拐135度的弯是非常困难的。而C4拐弯只有45度，显然更加合理。最终泛美没有向控制塔报告确认可疑之处，决定自行前往到C4出口离开。<br>就是这段短短的路，让它走上了不归路。</p><h2 id="三方的混乱对话"><a href="#三方的混乱对话" class="headerlink" title="三方的混乱对话"></a>三方的混乱对话</h2><p>另一边，走在前方的荷航接受控制塔指令，滑行到了跑道起飞点，并调转180度，等待许可起飞。就在此时发生了巧合至极、又遗憾至极的沟通混乱。<br>副机长向控制塔请求起飞的许可，收到了一个“起飞后的航线航行许可”，但并没有“起飞许可”，这两者是绝对不同的。然而，机长却误以为他们已经获得了起飞许可。荷航开始加速滑行时，副机长用无线电告诉控制塔他们正在起飞，当时的控制塔工作人员并没有听清楚他浓重的荷兰口音，将“我们正在起飞”听成了“我们正在起飞点”，于是回答说“OK！原地待命吧，我们会通知你的！”<br>最戏剧性的不幸发生了。控制塔员工说后半截话的时候，无线电信号正巧被泛美汇报的“我们还在跑道上滑行”给干扰了。控制塔和泛美同时发话，令荷航班机的无线电设备产生了高频的噪音，所以荷航的机组人员悲剧地只听到了一句“OK！”，重要的信息就这样被遗漏。<br>实际上在飞行管制的时候是不能说“OK”这么口语化、不规范的指令的，根据黑盒子上的记录，荷航上的飞航工程师也曾开口质疑“到底控制塔授权让我们起飞了没”，但由于机长知道再不起飞，就会超时，于是贸然作出答复“授权了！”<br>当时的大雾一直不散，能见度只有300米，不论是荷航、泛美还是控制塔上的工作人员，都没有办法看到彼此。所以此时荷航完全不知道泛美在面前向自己缓缓滑来，因此推动油门杆，开始了起飞。</p><h2 id="最后9秒钟"><a href="#最后9秒钟" class="headerlink" title="最后9秒钟"></a>最后9秒钟</h2><p>下午17:03，泛美已经来到了C4出口前，准备拐弯离开，副机长忽然注意到跑道远方荷航的降落灯正在晃动、而且离他们越来越近，才发现荷航竟然正处于高速奔驰状态。然而距离两架飞机碰撞只剩下9秒了。<br>泛美机长立即全速推进想转头冲进旁边的草坪里，但为时过晚。正在加速、准备起飞的荷航甚至此时都还没发现前面有一架飞机，直到撞击前3.16秒，才终于看到前方浓雾中正在拼命躲闪的泛美班机，机长惊呼了：“天啊！”<br>3.16秒钟，一般人可能已吓懵。荷航的机长及时反应尽全力让飞机侧翻爬升，起飞角度之大、甚至在地面上刮出了一条20米的深沟。然而，荷航加满了油机身沉重，很难提起，相距100米的时候飞离了地面，虽然机头成功地越过了泛美，但是机身下半段及引擎依无力回天地以高速与泛美相撞。<br>荷航在撞击后依然保持着飞行的状态，但撞击破坏了左侧引擎和机翼，随即激烈翻滚、在空中150米处坠落，掉落在跑道上，因为惯性还滑动了300米。瞬间油箱满载的荷航爆炸变成了一团火球，几乎将整部飞机焚化。</p><h2 id="大雾中的熊熊大火"><a href="#大雾中的熊熊大火" class="headerlink" title="大雾中的熊熊大火"></a>大雾中的熊熊大火</h2><p>碰撞发生的时候，控制塔上的工作人员只听见爆炸声、看不清眼前的跑道上发生了什么，误以为机场遇到了炸弹袭击。撞击发生后，是另一架在机场上方盘旋的飞机看到了火光和浓烟、随后通知控制塔，地面上的人才知道大事不妙。<br>消防人员急忙赶来，发现了变成火球的荷航，但雾气浓重加上浓烟滚滚，他们竟然完全不知道几百米外还有一架同样也在燃烧的飞机。直到20分钟后，才发现赶过去抢救。荷航完全困于火海中，根本无法接近，幸存者机会渺茫，所以抢救工作集中于泛美班机。荷航的大火烧了整整一天，直到第二天下午才被扑灭，除了飞机左翼和机尾还能看出大致的模样外，其他部分都已全部变形，几乎所有遇难者的遗体也都被烧得无法辨认。<br>在这起震惊全球的事故中，共有583人死亡，荷航234名乘客和14名机组人员，全部丧生；而被撞的泛美上共死亡326位乘客和9个机组人员，大部分死于爆炸后的大火。撞击的位置是飞机中段，所以幸存者基本都在机首和机尾处，其中机长、副机长和飞航工程师都幸运地逃过劫难。<br>意外的炸弹袭击、没有合适的雷达设备、机场容纳能力不足、管理混乱、特内里费岛上容易起雾、无线电通讯问题、荷航副机长的口音、沟通中使用的不标准用词、到荷航机长不专业的急躁心态……种种因素终究酿成了这桩损失惨重的悲剧。这起空难在航天史上留下了悲怆的一笔，也让人们从中学到了很多珍贵的教训。我们多希望，特内里费空难能永远保留着最惨烈空难的记录，再也不要有后来者来超越它。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 民航 </tag>
            
            <tag> 空难纪实 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷网校《深入浅出程序设计竞赛·基础篇》评测</title>
      <link href="2020-03-20-%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E8%AF%84%E6%B5%8B/"/>
      <url>2020-03-20-%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E8%AF%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>最近在“洛谷网校”买了《深入浅出程序设计竞赛·基础篇》（以下简称“深入浅出”）的试读版本。读了一个星期左右就过来写了篇评测。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gd1akiec2pj30ov0intfn.jpg" alt=""></p><h2 id="总体评价"><a href="#总体评价" class="headerlink" title="总体评价"></a>总体评价</h2><p>总的来说，这本书基本上实现了其在书名中所写的深入浅出的目标。</p><p>每章页首的思维导图清晰地告诉了读者本章的主要内容，并且覆盖了绝大多数入门选手需要掌握的知识。生动有趣的语言也便于读者理解相关内容。</p><p>例题的选取也比较合适，对浮点误差，未定义行为等常见错误都有所提及。</p><p>当然也有一些美中不足的地方：比如笔误较多（如果提前叫两个人审稿的话这样的错误可能会少不少），有些内容的编排顺序并不太恰当等问题。这些内容都将在下文详细说明。</p><h2 id="个人认为还需改进的地方"><a href="#个人认为还需改进的地方" class="headerlink" title="个人认为还需改进的地方"></a>个人认为还需改进的地方</h2><p>试读版中出现的多数笔误在 勘误表 中已有提及。这里主要说一些内容编排方面还需改进的地方。</p><p>考虑到本书面向初学者，对一些内容简略化，模糊化处理是可以理解的，也是比较推荐的一种做法。但这些内容如果在文中多次出现的话，还是应该注意一下表述的连贯性与一致性。</p><p>举个栗子，memset 函数的用法在 <code>P79</code>，<code>P180</code>，<code>P194</code>，<code>P310</code> 中均有所提及。 在 <code>P310</code> 页中详细叙述了原理，却得出了 memset 中间的参数只能是 0 或者 -1 这样不太恰当的结论。而在 <code>P194</code> 中，提到了将 memset 中间的参数替换为 127,128 这些其他数字的用法，并详细说明了这样初始化的结果，这两种表述的意思截然不同，可能会引发初学者的疑惑。</p><p>另外，在 P62 页中提到了变量重名的问题，但却没有详细叙述变量重名的后果，只是以”两个变量互不干涉“的措辞一笔带过，这个表述与 <code>P116</code> 中的变量作用域也有矛盾。</p><p>出现这样表述不一致性的问题还是应该尽量避免，对于当前无法解释清楚的内容，可以通过脚注的方式将原理叙述链接到其他页面，以确保表述的连贯性。</p><p>当然，对一些内容简略化处理并不意味着所有概念都一笔带过，有些比较重要或者可能引发误解的内容还是应该尽量叙述清楚。</p><p>P121 中提到了移位运算符的优先级低，代码中出现了 1&lt;&lt;n-1 这样的语句，却没有具体地解释优先级的关系是怎样的（读者可能会把这个语句理解为 1&lt;&lt;(n-1) 或是 (1&lt;&lt;n)-1，当然后面那种理解是错误的）。</p><p>（优先级的内容其实在 <code>P39</code>中提到了，但考虑到这两个页面相隔较为遥远，且当时读者可能还不知道移位运算符，可以在 <code>P121</code> 中用脚注指向运算优先级的内容，加深读者理解）</p><p>部分章节的顺序也可能需要进行调整，一些比较常用的内容，应该放到比较靠前的位置，从而尽量避免前面的内容要用到后面的知识的尴尬局面。</p><p>第十九章”进制与位运算“虽然归属于数学部分，但考虑到 C++ 语言特性等原因，放在语言基础部分可能更加合适。这样也避免了第十章”暴力枚举“中的”子集枚举“内容要参见后面内容的情况。</p><p>另外，关于满二叉树的概念，又 踩 雷 了</p><p>（如果还没搞清楚那几种二叉树的区别，请参考 <a href="https://oi-wiki.org/graph/tree-basic/#_4">OI-wiki</a> 的叙述）</p><p>UPD（2020/01/15）：考虑到这样的误译已经被广泛使用，继续使用这样的翻译其实也是可以理解的。</p><h2 id="与同类书籍的对比"><a href="#与同类书籍的对比" class="headerlink" title="与同类书籍的对比"></a>与同类书籍的对比</h2><p>与深入浅出对标的书有两本，一本是《信息学奥赛一本通》（以下简称“一本通”），另一本是《算法竞赛入门经典（第 2 版）》（以下简称”紫书“，当然紫书的内容相比基础篇更丰富一些）。</p><p>首先一本通仅凭它不等宽的代码字体，糟糕的排版，就已经输在起跑线上了，<strong>尽管有X码王的某位著名信奥教练参与编写</strong>。而且部分内容有抄袭紫书等现有资料之嫌。与之相比，深入浅出无论在排版质量，内容的广度与深度上，都完胜一本通。</p><p>而紫书和深入浅出相比，则各有可圈可点之处。紫书的提示和脚注较多，方便读者学习与理解，并在每章末附上了例题和习题表格，方便读者复习已经学习的知识。深入浅出则通过每章开头的思维导图，将该章的所有知识点串连了起来。当然深入浅出现在的小错误比较多，这点稍微影响了对深入浅出的印象分。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>目前看来《深入浅出·基础篇》还是一本值得推荐的入门教材。</p><p>同时继续催更洛谷赶快把剩下几本书写完（雾）。</p><p><strong>本文参考了@Studying Father和@Planet6174在<a href="https://www.luogu.com.cn/discuss/show/179906">《深入浅出》编排问题合集</a>整理的意见，非常感谢！</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 《深入浅出基础篇》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Round 1】3月月赛题解</title>
      <link href="2020-03-15-yuesai3-1/"/>
      <url>2020-03-15-yuesai3-1/</url>
      
        <content type="html"><![CDATA[<h2 id="【Round-1】3月月赛总结："><a href="#【Round-1】3月月赛总结：" class="headerlink" title="【Round 1】3月月赛总结："></a>【Round 1】3月月赛总结：</h2><h3 id="比赛排名及分数"><a href="#比赛排名及分数" class="headerlink" title="比赛排名及分数"></a>比赛排名及分数</h3><p>🎉🎉🎉<strong>全部正确：高贝凡</strong></p><div class="table-container"><table><thead><tr><th style="text-align:center">名次</th><th style="text-align:center">姓名</th><th style="text-align:center">总分</th><th style="text-align:center">第一题得分</th><th style="text-align:center">第二题得分</th><th style="text-align:center">第三题得分</th><th style="text-align:center">第四题得分</th></tr></thead><tbody><tr><td style="text-align:center">#1</td><td style="text-align:center">高贝凡</td><td style="text-align:center">400  (571ms)</td><td style="text-align:center">100 (16ms)</td><td style="text-align:center">100 (9ms)</td><td style="text-align:center">100 (33ms)</td><td style="text-align:center">100 (513ms)</td></tr><tr><td style="text-align:center">#2</td><td style="text-align:center">刘致远</td><td style="text-align:center">320 (81ms)</td><td style="text-align:center">100 (16ms)</td><td style="text-align:center">100 (11ms)</td><td style="text-align:center">100 (34ms)</td><td style="text-align:center">20 (26ms)</td></tr><tr><td style="text-align:center">#3</td><td style="text-align:center">汤   宸</td><td style="text-align:center">40 (16ms)</td><td style="text-align:center">40 (16ms)</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">#4</td><td style="text-align:center">方   舟</td><td style="text-align:center">40 (18ms)</td><td style="text-align:center">40 (18ms)</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">#5</td><td style="text-align:center">徐   端</td><td style="text-align:center">40 (18ms)</td><td style="text-align:center">40 (18ms)</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr></tbody></table></div><p>未参赛：杨皓迪（请假）、陈雨鑫（未报名）、虞正皓（命题人不参与）、李卓洋（请假）</p><h3 id="一血统计（每题第一个做对的人）"><a href="#一血统计（每题第一个做对的人）" class="headerlink" title="一血统计（每题第一个做对的人）"></a>一血统计（每题第一个做对的人）</h3><div class="table-container"><table><thead><tr><th style="text-align:center">题目编号</th><th style="text-align:center">第一AC人</th></tr></thead><tbody><tr><td style="text-align:center">T1</td><td style="text-align:center">高贝凡</td></tr><tr><td style="text-align:center">T2</td><td style="text-align:center">高贝凡</td></tr><tr><td style="text-align:center">T3</td><td style="text-align:center">高贝凡</td></tr><tr><td style="text-align:center">T4</td><td style="text-align:center">高贝凡</td></tr></tbody></table></div><p>最后，感谢大家参加【Round 1】3月月赛，下一轮比赛【Round 2】3月月赛的时间为：2020.03.29 14:30，大家可以报名了。</p><h2 id="XJL的成绩"><a href="#XJL的成绩" class="headerlink" title="XJL的成绩"></a>XJL的成绩</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a,b,c;</span><br><span class="line">    <span class="keyword">double</span> s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    s=a*<span class="number">0.2</span>+b*<span class="number">0.3</span>+c*<span class="number">0.5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.lf&quot;</span>,s);<span class="comment">//double型精度满足要求</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>没有高精度浮点数的小朋友要哭了，只有40分。</p><h2 id="XJL的烦恼"><a href="#XJL的烦恼" class="headerlink" title="XJL的烦恼"></a>XJL的烦恼</h2><p>很明显的递推，<strong>关键是上课讲过</strong></p><p>递推公式：$a[i]=a[i-1]+2*a[i-2]$</p><p>代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">35</span>];</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">1</span>; a[<span class="number">2</span>] =<span class="number">3</span>;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;=n; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = a[i - <span class="number">1</span>] + <span class="number">2</span>*a[i - <span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[n] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="XJL的樱花树"><a href="#XJL的樱花树" class="headerlink" title="XJL的樱花树"></a>XJL的樱花树</h2><p>很裸的混合背包，每棵樱花树可以看的次数有无限次，有限次（1或其他），我们可以尝试将二者用二进制拆分转换成多重背包，然后跑01背包的模板，思路很容易明白，那如何转换？可以参考P1776 宝物筛选_NOI导刊2010提高（02）<br>另外还要注意的是时间的问题，这里的时间是24小时制，在读入的时候要计算出可以观赏的时间</p><p>code:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> x1,yy,x2,y2,n,W,cnt,f[<span class="number">11000000</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> w;</span><br><span class="line"><span class="keyword">int</span> v;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line">&#125;a[<span class="number">11000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d:%d %d:%d&quot;</span>,&amp;x1,&amp;yy,&amp;x2,&amp;y2);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(yy&gt;y2)</span><br><span class="line">    &#123;</span><br><span class="line">        y2+=<span class="number">60</span>;</span><br><span class="line">        x2--;</span><br><span class="line">    &#125;</span><br><span class="line">    W=(x2-x1)*<span class="number">60</span>+y2-yy;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> w,v,num;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;w,&amp;v,&amp;num);</span><br><span class="line">    <span class="keyword">if</span> (num==<span class="number">0</span>) num=<span class="number">9999999</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=num;j&lt;&lt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    a[++cnt].w=j*w;</span><br><span class="line">    a[cnt].v=j*v;</span><br><span class="line">    num-=j;</span><br><span class="line">    <span class="keyword">if</span> (a[cnt].w&gt;W) &#123;num=<span class="number">0</span>;cnt--;<span class="keyword">break</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num!=<span class="number">0</span>) a[++cnt].w=num*w,a[cnt].v=num*v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> j=W;j&gt;=a[i].w;j--)</span><br><span class="line">    f[j]=max(f[j],f[j-a[i].w]+a[i].v);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,f[W]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="XJL的实验"><a href="#XJL的实验" class="headerlink" title="XJL的实验"></a>XJL的实验</h2><p>这道题其实有点难，涉及到质因数分解，纯数学题。</p><p>对于每一个数分解质因数，记录次方，如果$s_i$没有$m_1$的质因数，$s_i$就不可用，反之记录（m2*m1次方数）/si次方数，取最大值。注意是上取整~<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m1,m2,s,ans,num[<span class="number">30001</span>],a[<span class="number">30001</span>],c[<span class="number">30001</span>][<span class="number">2</span>],maxx,cnt,flag;</span><br><span class="line"><span class="keyword">bool</span> b[<span class="number">30001</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> kkz=m1;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=m1;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!b[i])</span><br><span class="line">        &#123;</span><br><span class="line">            a[++a[<span class="number">0</span>]]=i;</span><br><span class="line">            <span class="keyword">if</span>(!(kkz%i))</span><br><span class="line">            &#123;</span><br><span class="line">                  c[++c[<span class="number">0</span>][<span class="number">0</span>]][<span class="number">0</span>]=i;</span><br><span class="line">                  <span class="keyword">while</span>(!(kkz%i)) kkz/=i,c[c[<span class="number">0</span>][<span class="number">0</span>]][<span class="number">1</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=a[<span class="number">0</span>] &amp;&amp; a[j]*i&lt;=m1;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            b[i*a[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!(i%a[j])) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m1,&amp;m2);ans=<span class="number">-1</span>;findd();</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt++;flag=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;s);maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=c[<span class="number">0</span>][<span class="number">0</span>];i++)</span><br><span class="line">          <span class="keyword">if</span>(s%c[i][<span class="number">0</span>])</span><br><span class="line">          &#123;</span><br><span class="line">              flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">int</span> k=c[i][<span class="number">0</span>],aim=c[i][<span class="number">1</span>],now1=<span class="number">0</span>,now2=<span class="number">0</span>;</span><br><span class="line">              <span class="keyword">while</span>(!(s%k)) s/=k,now1++;</span><br><span class="line">              now2=aim*m2/now1;</span><br><span class="line">              <span class="keyword">if</span>(aim*m2%now1) now2++;</span><br><span class="line">              maxx=max(maxx,now2);</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans=maxx;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> ans=min(ans,maxx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LGR-070】洛谷3月月赛 I &amp; EE Round 1 Div.2题解</title>
      <link href="2020-03-10-%E6%B4%9B%E8%B0%B73%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
      <url>2020-03-10-%E6%B4%9B%E8%B0%B73%E6%9C%88%E6%9C%88%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="T1-苏联人"><a href="#T1-苏联人" class="headerlink" title="T1:苏联人"></a>T1:苏联人</h1><p>不考虑复杂度的模拟题，是个人都能 AC 吧。</p><p>代码瞎写的，可能可以简洁一点，但是不重要。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">8</span>, x, y;</span><br><span class="line"><span class="keyword">bool</span> v[N][N];</span><br><span class="line"><span class="keyword">char</span> s[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) rds(s[i], n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            v[i][j] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (s[i][j] == <span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">                v[i][j] = <span class="number">0</span>;</span><br><span class="line">                x = i - <span class="number">1</span>, y = j - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, --x, --y;</span><br><span class="line">                x = i - <span class="number">1</span>, y = j + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, --x, ++y;</span><br><span class="line">                x = i + <span class="number">1</span>, y = j - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, ++x, --y;</span><br><span class="line">                x = i + <span class="number">1</span>, y = j + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, ++x, ++y;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (s[i][j] == <span class="string">&#x27;R&#x27;</span>) &#123;</span><br><span class="line">                v[i][j] = <span class="number">0</span>;</span><br><span class="line">                x = i - <span class="number">1</span>, y = j;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, --x;</span><br><span class="line">                x = i + <span class="number">1</span>, y = j;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, ++x;</span><br><span class="line">                x = i, y = j - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, --y;</span><br><span class="line">                x = i, y = j + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (x &amp;&amp; x &lt;= <span class="number">8</span> &amp;&amp; y &amp;&amp; y &lt;= <span class="number">8</span> &amp;&amp; s[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                    v[x][y] = <span class="number">0</span>, ++y;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="built_in">putchar</span>(v[i][j] + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="T2-迫害"><a href="#T2-迫害" class="headerlink" title="T2:迫害"></a>T2:迫害</h1><p>贪心的构造，答案为 $2^m$×($n$+1)–1<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    rd(n), rd(m);</span><br><span class="line">    print(((modint)<span class="number">2</span> ^ m) * (n + <span class="number">1</span>) - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="T3-代价"><a href="#T3-代价" class="headerlink" title="T3:代价"></a>T3:代价</h1><p>考虑一种简单的删除方法，按照 1∼$n$ 的顺序依次删除，这时的代价为 $∑^{i=1}_{n–1}$$a_i$×$a_i$+1+$a_n$。</p><p>实际上这已经是一个<strong>较优解</strong>了，事实上对于$i$∈[1,$n$)，$a_i$,$a_i$+1,在最终的答案中一定都要被相乘一次。原因在于假设不被相乘，就意味着$a_i$,$a_i$+1其中有一个先被删除了，然而先被删除的时候一定有相乘过，因此矛盾。</p><p>具体方法是，假设最小的位置为 $p$，我们先按照 $1$∼$p$–1的顺序依次删除，再按照 $n$∼$p$+1的顺序依次删除即可。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[N];</span><br><span class="line">ll ans = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    rd(n), rda(a, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">1</span>; i &lt;= n; i = j, j = i + <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= n &amp;&amp; a[j] != <span class="number">1</span>) ++j;</span><br><span class="line">        ++ans;</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span> != j) ans += *min_element(a + i + <span class="number">1</span>, a + j);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = i + <span class="number">1</span>; k &lt; j - <span class="number">1</span>; k++)</span><br><span class="line">            ans += a[k] * a[k+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    print(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="T4-礼物"><a href="#T4-礼物" class="headerlink" title="T4:礼物"></a>T4:礼物</h1><p>不做讲评<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e8</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">bool</span> a[N], v[N];</span><br><span class="line">ll n, ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> m, P;</span><br><span class="line">vi p;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    rd(n), rd(m), rd(P), a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x; i &lt;= m; i++) &#123;</span><br><span class="line">        rd(x);</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">1</span>) <span class="keyword">return</span> print(<span class="number">-1</span>), <span class="number">0</span>;</span><br><span class="line">        a[x] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!v[i]) &#123;</span><br><span class="line">            p.pb(i);</span><br><span class="line">            <span class="keyword">if</span> (!a[p.size()]) ans = ans * i % P;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> &amp;j : p) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i * j &gt; n) <span class="keyword">break</span>;</span><br><span class="line">            v[i*j] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (!(i % j)) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    print(ans - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一群鬼才</title>
      <link href="2020-03-02-%E4%B8%80%E7%BE%A4%E9%AC%BC%E6%89%8D/"/>
      <url>2020-03-02-%E4%B8%80%E7%BE%A4%E9%AC%BC%E6%89%8D/</url>
      
        <content type="html"><![CDATA[<p>OI界新元素 ——Ak</p><p>近日，在OI界发现一种新元素，符号Ak，中文名称暂未命名。</p><p>Ak 元素的发现</p><p>珂学家在一个叫洛谷的峡谷中发现了一种表皮为AC色的鸟，这种鸟很强，但总说自己很弱。珂学家对此现象不解。后来，珂学家在这种鸟的体内提起出一种新物质，这种物质高温分解，出现铁和一种单质，这种单质就是Ak元素。这物质称为Ak化亚铁（FeAK,FAKe）</p><p>附： 亚铁极不稳定，会被空气中的O2（氧气或O2优化）氧化为三价铁离子，此时呈黄色（CE）或红色（WA）</p><p>Ak 元素性质</p><p>Ak单质一般由分子 Ak2_22​ 构成，容易以铁反应形成Ak化铁。这种元素大量存在于巨佬体内。</p><p>Ak与碘( I2_22​ ,阅读时当I处理)混合物 与 氧化碘（I2_22​O,IOI）或 二碳化硫氚（CTSC）等物质反应可以生成一类名为机房惨案的物质。</p><p>关于机房惨案这种物质</p><p>之前，由于机房惨案的过度使用，导致犇犇因此出现一日昏迷等症状，严重可能会引起犇犇的死亡。</p><hr><p>徘徊着的 在刷题的 你要写吗</p><p>疯狂的 骄傲着</p><p>那也曾是我的模样</p><p>被禁言的 被封号的 你要去哪</p><p>谜一样的沉默着的</p><p>故事你真的在听吗</p><p>我曾经当过红名神犇</p><p>也受过万人景仰我</p><p>曾经拥有着一切</p><p>转眼都飘散如烟</p><p>我曾经一周不登洛谷不再刷题</p><p>直到看见蓝名才是唯一的归宿</p><p>而我仍然还在幻想</p><p>我的明天</p><p>我会红吗还是掉灰</p><p>对我而言是重要的。</p><p>我曾经幻想我能变紫</p><p>只想永远地强大</p><p>我曾经沉迷收集模板</p><p>想挣扎无法自拔</p><p>我曾经像你像他像那普通用户</p><p>绝望着 渴望着 哭着 笑着 奔跑着</p><p>敲代码就这么敲</p><p>哪怕不是AC就是WA</p><p>写DP 还写贪心 就算是PC和CE</p><p>写DFS 还写暴力 就算我会RE和TLE</p><p>狂模拟 爱上高精 就算你会</p><p>我曾经当过红名神犇</p><p>也受过万人景仰</p><p>我曾经拥有着一切</p><p>转眼都飘散如烟</p><p>我曾经一周不登洛谷不再刷</p><p>直到看见蓝名才是唯一的归宿</p><p>我曾经幻想我能变紫只想水远地强大</p><p>我曾经沉迷收集模板想挣扎无法自拔</p><p>我曾经像你像他像那普通用户</p><p>绝望着渴银着哭着笑着奔跑着</p><hr><p>《noip修炼手册》</p><p>跟着我左手右手一个生成树</p><p>右手左手一片网络流</p><p>抄我题解 会爆零</p><p>你有没有恨死我</p><p>跟着我暴力枚举来个TLE</p><p>空间换时间是MLE</p><p>代码有太多</p><p>未知的猜测</p><p>停止工作算什么</p><p>键盘擦亮鼠标擦亮</p><p>屏幕深夜发着光</p><p>在最短路上面彷徨</p><p>无向图给我力量</p><p>这oj的机器</p><p>让我看着她叹息</p><p>这比赛的算法</p><p>有我才能对</p><p>蒟蒻也能蜕变成神犇！！！</p><hr><p>18年的提高组初赛：</p><p>A：「初赛难吗？」</p><p>B：「难炸了，我退役吧。」</p><p>A：「有多难？」</p><p>B：「这么说吧，您玩过三国杀吗？」</p><p>A：「玩过。」</p><p>B：「如果牌堆无限，甄姬洛神一次期望得到几张牌？」</p><p>鸦雀无声。。。</p><hr><p>陈独秀同志，请你坐下，你这种行为挡住了旁边的李大钊同志发言，这让胡适同志很难受，令鲁迅同志很难堪，朱自清同志表示很尴尬，钱钟书和徐志摩同志已经在撸袖子了，所以，为了你的生命财运亨通，请默默坐下，低调做人，你凳子上的钉子我已经给你拔掉了，凳子底下的地雷我也给你挖出来了，对面楼上的狙击手也被击毙了，下水道里的特务也被淹死了，现在能不能坐下来了？</p><hr><p>秀</p><p>天秀</p><p>陈独秀</p><p>蒂花之秀</p><p>造化钟神秀</p><p>李大钊陈独秀</p><p>维多利亚内衣秀</p><p>吾何时能及汝之秀</p><p>同福客栈李秀莲的秀</p><p>我滴龟龟你怎么这么秀</p><p>李云龙老婆秀芹的秀</p><p>求求你了不要再秀</p><p>米兰国际时装秀</p><p>湖南台真人秀</p><p>中国梦想秀</p><p>山清水秀</p><p>年代秀</p><p>刘秀</p><p>秀</p><hr><p>数学的老公是科学，物理的老爹是科学，化学的老爷是科学，信息的老祖是科学。</p><p>科学的尽头是美学，美学的尽头是哲学，哲学的尽头是神学，神学则是永无尽头</p><p>哦，多么多情的科学！！！</p><hr><p>小A被绑匪劫持到了山洞里，绑匪说：</p><p>“你tm要是能给我在3秒钟之内算出2^47-1等于多少，我就放了你。”</p><p>话音未落，小A就答道：</p><p>“0x7fffffffffffll。”</p><p>绑匪给小A松了绑，流泪说道：</p><p>“唉，我以前也是程序员，做这行的，不容易啊……”</p><hr><p>黑板上写着一道数学题：</p><p>a&gt;0, a+1&lt;0.</p><p>数竞大神小A对信息学大佬小B说：“你连初中数学都没学过吗？原不等式组显然无解。”</p><p>小B拿起了一根粉笔，对小A微微一笑，转身在黑板上写下了：</p><p>a=2147483647</p><hr><p>暴力碾标算，n 方过百万。乱搞出奇迹，骗分最神奇。</p><p>您强归您强，神牛漫山岗。您巨归您巨， OI 照大江。</p><p>双旋的splay，单旋的spaly，不旋的saply，O(1)的asply。</p><hr><p>无根树，有根树，搜索树，线段树，辞旧岁琼枝玉树；</p><p>有向图，无向图，拓扑图，连通图，迎新春大展宏图。</p><p>快使用线段树，哼哼哈嘿。快使用线段树，哼哼哈嘿。</p><p>编程之人切记，暴力无敌。是谁手写红黑树，风生水起。</p><hr><p>刷题是一种出路</p><p>枚举是一种思想</p><p>打表是一种勇气</p><p>搜索是一种信仰</p><p>剪枝是一种精神</p><p>骗分是一种日常</p><p>爆零是一种宿命</p><p>W A 是一种绝望</p><p>TLE 是一种痛苦</p><p>R E 是一种放弃</p><p>UKE 是一种无奈</p><p>A C 是一种原谅</p><p>A K 是一种希望</p><p>弃赛是一种颓废</p><p>吊打是一种必然</p><p>进队是一种奢望</p><p>NOI是一种梦想</p><hr><p>数学是火，点亮物理的灯；</p><p>物理是灯，照亮化学的路；</p><p>化学是路，通向生物的坑；</p><p>生物是坑，埋葬学理的人。</p><p>文言是火，点亮历史宫灯；</p><p>历史是灯，照亮社会之路；</p><p>社会是路，通向哲学大坑；</p><p>哲学是坑，埋葬文科生。</p><hr><p>题说：</p><p>世有学霸，然后有附加题。附加题常有，而学霸不常有。故虽有难题，祗辱于学渣之手，骈错与红叉之间，不以全对称也。</p><p>题之附加者，一题或难倒一片。做题考不知其能加分而做也。是题也，虽有附加之能，做不对，分不加，才美不外见，且欲与常规题等不可得，安求其能加分也。</p><p>水题好，暴力旧曾谙。NOIP放大法，不用DP不用贪。能不考前三？</p><hr><p>语文老师一回头， 鲁迅甘为孺子牛；</p><p>数学老师一回头， 六元六次都能求；</p><p>英语老师一回头， Sorry加上三克油；</p><p>物理老师一回头， 一根杠杆撬地球；</p><p>化学老师一回头， 二氧化碳变汽油；</p><p>劳动老师一回头， 破铜烂铁来走秀；</p><p>体育老师一回头， 黛玉也能踢足球；</p><p>政治老师一回头， 全班同学都梦游；</p><p>美术老师一回头， 蒙娜丽莎也风流；</p><p>音乐老师一回头，贝多芬呀也不牛;</p><p>信息老师一回头， 带着学生玩网游；</p><p>同学一回头，一口老血喷出口。</p><hr><p>七八个测试点，两三次CE前，旧时CSDN题解变，听取WA声一片</p><hr><p>暴力出奇迹，骗分过样例。</p><p>数学先打表，ＤＰ看运气。</p><p>穷举ＴＬＥ，递推ＵＫＥ。</p><p>模拟ＭＬＥ，贪心还ＣＥ。</p><p>想要骗到分，就要有方法。</p><p>图论背模板，数论背公式。</p><p>动规背方程，高精背代码。</p><p>如果都没背，干脆输样例。</p><hr><p>如果26个英文字母</p><p>ABCDEFGHIJKLMNOPQRSTUVWXYZ</p><p>分别等于</p><p>1234567891011121314151617181920212223242526</p><p>那么:</p><p>Knowledge(知识)</p><p>K+N+O+W+L+E+D+G+E =</p><p>11+14+15+23+12+5+4+7+5=96%</p><p>Workhard(努力工作)</p><p>W+O+R+K+H+A+R+D =</p><p>23+15+18+11+8+1+18+4 =98%</p><p>也就是说知识和努力工作对我们人生的影响可以达到96%和98%</p><p>Luck (好运) L+U+C+K= 12+21+3+11=47%</p><p>Love (爱情) L+O+V+E= 12+15+22+5=54%</p><p>看来，这些我们通常认为重要的东西却并没起到最重要的作用。</p><p>那么，什么可以决定我们100%的人生呢?</p><p>是Money (金钱)吗? M+O+N+E+Y=13+15+14+5+25=72%</p><p>看来也不是</p><p>是Leadership (领导能力)吗?</p><p>L+E+A+D+E+R+S+H+I+P=12+5+1+4+5+18+19+9+16=89%</p><p>还不是</p><p>金钱，权力也不能完全决定我们的生活。那是什么呢?</p><p>其实，真正能使我们生活圆满的东西就在我们自己身上!</p><p>iostream i+o+s+t+r+e+a+m=</p><p>9+15+19+20+18+5+1+13=100%</p><hr><p>屏幕在深夜微微发亮，</p><p>思想在那虚树路径上彷徨，</p><p>平面的向量交错生长，</p><p>织成忧伤的网。</p><p>剪枝减去我们的疯狂，</p><p>SPFA告诉我前途在何方，</p><p>01背包装下了忧伤，</p><p>笑颜洋溢脸庞。</p><p>键盘微凉，鼠标微凉，</p><p>指尖流淌，代码千行，</p><p>凸包周长，直径多长，</p><p>一进考场，全都忘光。</p><p>你在OJ上提交了千百遍，</p><p>却依然不能卡进那时限，</p><p>双手敲尽代码也敲尽岁月。</p><p>只有我一人，写的题解，凋零在OJ里面。</p><p>tarjan陪伴强连通分量，</p><p>生成树完成后思路才闪光，</p><p>欧拉跑过的七桥古塘，</p><p>让你，心驰神往。</p><p>队列进出图上的方向，</p><p>线段树区间修改求出总量，</p><p>可持久化留下的迹象，</p><p>我们，俯身欣赏。</p><p>数论算法，图论算法，</p><p>高斯费马，树上开花，</p><p>线性规划，动态规划，</p><p>时间爆炸，如何优化。</p><p>我在OI中辗转了千百天，</p><p>却不让我看AK最后一眼，</p><p>我用空间换回超限的时间。</p><p>随重新编译，测完样例，才发现漏洞满篇。</p><p>原来CE，只因选错语言 ， 其实爆零，只因忘写文件，</p><p>如果标算太难请坚定信念，</p><p>不如回头再看一眼题面，</p><p>以那暴力模拟向正解吊唁。</p><p>蒟蒻的蜕变，神犇出现，终将与Au擦肩，</p><p>屏幕在深夜微微发亮，我心在考场</p><p><a href="https://streamja.com/kW6Ze">歌曲视频</a></p><hr><p>一群伟大的科学家死后在天堂里玩藏猫猫，轮到爱因斯坦抓人，他数到100睁开眼睛，看到所有人都藏起来了，只见伏特趴在不远处。 　　爱因斯坦走过去说：“伏特，我抓住你了。” 　　伏特说：“不，你没有抓到我。” 　　爱因斯坦：“你不是伏特你是谁？” 　　伏特：“你看我身下是什么？” 　　爱因斯坦低头看到在伏特身下，居然是安培！ 　　伏特：“我身下是安培，我俩就是伏特/安培，所以你抓住的不是我，你抓住的是….” 　　…… 　　欧姆！ 　　爱因斯坦反应迅速，于是改口喊，“欧姆，我抓住你了！”　　 　　说时迟那时快，伏特和安培一个鱼跃站了起来，但是仍然紧紧抱在一起， 　　爱因斯坦大惑～ 　　他俩不紧不慢地说，现在，我们不再是欧姆，而是伏特×安培， 变成瓦特了～ 　　爱因斯坦觉得有道理，于是喊，那我终于抓到你了，瓦特！ 　　这时候，安培慢慢悠悠地说：“你看我俩这样抱着已经有好几秒了，所以，我们不再是瓦特，而是瓦特×秒， 　　我们现在是焦耳啦～” 　　　　爱因斯坦被说的哑口无言，于是默默地转过身，这时，他看到牛顿站在不远处，爱因斯坦于是跑过去说：“牛顿，我抓住你了。” 　　牛顿：“不，你没有抓到牛顿。” 　　爱因斯坦：“你不是牛顿你是谁？” 　　牛顿：“你看我脚下是什么？” 　　爱因斯坦低头看到牛顿站在一块长宽都是一米的正方形的地板砖上，不解。 　　牛顿：“我脚下这是一平方米的方块，我站在上面就是牛顿/平方米，所以你抓住的不是牛顿，你抓住的是帕斯卡” 　　爱因斯坦倍受挫折，终于忍无可忍地爆发了，于是飞起一脚，踹在牛顿身上，把牛顿踹出了那块一平米的地板砖， 　　然后吼到：“说！你还敢说你是帕斯卡？？” 　　牛顿慢慢地从地上爬起来，说：“不，我已经不是帕斯卡了，你刚刚让我牛顿移动了一米的距离，所以，我现在也是焦耳了”</p><hr><p>暴力出奇迹，骗分过样例。</p><p>数学先打表，ＤＰ靠运气。</p><p>穷举ＴＬＥ，递推ＵＫＥ。</p><p>模拟ＭＬＥ，贪心还ＣＥ。</p><p>要想骗到分，就要有方法。</p><p>图论背模板，数论背公式。</p><p>动规背方程，高精背代码。</p><p>如果都没背，干脆输样例。</p><p>模拟只会猜题意,贪心只能过样例,</p><p>数学上来先打表,动态一般看规律。</p><p>组合数学靠运气,计算几何瞎暴力,</p><p>图论一顿套模板,数论只会GCD。</p><hr><p>《满江红》</p><p>怒发冲冠，凭栏处、潇潇雨歇。抬望眼，满天WA，怒火激烈。三十AC尘与土，八千提交云和月。莫抄袭、没了AC记录，空悲切！</p><p>CE耻，犹未雪。蒟蒻恨，何时灭！驾程序，踏破题目列表。闭眼写出省选题，笑谈猛刷NOI。待从头、收拾A+B，朝天阙</p><p>《水调歌头》</p><p>AC几时有，把题问西天。 不知记录之中，WA占几篇。 我欲暴力归去，又恐超时爆零， 水题不胜刷。起舞切黑题，何似在人间！</p><p>转搜索，低dp，照图论。 不应有恨，何标程长卡不掉？ 人无快速算法，数据大可卡常，AK古难全。 但愿时限长，难度能锐减。</p><p>收集不易，点个赞怎么样</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运算符与条件分⽀专题复习讲义</title>
      <link href="2020-02-22-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E6%9D%A1%E4%BB%B6%E5%88%86%E2%BD%80%E4%B8%93%E9%A2%98%E5%A4%8D%E4%B9%A0%E8%AE%B2%E4%B9%89/"/>
      <url>2020-02-22-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E6%9D%A1%E4%BB%B6%E5%88%86%E2%BD%80%E4%B8%93%E9%A2%98%E5%A4%8D%E4%B9%A0%E8%AE%B2%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6141ygw8j30u016gdid.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc61428uxjj30u016gq5l.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6142h0ptj30u016gq4u.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6142pa4sj30u016gmzo.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6142zvpqj30u016gagl.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc61438h1lj30u016g762.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6143h4jzj30u016gacr.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6143qn2zj30u016g40f.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc61441hbgj30u016gju0.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc61449qq9j30u016g76i.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6144hynfj30u016gacc.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6144qm9jj30u016g40x.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc6144ykqmj30u016g767.jpg" alt=""><br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc614579l8j30u016gacj.jpg" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> C++讲义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度优先搜索与广度优先搜索</title>
      <link href="2020-02-20-%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
      <url>2020-02-20-%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<p>搜索算法是利用计算机的高性能来有目的地穷举一个问题的部分或所有的可能情况，从而求出问题的解的一种方法，有一定的方向性和目标性。</p><p>状态(state)是对问题在某一时刻进展情况的数学描述，或者是数学抽象。</p><p>每一个状态都会是答案的一个“可能的”解。状态的转移就是问题从一个状态转移到另一个状态，这样就可以进行搜索的一步步延伸，最后要得到的解也是其中的一个状态。</p><h1 id="广度优先搜索（BFS）"><a href="#广度优先搜索（BFS）" class="headerlink" title="广度优先搜索（BFS）"></a>广度优先搜索（BFS）</h1><p>基本思想：从初始状态S 开始，生成所有可能的状态。构成的下一层节点，检查是否出现目标状态G，若未出现，就对该层所有状态节点，分别顺序扩展。</p><p>生成再下一层的所有状态节点，对这一层的所有状态节点检查是否出现G，若未出现，继续按上面思想生成再下一层的所有状态节点，这样一层一层往下展开。直到出现目标状态为止。</p><p>——在路径的寻找问题上用得比较多</p><h2 id="具体过程："><a href="#具体过程：" class="headerlink" title="具体过程："></a>具体过程：</h2><ol><li>每次取出队列首元素（初始状态），进行拓展</li><li>然后把拓展所得到的可行状态都放到队列里面</li><li>将初始状态删除</li><li>一直进行以上三步直到队列为空。</li></ol><h4 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h4><blockquote><p>农夫去追他跑丢的牛，题目给出了他和牛的位置，用数字N和K表示，假定牛不动，问农夫移动到牛的位置的最小步数，农夫每次的移动有三种选择：位置加1，位置减1，位置乘2。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a,0,sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100000</span> +<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> vis[maxn], q[maxn] , d[maxn];</span><br><span class="line"><span class="keyword">int</span> n , k ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line">    mem(vis);mem(q);mem(d);</span><br><span class="line">    vis[s]=<span class="number">1</span>;</span><br><span class="line">    d[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> q_start =<span class="number">0</span> , q_end = <span class="number">0</span>;</span><br><span class="line">    q[q_end++] = s ;</span><br><span class="line">    <span class="keyword">while</span>(q_start&lt;q_end)&#123;</span><br><span class="line">        s = q[q_start++];</span><br><span class="line">        <span class="keyword">if</span>(s==e)<span class="keyword">return</span> ;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;<span class="number">0</span> &amp;&amp; !vis[s<span class="number">-1</span>])&#123;</span><br><span class="line">            vis[s<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">            q[q_end++]=s<span class="number">-1</span>;</span><br><span class="line">            d[s<span class="number">-1</span>]=d[s]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s&lt;maxn+<span class="number">1</span> &amp;&amp; !vis[s+<span class="number">1</span>])&#123;</span><br><span class="line">            vis[s+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            q[q_end++]=s+<span class="number">1</span>;</span><br><span class="line">            d[s+<span class="number">1</span>]=d[s]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((s&lt;maxn/<span class="number">2</span>+<span class="number">1</span>)&amp;&amp; !vis[<span class="number">2</span>*s])&#123;</span><br><span class="line">            vis[<span class="number">2</span>*s]=<span class="number">1</span>;</span><br><span class="line">            q[q_end++]=<span class="number">2</span>*s;</span><br><span class="line">            d[<span class="number">2</span>*s]=d[s]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    bfs(n,k);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;d[k]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h4><blockquote><p>给出一三维空间的地牢,要求求出由字符’S’到字符’E’的最短路径。移动方向可以是上，下，左，右，前，后，六个方向。每移动一次就耗费一分钟，要求输出最快的走出时间。不同c层的地图，相同ab坐标处是连通的。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>][<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">100</span>][<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> qa[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> qb[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> qc[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">int</span> sa,sb,sc;</span><br><span class="line">    <span class="keyword">int</span> ea,eb,ec;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;b;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;c;k++)&#123;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;s[i][j][k];</span><br><span class="line">                <span class="keyword">if</span>(s[i][j][k]==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                    sa=i;sb=j;sc=k;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(s[i][j][k]==<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                    ea=i;eb=j;ec=k;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> qsa=<span class="number">0</span>,qea=<span class="number">0</span>,qsb=<span class="number">0</span>,qeb=<span class="number">0</span>,qsc=<span class="number">0</span>,qec=<span class="number">0</span>;</span><br><span class="line">    qa[qea++]=sa;</span><br><span class="line">    qb[qeb++]=sb;</span><br><span class="line">    qc[qec++]=sc;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(qsa&lt;qea&amp;&amp;qsb&lt;qeb&amp;&amp;qsc&lt;qec)&#123;</span><br><span class="line">           sa=qa[qsa++];</span><br><span class="line">           sb=qb[qsb++];</span><br><span class="line">           sc=qc[qsc++];</span><br><span class="line">        <span class="keyword">if</span>(sa==ea &amp;&amp; sb==eb &amp;&amp; sc==ec)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sa&lt;a<span class="number">-1</span>&amp;&amp;s[sa+<span class="number">1</span>][sb][sc]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            s[sa+<span class="number">1</span>][sb][sc]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            qa[qea++]=sa+<span class="number">1</span>;</span><br><span class="line">            d[sa+<span class="number">1</span>][sb][sc]=d[sa][sb][sc]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(sa&gt;<span class="number">0</span>&amp;&amp;s[sa<span class="number">-1</span>][sb][sc]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            s[sa<span class="number">-1</span>][sb][sc]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            qa[qea--]=sa<span class="number">-1</span>;</span><br><span class="line">            d[sa<span class="number">-1</span>][sb][sc]=d[sa][sb][sc]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(sb&lt;b<span class="number">-1</span>&amp;&amp;s[sa][sb+<span class="number">1</span>][sc]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            s[sa][sb+<span class="number">1</span>][sc]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            qb[qeb++]=sb+<span class="number">1</span>;</span><br><span class="line">            d[sa][sb+<span class="number">1</span>][sc]=d[sa][sb][sc]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">if</span>(sb&gt;<span class="number">0</span>&amp;&amp;s[sa][sb<span class="number">-1</span>][sc]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            s[sa][sb<span class="number">-1</span>][sc]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            qb[qeb--]=sb<span class="number">-1</span>;</span><br><span class="line">            d[sa][sb<span class="number">-1</span>][sc]=d[sa][sb][sc]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sc&lt;c<span class="number">-1</span>&amp;&amp;s[sa][sb][sc+<span class="number">1</span>]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            s[sa][sb][sc+<span class="number">1</span>]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            qc[qec++]=sc+<span class="number">1</span>;</span><br><span class="line">            d[sa][sb][sc+<span class="number">1</span>]=d[sa][sb][sc]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sc&gt;<span class="number">0</span>&amp;&amp;s[sa][sb][sc<span class="number">-1</span>]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            s[sa][sb][sc<span class="number">-1</span>]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            qc[qec--]=sc<span class="number">-1</span>;</span><br><span class="line">            d[sa][sb][sc<span class="number">-1</span>]=d[sa][sb][sc]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!flag)<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO ANSWER&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;d[ea][eb][ec]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="深度优先搜索（DFS）"><a href="#深度优先搜索（DFS）" class="headerlink" title="深度优先搜索（DFS）"></a>深度优先搜索（DFS）</h1><p>基本思想：从初始状态，生成搜索树下一层任一个结点，检查是否出现目标状态，若未出现，以此状态利用规则生成再下一层任一个结点，再检查，重复过程一直到叶节点（即不能再生成新状态节点），当它仍不是目标状态时，回溯到上一层结果，取另一可能扩展搜索的分支。采用相同办法一直进行下去，直到找到目标状态为止。</p><p>符合栈的先进后出（FILO）的性质。</p><h2 id="具体过程：-1"><a href="#具体过程：-1" class="headerlink" title="具体过程："></a>具体过程：</h2><p>1 每次取出栈顶元素，对其进行拓展。<br>2 若栈顶元素无法继续拓展，则将其从栈中弹出。继续1过程。<br>3 不断重复直到获得目标状态（取得可行解）或栈为空（无解）。</p><h4 id="例一-1"><a href="#例一-1" class="headerlink" title="例一"></a>例一</h4><p>输入n，输出能整除数字n的数字串，该串只有0,1两个数字构成。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> s ,<span class="keyword">int</span> step )</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(step&gt;<span class="number">20</span>||flag)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(s % n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(s*<span class="number">10</span> , step+<span class="number">1</span>);</span><br><span class="line">    dfs(s*<span class="number">10</span>+<span class="number">1</span> , step+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))&#123;</span><br><span class="line">            <span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博弈论</title>
      <link href="2020-02-19-%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
      <url>2020-02-19-%E5%8D%9A%E5%BC%88%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>博弈是信息学和数学试题中常会出现的一种类型，算法灵活多变是其最大特点，而其中有一类试题更是完全无法用常见的博弈树来进行解答。 寻找必败态即为针对此类试题给出一种解题思路。</p><h1 id="此类问题一般有如下特点："><a href="#此类问题一般有如下特点：" class="headerlink" title="此类问题一般有如下特点："></a>此类问题一般有如下特点：</h1><p>1、博弈模型为两人轮流决策的非合作博弈。即两人轮流进行决策，并且两人都使用最优策略来获取胜利。</p><p>2、博弈是有限的。即无论两人怎样决策，都会在有限步后决出胜负。</p><p>3、公平博弈。即两人进行决策所遵循的规则相同。</p><h1 id="理论铺垫："><a href="#理论铺垫：" class="headerlink" title="理论铺垫："></a>理论铺垫：</h1><p>1、定义P-position和N-position：其中P代表Previous，N代表Next。直观的说，上一次move的人有必胜策略的局面是P-position，也就是“先手必败”，现在轮到move的人有必胜策略的局面是N-position，也就是“先手可保证必胜”。</p><p>（1）.无法进行任何移动的局面（也就是terminal position）是P-position；</p><p>（2）.可以移动到P-position的局面是N-position；</p><p>（3）.所有移动都导致N-position的局面是P-position。</p><p>2、P/N状态有如下性质：</p><p>（1）、若面临末状态者为获胜则末状态为胜态否则末状态为必败态。</p><p>（2）、一个局面是胜态的充要条件是该局面进行某种决策后会成为必败态。</p><p>（3）、一个局面是必败态的充要条件是该局面无论进行何种决策均会成为胜态<br>3、P点： 即必败点，某玩家位于此点，只要对方无失误，则必败；</p><p>   N点： 即必胜点，某玩家位于此点，只要自己无失误，则必胜。</p><p>4、取石子游戏算法实现</p><p>步骤1:将所有终结位置标记为必败点（P点）；</p><p>步骤2: 将所有一步操作能进入必败点（P点）的位置标记为必胜点（N点）</p><p>步骤3:如果从某个点开始的所有一步操作都只能进入必胜点（N点） ，则将该点标记为必败点（P点） ；</p><p>步骤4: 如果在步骤3未能找到新的必败（P点），则算法终止；否则，返回到步骤2</p><p>a.如果当前是P点，那么一步（向前）可以走到的都是N点</p><p>b.如果当前点未标明P/N属性，那么看看该点向后走是不是都只能到达N点，如果是，那么该点是P点。</p><p>c.如果该点是N点，倒无法确定什么。</p><p>如果没办法标一个点，那么异常结束。</p><h1 id="几种常见类型详解："><a href="#几种常见类型详解：" class="headerlink" title="几种常见类型详解："></a>几种常见类型详解：</h1><h4 id="一、巴什博弈"><a href="#一、巴什博弈" class="headerlink" title="一、巴什博弈"></a>一、巴什博弈</h4><p>1、问题模型：只有一堆n个物品，两个人轮流从这堆物品中取物，规定每次至少取一个，最多取m个，最后取光者得胜。</p><p>2、解决思路：当n=m+1时，由于一次最多只能取m个，所以无论先取者拿走多少个，后取者都能够一次拿走剩余的物品，后者取胜，所以当一方面对的局势是n%(m+1)=0时，其面临的是必败的局势。所以当n=（m+1)*r+s，（r为任意自然数，s≤m)时,如果先取者要拿走s个物品，如果后取者拿走x（≤m)个，那么先取者再拿走m+1-k个，结果剩下(m+1)(r-1)个，以后保持这样的取法，那么先取者肯定获胜。总之，要保持给对手留下（m+1）的倍数，就能最后获胜。</p><p>3、变形：条件不变，改为最后取光的人输。</p><p><strong>结论：当（n-1）%（m+1）==0时后手胜利。</strong></p><h4 id="二、威佐夫博奕"><a href="#二、威佐夫博奕" class="headerlink" title="二、威佐夫博奕"></a>二、威佐夫博奕</h4><p>1、问题模型：有两堆各若干个物品，两个人轮流从某一堆或同时从两堆中取同样多的物品，规定每次至少取一个，多者不限，最后取光者得胜。</p><p>2、解决思路：A：设（ai,bi）（ai ≤bi  ,i=0，1，2，…,n)表示两堆物品的数量并称其为局势，如果甲面对（0，0），那么甲已经输了，这种局势我们称为奇异局势。前几个奇异局势是：（0，0）、（1，2）、（3，5）、（4，7）、（6，10）、（8，13）、（9，15）、（11，18）、（12，20）。任给一个局势（a，b），如下公式判断它是不是奇异局势： ak =[k（1+√5）/2]，bk= ak + k  （k=0，1，2，…,n 方括号表示取整函数）。（证明见百度百科）</p><p>B：详见 <a href="http://www.freopen.com/?p=10512）">http://www.freopen.com/?p=10512）</a></p><p>3、满足上公式的局势性质：</p><p>（1）任何自然数都包含在一个且仅有一个奇异局势中。由于ak是未在前面出现过的最小自然数，所以有ak &gt; ak-1 ，而 bk= ak + k &gt; ak-1 + k-1 = bk-1 &gt; ak-1 。所以性质成立。</p><p>（2）任意操作都可将奇异局势变为非奇异局势。若只改变奇异局势（ak，bk）的某一个分量，那么另一个分量不可能在其他奇异局势中，所以必然是非奇异局势。如果使（ak，bk）的两个分量同时减少，则由于其差不变，且不可能是其他奇异局势的差，因此也是非奇异局势</p><p>（3）采用适当的方法，可以将非奇异局势变为奇异局势。假设面对的局势是（a,b），若 b = a，则同时从两堆中取走 a 个物体，就变为了奇异局势（0，0）；如果a = ak ，b &gt; bk，那么，取走b  – bk个物体，即变为奇异局势；如果 a = ak,b &lt; bk ,则同时从两堆中拿走 ak – ab – ak个物体,变为奇异局势（ ab – ak , ab – ak+ b – ak）；如果a &gt; ak ，b= ak + k,则从第一堆中拿走多余的数量a – ak 即可；如果a &lt; ak ，b= ak + k,分两种情况，第一种，a=aj （j &lt; k）,从第二堆里面拿走 b – bj 即可； 第二种，a=bj （j &lt; k）,从第二堆里面拿走 b – aj 即可。</p><p>4、结论：两个人如果都采用正确操作，那么面对非奇异局势，先拿者必胜；反之，则后拿者取胜。</p><h4 id="三、Fibonacci博弈"><a href="#三、Fibonacci博弈" class="headerlink" title="三、Fibonacci博弈"></a>三、Fibonacci博弈</h4><p>1、问题模型：</p><p> 有一堆个数为n的石子，游戏双方轮流取石子，满足： </p><p>（1）先手不能在第一次把所有的石子取完； </p><p>（2）之后每次可以取的石子数介于1到对手刚取的石子数的2倍之间（包含1和对手刚取的石子数的2倍）。 约定取走最后一个石子的人为赢家。</p><p>2、解决思路：</p><p>  当n为Fibonacci数时，先手必败。即存在先手的必败态当且仅当石头个数为Fibonacci数。证明：根据“Zeckendorf定理”（齐肯多夫定理）：任何正整数可以表示为若干个不连续的Fibonacci数之和。如n=83 = 55+21+5+2，我们看看这个分解有什么指导意义：假如先手取2颗，那么后手无法取5颗或更多，而5是一个Fibonacci数，那么一定是先手取走这5颗石子中的最后一颗，同理，接下去先手取走接下来的后21颗中的最后一颗，再取走后55颗中的最后一颗，那么先手赢。反证：如果n是Fibonacci数，如n=89：记先手一开始所取的石子数为y</p><p>（1）若y&gt;=34颗（也就是89的向前两项），那么一定后手赢，因为89-34=55=34+21&lt;2*34。<br>    反证：如果n是Fibonacci数，如n=89：记先手一开始所取的石子数为y</p><p>（2）y&lt;34时剩下的石子数x介于55到89之间，它一定不是一个Fibonacci数，把x分解成Fibonacci数：x=55+f[i]+…+f[j]，若，如果f[j]&lt;=2y，那么对B就是面临x局面的先手，所以根据之前的分析，后手只要先取f[j]个即可，以后再按之前的分析就可保证必胜。</p><p>3、练习题目：取石子游戏</p><h4 id="四、尼姆博弈"><a href="#四、尼姆博弈" class="headerlink" title="四、尼姆博弈"></a>四、尼姆博弈</h4><p>1、问题模型：有三堆各若干个物品，两个人轮流从某一堆取任意多的物品，规定每次至少取一个，多者不限，最后取光者得胜。</p><p>2、解决思路：用（a，b，c）表示某种局势，显证（0，0，0）是第一种奇异局势，无论谁面对奇异局势，都必然失败。第二种奇异局势是（0，n，n），只要与对手拿走一样多的物品，最后都将导致（0，0，0）。</p><p>  搞定这个问题需要把必败态的规律找出：(a,b,c)是必败态等价于a^b^c=0(^表示异或运算）。</p><p>  证明:</p><p>  (1)任何p(a,b,c)=0的局面出发的任意局面(a,b,c’);一定有p(a,b,c’)不等于0。否则可以得到c=c’。</p><p> （2）任何p(a,b,c)不等于0的局面都可以走向 p(a,b,c)=0的局面</p><p>  (3）对于 (4,9,13) 这个容易验证是奇异局势 </p><p>   其中有两个8，两个4，两个1，非零项成对出现，这就是尼姆和为  零的本质。别人要是拿掉13里的8或者1，那你就拿掉对应的9  中的那个8或者1；别人要是拿掉13里的4，你就拿掉4里的4；  别人如果拿掉13里的3，就把10作分解，然后想办法满 足非零项成对即可。</p><p>3、推广一：如果我们面对的是一个非奇异局势（a，b，c），要如何变为奇异局势呢？假设 a &lt; b&lt; c,我们只要将 c 变为 a^b,即可,因为有如下的运算结果: a^b^(a^b)=(a^a)^(b^b)=0^0=0。要将c 变为a^b，只从 c中减去 c-（a^b）</p><p>4、推广二：当石子堆数为n堆时，则推广为当对每堆的数目进行亦或之后值为零是必败态。</p><p>5、练习：hdoj 1847</p><h4 id="五、公平组合博弈（Impartial-Combinatori-Games）"><a href="#五、公平组合博弈（Impartial-Combinatori-Games）" class="headerlink" title="五、公平组合博弈（Impartial Combinatori Games）"></a>五、公平组合博弈（Impartial Combinatori Games）</h4><p>1、定义：</p><p>（1）两人参与。</p><p>（2）游戏局面的状态集合是有限。</p><p>（3）对于同一个局面，两个游戏者的可操作集合完全相同</p><p>（4）游戏者轮流进行游戏。</p><p>（5）当无法进行操作时游戏结束，此时不能进行操作的一方算输。</p><p>（6）无论游戏如何进行，总可以在有限步数之内结束。</p><p>2、模型：给定一个有向无环图和一个起始顶点上的一枚棋子，两名选手交替的将这枚棋子沿有向边进行移动，无法移动者判负。事实上，这个游戏可以认为是所有公平组合游戏（Impartial Combinatori Games）的抽象模型。其实，任何一个ICG都可以通过把每个局势看成一个顶点，对每个局势和它的子局势连一条有向边来抽象成这个“有向图游戏”。</p><p>3、解决思路：</p><p>现在，假定我们给出两个游戏G1 和 G2。如果我们只知道单个游戏的P-状态和N-状态我们能够正确地玩好游戏和G1 + G2吗？答案是否定的。不难看出两个P-状态的和总是P-状态，P-状态和N-状态的和总是N-状态。但是两个N-状态的和既可能是P-状态也可能是N-状态。因此，只知道单个游戏的P-状态和N-状态是不够的。</p><p>为了正确地玩好游戏和我们需要推广P-状态和N-状态，它就是Sprague-Grudy函数（或者简称为g函数）</p><p>4、Sprague-Grudy定理：</p><p>令N = {0, 1, 2, 3, …} 为自然数的集合。Sprague-Grundy 函数给游戏中的每个状态分配了一个自然数。结点v的Grundy值等于没有在v的后继的Grundy值中出现的最小自然数.</p><p>形式上：给定一个有限子集 S ⊂ N,令mex S(最小排斥值)为没有出现在S中的最小自然数。定义mex(minimal excludant)运算，这是施加于一个集合的运算，表示最小的不属于这个集合的非负整数。例如mex{0,1,2,4}=3、mex{2,3,5}=0、mex{}=0。</p><p>对于一个给定的有向无环图，定义关于图的每个顶点的Sprague-Garundy函数g如下：g(x)=mex{g(y)|y是x的后继}。</p><p>5、性质：</p><p>（1）所有的终结点所对应的顶点，其SG值为0，因为它的后继集合是空集——所有终结点是必败点（P点）。</p><p>（2）对于一个g(x)=0的顶点x，它的所有后继y都满足g(y)!=0——无论如何操作，从必败点（P点）都只能进入必胜点（N点）//对手走完又只能把N留给我们。</p><p>（3）对于一个g(x)!=0的顶点，必定存在一个后继点y满足g(y)=0——从任何必胜点（N点）操作，至少有一种方法可以进入必败点（P点）//就是那种我们要走的方法。</p><p>6、应用：</p><p>（1）可选步数为1-m的连续整数，直接取模即可，SG(x) = x % (m+1); </p><p>（2）可选步数为任意步，SG(x) = x; </p><p>（3）可选步数为一系列不连续的数，用mex(计算每个节点的值) </p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LGR-069】洛谷 2 月月赛 II &amp; EE Round 2 Div.2题解</title>
      <link href="2020-02-18-%E6%B4%9B%E8%B0%B72%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
      <url>2020-02-18-%E6%B4%9B%E8%B0%B72%E6%9C%88%E6%9C%88%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="T1-出言不逊"><a href="#T1-出言不逊" class="headerlink" title="T1:出言不逊"></a>T1:出言不逊</h1><p>贪心，找到出现次数最多的字符一直加就行了，注意数据范围很大，最好开<code>__int128</code>。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, ans, k;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line">__int128 l, m, x;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    rds(s, n), rd(l), m = n;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) ++c[s[i]];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> o : c) k = max(k, o.se);</span><br><span class="line">    x = k;</span><br><span class="line">    <span class="keyword">while</span> (m &lt; l) m += x, x *= <span class="number">2</span>, ++ans;</span><br><span class="line">    print(ans); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="T2-谔运算"><a href="#T2-谔运算" class="headerlink" title="T2:谔运算"></a>T2:谔运算</h1><p>每一位是独立的，按位考虑即可，取模直接自然溢出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ui N = <span class="number">5e5</span> + <span class="number">7</span>, M = <span class="number">32</span>;</span><br><span class="line">ui n, a[N], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    rd(n);</span><br><span class="line">    <span class="keyword">for</span> (ui i = <span class="number">1</span>; i &lt;= n; i++) rd(a[i]);</span><br><span class="line">    <span class="keyword">for</span> (ui i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        ui c = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (ui j = <span class="number">1</span>; j &lt;= n; j++) c += (a[j] &gt;&gt; i) &amp; <span class="number">1</span>;</span><br><span class="line">        ans += ((n * n - (n - c) * (n - c)) * (n * n - c * c) + (n - c) * (n - c) * c * c) * (<span class="number">1u</span> &lt;&lt; i);</span><br><span class="line">    &#125;</span><br><span class="line">    print(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T3-直接自然溢出啥事没有"><a href="#T3-直接自然溢出啥事没有" class="headerlink" title="T3:直接自然溢出啥事没有"></a>T3:直接自然溢出啥事没有</h1><p>考虑递推，设 fi 表示长度为 i 的「程序片段」，有 f0 = 1。</p><p>注意到，「程序片段」只能是「程序片段」+「语句」，若设 ci 表示长度为 i 的「语句」个数，则有递归<img src="https://s2.ax1x.com/2020/02/18/3F59qx.png" alt="3F59qx.png"></p><p>考虑什么东西能当「语句」。</p><p>首先，<code>;</code> 为一个「语句」，</p><p>除此之外，「语句」都必须由另外一个「程序片段」生成。</p><p>我们枚举这个「程序片段」的长度 j，设其为 A，则 A 的个数为 fj。</p><p>它会生成 {A}「语句块」和 {A}「语句」，此时出现了「语句」。</p><p>如果此时我们还想生成「语句」，那么只能走这样一条路：「语句」→「函数」→「值」→「语句」 。</p><p>然后就无法再生成更多的「语句」了。</p><p>「语句」→「函数」的过程实际上就是长度 +2或 +4。</p><p>「值」→「语句」的过程实际上就是长度 +1。</p><p>我们只需要考虑「函数」→「值」的过程，这也是最复杂的一个过程。</p><p>对于一个长度为 l 的「函数」A，它会变成：</p><ul><li>一个长度为 l 的值 <code>A</code>；</li><li>两个长度为 l+2 的值 <code>(A),A()</code>；</li><li>三个长度为 l+4 的值 <code>((A)),(A()),(A)()</code>；</li><li>四个长度为 l+6 的值 <code>(((A))),((A())),((A)()),((A))()</code>；</li><li>⋯</li><li>n个长度为 <code>l+(n−1)×2</code> 的值。</li></ul><p>于是我们可以写出下面这个程序：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ul f[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    rd(n), f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        f[i] = f[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; i - j - <span class="number">2</span> &gt;= <span class="number">0</span>; j++) &#123;</span><br><span class="line">            ul o = f[i-j<span class="number">-2</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; i - j - k - <span class="number">4</span> &gt;= <span class="number">0</span>; k += <span class="number">2</span>)</span><br><span class="line">                o += f[i-j-k<span class="number">-4</span>] * k;</span><br><span class="line">            f[i] += o * f[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    print(f[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>然而，数据范围要求我们在 O(n^2) 的时间复杂度内解决。</p><p>于是：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ul f[N], g[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    rd(n), f[<span class="number">0</span>] = g[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        f[i] = f[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; i - j - <span class="number">2</span> &gt;= <span class="number">0</span>; j++)</span><br><span class="line">            f[i] += f[i-j<span class="number">-2</span>] * f[j];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; i - j - <span class="number">4</span> &gt;= <span class="number">0</span>; j++)</span><br><span class="line">            f[i] += g[i-j<span class="number">-4</span>] * f[j]; </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; i + <span class="number">1</span> - j &gt;= <span class="number">0</span>; j += <span class="number">2</span>)</span><br><span class="line">            g[i+<span class="number">1</span>] += f[i+<span class="number">1</span>-j] * j;</span><br><span class="line">    &#125;</span><br><span class="line">    print(f[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="T4-相同的数字"><a href="#T4-相同的数字" class="headerlink" title="T4:相同的数字"></a>T4:相同的数字</h1><p>算答案的时候，将每个数加到目标值的过程按照质数划分成若干段，可以差分实现。对于长度为 k 的一段，选择用 c1 还是 c2 取决于 kc1 和 c2 哪个大，显然这玩意儿是单调的，那么前缀和一下即可。注意如果目标值是 m 且 m 不为质数，每个数加到 m 的最后一段可能只能使用 c1。</p><p>总时间复杂度 O(n+m+q)。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">7</span>, M = <span class="number">1</span> &lt;&lt; <span class="number">17</span> | <span class="number">1</span>, P = <span class="number">1e7</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, q, o, a[N], v[P], f[P], c1, c2;</span><br><span class="line">vi p;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; c[<span class="number">2</span>], e[<span class="number">2</span>];</span><br><span class="line">ll g[<span class="number">2</span>], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!x) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">int</span>)c[o].size() &lt; x + <span class="number">1</span>) c[o].resize(x + <span class="number">1</span>);</span><br><span class="line">    c[o][x] += k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">prework</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="function">vi <span class="title">d</span><span class="params">(p.size())</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = a[i];</span><br><span class="line">        <span class="keyword">if</span> (v[x] == v[m]) add(o, m - x, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            add(o, v[x] - x, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (m == v[m]) add(o, m - p[f[v[m]]<span class="number">-1</span>], <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> g[o] += m - p[f[v[m]]<span class="number">-1</span>];</span><br><span class="line">            ++d[f[v[x]]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (ui i = <span class="number">0</span>; p[i+<span class="number">1</span>] &lt; v[m]; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i) d[i] += d[i<span class="number">-1</span>];</span><br><span class="line">        add(o, p[i+<span class="number">1</span>] - p[i], d[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    e[o].resize(c[o].size());</span><br><span class="line">    <span class="keyword">for</span> (ui i = <span class="number">0</span>; i &lt; c[o].size(); i++) &#123;</span><br><span class="line">        e[o][i] = c[o][i] * i;</span><br><span class="line">        <span class="keyword">if</span> (i) e[o][i] += e[o][i<span class="number">-1</span>], c[o][i] += c[o][i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">solve</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = min((<span class="keyword">int</span>)<span class="number">1.0</span> * c2 / c1, (<span class="keyword">int</span>)c[o].size() - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> (e[o][k] + g[o]) * c1 + (c[o].back() - c[o][k]) * c2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; P; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!v[i]) p.pb(v[i] = i), f[i] = p.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (ui j = <span class="number">0</span>; j &lt; p.size() &amp;&amp; i * p[j] &lt; P &amp;&amp; p[j] &lt;= v[i]; j++)</span><br><span class="line">            v[i*p[j]] = p[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = P - <span class="number">1</span>; i; i--) <span class="keyword">if</span> (v[i] != i) v[i] = v[i+<span class="number">1</span>];</span><br><span class="line">    rd(n), rd(q), rd(o);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) rd(a[i]), m = max(m, a[i]);</span><br><span class="line">    prework(<span class="number">0</span>, m), prework(<span class="number">1</span>, v[m]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= q; i++) &#123;</span><br><span class="line">        rd(c1), rd(c2), c1 ^= o * ans, c2 ^= o * ans;</span><br><span class="line">        print(ans = min(solve(<span class="number">0</span>), solve(<span class="number">1</span>)));</span><br><span class="line">        ans &amp;= M - <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本比赛涉及的知识点：位运算、前缀和、差分、数论、组合计数、质数、贪心、递推</p>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【洛谷】【题解】P1424 小鱼的航程（改进版）</title>
      <link href="2020-02-05-%E9%A2%98%E8%A7%A3P1424%E3%80%90%E5%B0%8F%E9%B1%BC%E7%9A%84%E8%88%AA%E7%A8%8B%E6%94%B9%E8%BF%9B%E7%89%88%E3%80%91/"/>
      <url>2020-02-05-%E9%A2%98%E8%A7%A3P1424%E3%80%90%E5%B0%8F%E9%B1%BC%E7%9A%84%E8%88%AA%E7%A8%8B%E6%94%B9%E8%BF%9B%E7%89%88%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h1 id="题目传送门"><a href="#题目传送门" class="headerlink" title="题目传送门"></a><a href="https://www.luogu.com.cn/problem/P1424">题目传送门</a></h1><h1 id="视频讲解"><a href="#视频讲解" class="headerlink" title="视频讲解"></a><a href="https://streamja.com/PewX">视频讲解</a></h1><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这题看起来好难，不过做起来是真的简单。</p><p>总结一下条件：除了周末，其他时间每天游泳250公里。（这样一说就很简单明了了吧。）</p><p>如何判断是周末呢？假设小鱼从周n开始游，每游一天就是n+1，那如果n是6或者7，那就证明是周末，反之如果不是6或者7，那么就不是周末，那就要加上250。</p><p>最后是最重要的一点，如果现在是周7，那明天就不能是周8了，而是周1，所以当n==7的时候，<strong>n应该赋值为1</strong>。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,s=<span class="number">0</span>;                  <span class="comment">//周n开始游，过了k天，游了s公里</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)         <span class="comment">//要游k天，所以用循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n!=<span class="number">6</span> &amp;&amp; n!=<span class="number">7</span>) s+=<span class="number">250</span>;  <span class="comment">//如果不是周末则加250</span></span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">7</span>) n=<span class="number">1</span>;             <span class="comment">//如果是周7，那么赋值为1</span></span><br><span class="line">        <span class="keyword">else</span> n++;                 <span class="comment">//否则n+1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,s);  <span class="comment">//输出游了多少公里</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【洛谷】【题解】P1050 标题统计</title>
      <link href="2020-02-04-%E9%A2%98%E8%A7%A3P5015%E3%80%90%E6%A0%87%E9%A2%98%E7%BB%9F%E8%AE%A1%E3%80%91/"/>
      <url>2020-02-04-%E9%A2%98%E8%A7%A3P5015%E3%80%90%E6%A0%87%E9%A2%98%E7%BB%9F%E8%AE%A1%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h2 id="首先给大家介绍一个叫gets-s-的东东。"><a href="#首先给大家介绍一个叫gets-s-的东东。" class="headerlink" title="首先给大家介绍一个叫gets(s)的东东。"></a>首先给大家介绍一个叫gets(s)的东东。</h2><p>他有什么作用呢？</p><p><strong>将一行字符从文件或屏幕中读入，可以读空格，遇到换行跳出。</strong></p><p>此题也明显告诉是读入仅一行，我们可以这么做。</p><p>哇！我们现在可以在计算机里进行操作了耶！</p><p>在这里告诉大家noip很重要的一点，<strong>读完题要看数据范围</strong>。</p><p>为什么呢？因为我们可以理解题目后预估自己的水平后，结合数据范围估计一下自己大概往多少分的目标去。</p><p>扯回正题，那么我们如何知道他给了我们几个字符呢？我们之前一起读了进去，这咋办呢？</p><h2 id="再介绍一个东东——strlen-s"><a href="#再介绍一个东东——strlen-s" class="headerlink" title="再介绍一个东东——strlen(s)"></a>再介绍一个东东——strlen(s)</h2><p>这里的n指字符串的名称。</p><p>我们在代码中进行如下操作</p><p><code>int n=strlen(s);</code></p><p>就能把n记为s串的长度了。</p><p>接下来我们看到数据范围：</p><p>1&lt;=∣s∣&lt;=5</p><p>可以穷举一遍！</p><p>我们在程序中进行如下操作：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>然后，我们再采用if语句判断即可。</p><h3 id="40分："><a href="#40分：" class="headerlink" title="40分："></a>40分：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        ans++;</span><br></pre></td></tr></table></figure><h3 id="80分："><a href="#80分：" class="headerlink" title="80分："></a>80分：</h3><p>我暂时都不清楚80分是咋得的。。。</p><h3 id="100分："><a href="#100分：" class="headerlink" title="100分："></a>100分：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">ans++;</span><br></pre></td></tr></table></figure><h3 id="AC完整代码："><a href="#AC完整代码：" class="headerlink" title="AC完整代码："></a>AC完整代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line">    gets(s);</span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【洛谷】【题解】P1765 手机</title>
      <link href="2020-02-03-%E9%A2%98%E8%A7%A3P1765%E3%80%90%E6%89%8B%E6%9C%BA%E3%80%91/"/>
      <url>2020-02-03-%E9%A2%98%E8%A7%A3P1765%E3%80%90%E6%89%8B%E6%9C%BA%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h1 id="题目传送门"><a href="#题目传送门" class="headerlink" title="题目传送门"></a><a href="https://www.luogu.com.cn/problem/P1765">题目传送门</a></h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这道题应该没有那么生疏，大家都应该很熟悉。作为一名合格的OIer，我们要贯彻”暴力出奇迹“。所以……</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>在输入了字符串后，我们只需要判断每个字符在对应的各自下需要点的次数，最终加起来即可。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lf <span class="meta-keyword">else</span> <span class="meta-keyword">if</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> l,i,x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">200</span>];</span><br><span class="line">    gets(c);</span><br><span class="line">    l=<span class="built_in">strlen</span>(c);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;l;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c[i]==<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;h&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;i&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;j&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;k&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;l&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">4</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;t&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;u&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;v&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">1</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">2</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">3</span>;</span><br><span class="line">        lf(c[i]==<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">            x=x+<span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈谈NOIP和CSP-J/S</title>
      <link href="2020-02-02-CSP%E4%B8%8ENOIP/"/>
      <url>2020-02-02-CSP%E4%B8%8ENOIP/</url>
      
        <content type="html"><![CDATA[<h1 id="CSP-J-S-amp-NOIP"><a href="#CSP-J-S-amp-NOIP" class="headerlink" title="CSP-J/S &amp; NOIP"></a>CSP-J/S &amp; NOIP</h1><p>在OI圈里活过3个多月的人都知道，现在学习的C/C++/Pascal都是为了参加NOIP，也就是全国青少年奥林匹克信息学联赛。中国计算机学会（简称CCF）需要靠报名费来赚取利益但教育部不允许，经过一番纠缠后CCF决定停止举办NOIP，开设CSP-J/S（非专业级软件能力认证）。但是经过教育部与CCF的撕逼后CCF做出了退步：继续举办NOIP（改为免费）<strong>但继续举办CSP-J/S</strong>（具体情况不清楚），也就是说NOIP和CSP-J/S是没有关系的。</p><h1 id="CSP-J-S-与-NOIP的区别"><a href="#CSP-J-S-与-NOIP的区别" class="headerlink" title="CSP-J/S 与 NOIP的区别"></a>CSP-J/S 与 NOIP的区别</h1><p>对于两者之间的区别，最大的也就是在命题上的：</p><p>我本着去试一下水的心态参加了CSP-J 2019，本次CSP-J/S初赛全是选择题（包含几道判断题），可以说是降低了难度。复赛题比较水，难度也不是很大。</p><p>虽然CCF官方并没有具体说明NOIP是否会和CSP-J/S出一样题型，但是我们也要努力备战，勤刷题！</p><h1 id="附：官方链接、报名网站"><a href="#附：官方链接、报名网站" class="headerlink" title="附：官方链接、报名网站"></a>附：官方链接、报名网站</h1><p><a href="http://www.noi.cn/">全国青少年信息学奥林匹克竞赛官网</a><br>、<br><a href="http://rg.noi.cn/">报名网站</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【洛谷】【题解】P1049 装箱问题</title>
      <link href="2019-11-09-%E9%A2%98%E8%A7%A3P1049%E3%80%90%E8%A3%85%E7%AE%B1%E9%97%AE%E9%A2%98%E3%80%91/"/>
      <url>2019-11-09-%E9%A2%98%E8%A7%A3P1049%E3%80%90%E8%A3%85%E7%AE%B1%E9%97%AE%E9%A2%98%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p>这题也是模板题，有不会01背包的去看一下<a href="https://www.luogu.org/problem/P1048">P1048 采药</a>；</p><p>代码有稍稍改动：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;可能更粗暴</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;//再用max的时候一定要用algorithm头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[<span class="number">20009</span>][<span class="number">39</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> w[<span class="number">39</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> v,m;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;v,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;w[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=v;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j&gt;=w[i])</span><br><span class="line">&#123;</span><br><span class="line">f[i][j]=max(f[i<span class="number">-1</span>][j],f[i<span class="number">-1</span>][j-w[i]]+w[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">f[i][j]=f[i<span class="number">-1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,v-f[m][v]);<span class="comment">//注意不是f[m][v]!</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其实，有空间优化的好方法，考虑f[i][j] = max{ f[i-1][j - w[i]] + v [i], f[i-1][j] }发现 f[i] 的状态仅仅和 f[i-1] 有关，所以仅仅只需要保存 i-1 时刻 f 的状态。<br>考虑用一个一维数组 dp， dp[j] 表示背包容量 j 时的最大价值。 再考虑是否要放进物体 i 的之前，此时 dp[j] 数组保存的状态还是用前 i - 1 个物体放进容量为 j 时候的最大价值。所以可以直接用原来的 dp[j] 来代替原来的 f[i-1][j]。</p><p>对于状态方程的一项 f[i-1][j - w[i]] + v [i]$。因为考虑物体 i 时需要更新的 dp[j] （即f[i][j]）需要通过f[i-1][j - w[i]]来计算。为了保证使用的dp[j - w[i]]是仅考虑完第 i - 1 个物体时候的值，所以 dp[j - w[i]] 的值更新要发生在 dp[j]$之后。又因为 j - w[i] &lt; j，所以 dp[j] 需要逆序更新。</p><p>主代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= n; i++)</span><br><span class="line">&#123; </span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> j = v; j &gt;= w [i]; j++)</span><br><span class="line">   &#123;<span class="comment">//对于背包容量 j 小于物体容量w[i]的情况不需要考虑</span></span><br><span class="line">      dp[j] = max(dp[j], dp[j-w [i]] + v [i]); <span class="comment">//重点</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 洛谷 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
